
smart_stove_monitor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003ae0  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004d4  08003c70  08003c70  00013c70  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004144  08004144  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  08004144  08004144  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004144  08004144  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004144  08004144  00014144  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004148  08004148  00014148  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  0800414c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000201c8  2**0
                  CONTENTS
 10 .bss          0000016c  200001c8  200001c8  000201c8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000334  20000334  000201c8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
 14 .debug_info   000020f7  00000000  00000000  0002023b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000008c8  00000000  00000000  00022332  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000001f8  00000000  00000000  00022c00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000156  00000000  00000000  00022df8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0000c20b  00000000  00000000  00022f4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00002a4d  00000000  00000000  0002f159  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0003c19f  00000000  00000000  00031ba6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00001694  00000000  00000000  0006dd48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006c  00000000  00000000  0006f3dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001c8 	.word	0x200001c8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08003c58 	.word	0x08003c58

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001cc 	.word	0x200001cc
 80001cc:	08003c58 	.word	0x08003c58

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <ADC_IRQHandler>:
    // Enable ADC interrupt in NVIC
    NVIC_EnableIRQ(ADC_IRQn);
}

// ADC interrupt handler
void ADC_IRQHandler(void) {
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b082      	sub	sp, #8
 8000bac:	af00      	add	r7, sp, #0

    // Check if AWD flag is set
    if (ADC1 -> SR & ADC_SR_AWD) {
 8000bae:	4b1f      	ldr	r3, [pc, #124]	; (8000c2c <ADC_IRQHandler+0x84>)
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	f003 0301 	and.w	r3, r3, #1
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	d027      	beq.n	8000c0a <ADC_IRQHandler+0x62>

    	// For debug purpose
    	//printf("SR value before clearing AWD flag: ADC1->SR = %lu\n", ADC1->SR);

        // Clear the flag before handling the event
        ADC1 -> SR &= ~ADC_SR_AWD;
 8000bba:	4b1c      	ldr	r3, [pc, #112]	; (8000c2c <ADC_IRQHandler+0x84>)
 8000bbc:	681b      	ldr	r3, [r3, #0]
 8000bbe:	4a1b      	ldr	r2, [pc, #108]	; (8000c2c <ADC_IRQHandler+0x84>)
 8000bc0:	f023 0301 	bic.w	r3, r3, #1
 8000bc4:	6013      	str	r3, [r2, #0]
        // For debug purpose
        //printf("SR value after clearing AWD flag: ADC1->SR = %lu\n", ADC1->SR);

        // If ADC value is outside the threshold: turn on the buzzer & LED
        // Otherwise, ensure buzzer & LED are off state
        uint16_t adc_value = read_ADC();
 8000bc6:	f000 f835 	bl	8000c34 <read_ADC>
 8000bca:	4603      	mov	r3, r0
 8000bcc:	80fb      	strh	r3, [r7, #6]
        if (adc_value > 1109 || adc_value < 0) {
 8000bce:	88fb      	ldrh	r3, [r7, #6]
 8000bd0:	f240 4255 	movw	r2, #1109	; 0x455
 8000bd4:	4293      	cmp	r3, r2
 8000bd6:	d90c      	bls.n	8000bf2 <ADC_IRQHandler+0x4a>

        	// Turn on the buzzer connected to PA5
        	GPIOA -> ODR |= GPIO_ODR_ODR_5;
 8000bd8:	4b15      	ldr	r3, [pc, #84]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000bda:	695b      	ldr	r3, [r3, #20]
 8000bdc:	4a14      	ldr	r2, [pc, #80]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000bde:	f043 0320 	orr.w	r3, r3, #32
 8000be2:	6153      	str	r3, [r2, #20]

        	// Turn on the LED connected to PA6
        	GPIOA -> ODR |= GPIO_ODR_ODR_6;
 8000be4:	4b12      	ldr	r3, [pc, #72]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000be6:	695b      	ldr	r3, [r3, #20]
 8000be8:	4a11      	ldr	r2, [pc, #68]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000bea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000bee:	6153      	str	r3, [r2, #20]
 8000bf0:	e00b      	b.n	8000c0a <ADC_IRQHandler+0x62>
        }
        else {

        	// Turn off the buzzer connected to PA5
        	GPIOA -> ODR &= GPIO_ODR_ODR_5;
 8000bf2:	4b0f      	ldr	r3, [pc, #60]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000bf4:	695b      	ldr	r3, [r3, #20]
 8000bf6:	4a0e      	ldr	r2, [pc, #56]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000bf8:	f003 0320 	and.w	r3, r3, #32
 8000bfc:	6153      	str	r3, [r2, #20]

        	// Turn off the LED connected to PA6
        	GPIOA -> ODR &= GPIO_ODR_ODR_6;
 8000bfe:	4b0c      	ldr	r3, [pc, #48]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000c00:	695b      	ldr	r3, [r3, #20]
 8000c02:	4a0b      	ldr	r2, [pc, #44]	; (8000c30 <ADC_IRQHandler+0x88>)
 8000c04:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000c08:	6153      	str	r3, [r2, #20]
        // For debug purpose
        //printf("ADC value when interrupt is triggered. ADC Value: %lu\n", ADC1->DR);
    }

    // Check if the EOC interrupt flag is set
    if (ADC1->SR & ADC_SR_EOC) {
 8000c0a:	4b08      	ldr	r3, [pc, #32]	; (8000c2c <ADC_IRQHandler+0x84>)
 8000c0c:	681b      	ldr	r3, [r3, #0]
 8000c0e:	f003 0302 	and.w	r3, r3, #2
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d005      	beq.n	8000c22 <ADC_IRQHandler+0x7a>

        // Clear the EOC interrupt flag
        ADC1->SR &= ~ADC_SR_EOC;
 8000c16:	4b05      	ldr	r3, [pc, #20]	; (8000c2c <ADC_IRQHandler+0x84>)
 8000c18:	681b      	ldr	r3, [r3, #0]
 8000c1a:	4a04      	ldr	r2, [pc, #16]	; (8000c2c <ADC_IRQHandler+0x84>)
 8000c1c:	f023 0302 	bic.w	r3, r3, #2
 8000c20:	6013      	str	r3, [r2, #0]

        // No specific handling
    }
}
 8000c22:	bf00      	nop
 8000c24:	3708      	adds	r7, #8
 8000c26:	46bd      	mov	sp, r7
 8000c28:	bd80      	pop	{r7, pc}
 8000c2a:	bf00      	nop
 8000c2c:	40012000 	.word	0x40012000
 8000c30:	40020000 	.word	0x40020000

08000c34 <read_ADC>:


// Read ADC value
uint16_t read_ADC(void) {
 8000c34:	b480      	push	{r7}
 8000c36:	af00      	add	r7, sp, #0

    // Keep looping till conversion completes on regular channel
    while (!(ADC1->SR & ADC_SR_EOC));
 8000c38:	bf00      	nop
 8000c3a:	4b07      	ldr	r3, [pc, #28]	; (8000c58 <read_ADC+0x24>)
 8000c3c:	681b      	ldr	r3, [r3, #0]
 8000c3e:	f003 0302 	and.w	r3, r3, #2
 8000c42:	2b00      	cmp	r3, #0
 8000c44:	d0f9      	beq.n	8000c3a <read_ADC+0x6>

    // Return ADC value
    return ADC1->DR;
 8000c46:	4b04      	ldr	r3, [pc, #16]	; (8000c58 <read_ADC+0x24>)
 8000c48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000c4a:	b29b      	uxth	r3, r3

}
 8000c4c:	4618      	mov	r0, r3
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop
 8000c58:	40012000 	.word	0x40012000

08000c5c <GPIO_init>:
#include "gpio.h"



// GPIO initialization
void GPIO_init(void) {
 8000c5c:	b480      	push	{r7}
 8000c5e:	af00      	add	r7, sp, #0

    // Enable clock for GPIOA
    RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000c60:	4b3b      	ldr	r3, [pc, #236]	; (8000d50 <GPIO_init+0xf4>)
 8000c62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c64:	4a3a      	ldr	r2, [pc, #232]	; (8000d50 <GPIO_init+0xf4>)
 8000c66:	f043 0301 	orr.w	r3, r3, #1
 8000c6a:	6313      	str	r3, [r2, #48]	; 0x30

    // Set PA0 as input for motion sensor: bits 1:0 of MODER set to 00
    GPIOA -> MODER &= ~(GPIO_MODER_MODER0);
 8000c6c:	4b39      	ldr	r3, [pc, #228]	; (8000d54 <GPIO_init+0xf8>)
 8000c6e:	681b      	ldr	r3, [r3, #0]
 8000c70:	4a38      	ldr	r2, [pc, #224]	; (8000d54 <GPIO_init+0xf8>)
 8000c72:	f023 0303 	bic.w	r3, r3, #3
 8000c76:	6013      	str	r3, [r2, #0]

    // Set PA1 as output for LED: bits 3:2 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER1_0;
 8000c78:	4b36      	ldr	r3, [pc, #216]	; (8000d54 <GPIO_init+0xf8>)
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	4a35      	ldr	r2, [pc, #212]	; (8000d54 <GPIO_init+0xf8>)
 8000c7e:	f043 0304 	orr.w	r3, r3, #4
 8000c82:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER1_1);
 8000c84:	4b33      	ldr	r3, [pc, #204]	; (8000d54 <GPIO_init+0xf8>)
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	4a32      	ldr	r2, [pc, #200]	; (8000d54 <GPIO_init+0xf8>)
 8000c8a:	f023 0308 	bic.w	r3, r3, #8
 8000c8e:	6013      	str	r3, [r2, #0]

    // Set PA4 as analog input for temp sensor: bits 9:8 set to 11
    GPIOA -> MODER |= GPIO_MODER_MODER4;
 8000c90:	4b30      	ldr	r3, [pc, #192]	; (8000d54 <GPIO_init+0xf8>)
 8000c92:	681b      	ldr	r3, [r3, #0]
 8000c94:	4a2f      	ldr	r2, [pc, #188]	; (8000d54 <GPIO_init+0xf8>)
 8000c96:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000c9a:	6013      	str	r3, [r2, #0]

    // Set PA5 as output for buzzer: bits 11:10 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER5_0;
 8000c9c:	4b2d      	ldr	r3, [pc, #180]	; (8000d54 <GPIO_init+0xf8>)
 8000c9e:	681b      	ldr	r3, [r3, #0]
 8000ca0:	4a2c      	ldr	r2, [pc, #176]	; (8000d54 <GPIO_init+0xf8>)
 8000ca2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000ca6:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER5_1);
 8000ca8:	4b2a      	ldr	r3, [pc, #168]	; (8000d54 <GPIO_init+0xf8>)
 8000caa:	681b      	ldr	r3, [r3, #0]
 8000cac:	4a29      	ldr	r2, [pc, #164]	; (8000d54 <GPIO_init+0xf8>)
 8000cae:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000cb2:	6013      	str	r3, [r2, #0]

    // Set PA6 as output for debug LED: bits 13:12 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER6_0;
 8000cb4:	4b27      	ldr	r3, [pc, #156]	; (8000d54 <GPIO_init+0xf8>)
 8000cb6:	681b      	ldr	r3, [r3, #0]
 8000cb8:	4a26      	ldr	r2, [pc, #152]	; (8000d54 <GPIO_init+0xf8>)
 8000cba:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000cbe:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER6_1);
 8000cc0:	4b24      	ldr	r3, [pc, #144]	; (8000d54 <GPIO_init+0xf8>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	4a23      	ldr	r2, [pc, #140]	; (8000d54 <GPIO_init+0xf8>)
 8000cc6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000cca:	6013      	str	r3, [r2, #0]

    //-----------------------------I2C CONFIG--------------------------------

    // Enable clock for I2C1
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000ccc:	4b20      	ldr	r3, [pc, #128]	; (8000d50 <GPIO_init+0xf4>)
 8000cce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000cd0:	4a1f      	ldr	r2, [pc, #124]	; (8000d50 <GPIO_init+0xf4>)
 8000cd2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000cd6:	6413      	str	r3, [r2, #64]	; 0x40

    // Enable clock for GPIOB
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000cd8:	4b1d      	ldr	r3, [pc, #116]	; (8000d50 <GPIO_init+0xf4>)
 8000cda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cdc:	4a1c      	ldr	r2, [pc, #112]	; (8000d50 <GPIO_init+0xf4>)
 8000cde:	f043 0302 	orr.w	r3, r3, #2
 8000ce2:	6313      	str	r3, [r2, #48]	; 0x30

    // Set PB6 & PB7 to alternate function (AF) Mode
    GPIOB -> MODER &= ~(GPIO_MODER_MODER6);
 8000ce4:	4b1c      	ldr	r3, [pc, #112]	; (8000d58 <GPIO_init+0xfc>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	4a1b      	ldr	r2, [pc, #108]	; (8000d58 <GPIO_init+0xfc>)
 8000cea:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000cee:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER |= GPIO_MODER_MODER6_1;
 8000cf0:	4b19      	ldr	r3, [pc, #100]	; (8000d58 <GPIO_init+0xfc>)
 8000cf2:	681b      	ldr	r3, [r3, #0]
 8000cf4:	4a18      	ldr	r2, [pc, #96]	; (8000d58 <GPIO_init+0xfc>)
 8000cf6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000cfa:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER &= ~(GPIO_MODER_MODER7);
 8000cfc:	4b16      	ldr	r3, [pc, #88]	; (8000d58 <GPIO_init+0xfc>)
 8000cfe:	681b      	ldr	r3, [r3, #0]
 8000d00:	4a15      	ldr	r2, [pc, #84]	; (8000d58 <GPIO_init+0xfc>)
 8000d02:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000d06:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER |= GPIO_MODER_MODER7_1;
 8000d08:	4b13      	ldr	r3, [pc, #76]	; (8000d58 <GPIO_init+0xfc>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	4a12      	ldr	r2, [pc, #72]	; (8000d58 <GPIO_init+0xfc>)
 8000d0e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000d12:	6013      	str	r3, [r2, #0]

    // Set PB6 to AF4 (SCL) and PB7 to AF4 (SDA)
    GPIOB -> AFR[0] |= (4 << 24)| (4 << 28);
 8000d14:	4b10      	ldr	r3, [pc, #64]	; (8000d58 <GPIO_init+0xfc>)
 8000d16:	6a1b      	ldr	r3, [r3, #32]
 8000d18:	4a0f      	ldr	r2, [pc, #60]	; (8000d58 <GPIO_init+0xfc>)
 8000d1a:	f043 4388 	orr.w	r3, r3, #1140850688	; 0x44000000
 8000d1e:	6213      	str	r3, [r2, #32]

    // Set PB6 & PB7 output type to be open-drain
    GPIOB->OTYPER |= (GPIO_OTYPER_OT_6 | GPIO_OTYPER_OT_7);
 8000d20:	4b0d      	ldr	r3, [pc, #52]	; (8000d58 <GPIO_init+0xfc>)
 8000d22:	685b      	ldr	r3, [r3, #4]
 8000d24:	4a0c      	ldr	r2, [pc, #48]	; (8000d58 <GPIO_init+0xfc>)
 8000d26:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8000d2a:	6053      	str	r3, [r2, #4]

    // Enable pull-up resistors for SCL & SDA lines
    GPIOB -> PUPDR &= ~(GPIO_PUPDR_PUPDR6 | GPIO_PUPDR_PUPDR7);
 8000d2c:	4b0a      	ldr	r3, [pc, #40]	; (8000d58 <GPIO_init+0xfc>)
 8000d2e:	68db      	ldr	r3, [r3, #12]
 8000d30:	4a09      	ldr	r2, [pc, #36]	; (8000d58 <GPIO_init+0xfc>)
 8000d32:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8000d36:	60d3      	str	r3, [r2, #12]
    GPIOB -> PUPDR |= GPIO_PUPDR_PUPDR6_0 | GPIO_PUPDR_PUPDR7_0;
 8000d38:	4b07      	ldr	r3, [pc, #28]	; (8000d58 <GPIO_init+0xfc>)
 8000d3a:	68db      	ldr	r3, [r3, #12]
 8000d3c:	4a06      	ldr	r2, [pc, #24]	; (8000d58 <GPIO_init+0xfc>)
 8000d3e:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
 8000d42:	60d3      	str	r3, [r2, #12]


}
 8000d44:	bf00      	nop
 8000d46:	46bd      	mov	sp, r7
 8000d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d4c:	4770      	bx	lr
 8000d4e:	bf00      	nop
 8000d50:	40023800 	.word	0x40023800
 8000d54:	40020000 	.word	0x40020000
 8000d58:	40020400 	.word	0x40020400

08000d5c <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000d5c:	b480      	push	{r7}
 8000d5e:	b083      	sub	sp, #12
 8000d60:	af00      	add	r7, sp, #0
 8000d62:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000d64:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000d68:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000d6c:	f003 0301 	and.w	r3, r3, #1
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d014      	beq.n	8000d9e <ITM_SendChar+0x42>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000d74:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000d78:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000d7c:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d00c      	beq.n	8000d9e <ITM_SendChar+0x42>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000d84:	e001      	b.n	8000d8a <ITM_SendChar+0x2e>
  \brief   No Operation
  \details No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
 8000d86:	bf00      	nop
}
 8000d88:	bf00      	nop
 8000d8a:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000d8e:	681b      	ldr	r3, [r3, #0]
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d0f8      	beq.n	8000d86 <ITM_SendChar+0x2a>
    {
      __NOP();
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000d94:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000d98:	687a      	ldr	r2, [r7, #4]
 8000d9a:	b2d2      	uxtb	r2, r2
 8000d9c:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000d9e:	687b      	ldr	r3, [r7, #4]
}
 8000da0:	4618      	mov	r0, r3
 8000da2:	370c      	adds	r7, #12
 8000da4:	46bd      	mov	sp, r7
 8000da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000daa:	4770      	bx	lr

08000dac <timer_delay_ms>:
#include <stdint.h>



// ms delay using timer
void timer_delay_ms(uint32_t delay_ms) {
 8000dac:	b480      	push	{r7}
 8000dae:	b083      	sub	sp, #12
 8000db0:	af00      	add	r7, sp, #0
 8000db2:	6078      	str	r0, [r7, #4]
    // Enable TIM2 clock
    RCC -> APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000db4:	4b1a      	ldr	r3, [pc, #104]	; (8000e20 <timer_delay_ms+0x74>)
 8000db6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000db8:	4a19      	ldr	r2, [pc, #100]	; (8000e20 <timer_delay_ms+0x74>)
 8000dba:	f043 0301 	orr.w	r3, r3, #1
 8000dbe:	6413      	str	r3, [r2, #64]	; 0x40

    // Set 1kHz (from 16MHz source) to achieve 1ms for each count
    TIM2 -> PSC = (16000000 / 1000) - 1;
 8000dc0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000dc4:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8000dc8:	851a      	strh	r2, [r3, #40]	; 0x28

    // Load the desired delay
    TIM2 -> ARR = delay_ms;
 8000dca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000dce:	687b      	ldr	r3, [r7, #4]
 8000dd0:	62d3      	str	r3, [r2, #44]	; 0x2c

    // Start counting from 0
    TIM2 -> CNT = 0;
 8000dd2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	625a      	str	r2, [r3, #36]	; 0x24

    // Enable the counter: bit 0 of CR1 is set
    TIM2 -> CR1 |= TIM_CR1_CEN;
 8000dda:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000dde:	881b      	ldrh	r3, [r3, #0]
 8000de0:	b29b      	uxth	r3, r3
 8000de2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000de6:	f043 0301 	orr.w	r3, r3, #1
 8000dea:	b29b      	uxth	r3, r3
 8000dec:	8013      	strh	r3, [r2, #0]

    // Keep looping while Update Interrupt Flag (UIF) is not set in Status Register (SR)
    while (!(TIM2 -> SR & TIM_SR_UIF)) {}
 8000dee:	bf00      	nop
 8000df0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000df4:	8a1b      	ldrh	r3, [r3, #16]
 8000df6:	b29b      	uxth	r3, r3
 8000df8:	f003 0301 	and.w	r3, r3, #1
 8000dfc:	2b00      	cmp	r3, #0
 8000dfe:	d0f7      	beq.n	8000df0 <timer_delay_ms+0x44>

    // Clear UIF after it is set
    TIM2 -> SR &= ~(TIM_SR_UIF);
 8000e00:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e04:	8a1b      	ldrh	r3, [r3, #16]
 8000e06:	b29b      	uxth	r3, r3
 8000e08:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e0c:	f023 0301 	bic.w	r3, r3, #1
 8000e10:	b29b      	uxth	r3, r3
 8000e12:	8213      	strh	r3, [r2, #16]
}
 8000e14:	bf00      	nop
 8000e16:	370c      	adds	r7, #12
 8000e18:	46bd      	mov	sp, r7
 8000e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e1e:	4770      	bx	lr
 8000e20:	40023800 	.word	0x40023800

08000e24 <_write>:



// Redirect printf to ITM
int _write(int file, char *ptr, int len) {
 8000e24:	b580      	push	{r7, lr}
 8000e26:	b086      	sub	sp, #24
 8000e28:	af00      	add	r7, sp, #0
 8000e2a:	60f8      	str	r0, [r7, #12]
 8000e2c:	60b9      	str	r1, [r7, #8]
 8000e2e:	607a      	str	r2, [r7, #4]

    for (int i = 0; i < len; i++) {
 8000e30:	2300      	movs	r3, #0
 8000e32:	617b      	str	r3, [r7, #20]
 8000e34:	e009      	b.n	8000e4a <_write+0x26>

        ITM_SendChar(*ptr++);
 8000e36:	68bb      	ldr	r3, [r7, #8]
 8000e38:	1c5a      	adds	r2, r3, #1
 8000e3a:	60ba      	str	r2, [r7, #8]
 8000e3c:	781b      	ldrb	r3, [r3, #0]
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f7ff ff8c 	bl	8000d5c <ITM_SendChar>
    for (int i = 0; i < len; i++) {
 8000e44:	697b      	ldr	r3, [r7, #20]
 8000e46:	3301      	adds	r3, #1
 8000e48:	617b      	str	r3, [r7, #20]
 8000e4a:	697a      	ldr	r2, [r7, #20]
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	429a      	cmp	r2, r3
 8000e50:	dbf1      	blt.n	8000e36 <_write+0x12>
    }

    return len;
 8000e52:	687b      	ldr	r3, [r7, #4]
}
 8000e54:	4618      	mov	r0, r3
 8000e56:	3718      	adds	r7, #24
 8000e58:	46bd      	mov	sp, r7
 8000e5a:	bd80      	pop	{r7, pc}

08000e5c <I2C_init>:
#include "stm32f4xx.h"
#include <stdint.h>
#include <stdio.h>


void I2C_init(void) {
 8000e5c:	b480      	push	{r7}
 8000e5e:	af00      	add	r7, sp, #0

    // Reset I2C1
    RCC->APB1RSTR |= RCC_APB1RSTR_I2C1RST;
 8000e60:	4b14      	ldr	r3, [pc, #80]	; (8000eb4 <I2C_init+0x58>)
 8000e62:	6a1b      	ldr	r3, [r3, #32]
 8000e64:	4a13      	ldr	r2, [pc, #76]	; (8000eb4 <I2C_init+0x58>)
 8000e66:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000e6a:	6213      	str	r3, [r2, #32]
    RCC->APB1RSTR &= ~RCC_APB1RSTR_I2C1RST;
 8000e6c:	4b11      	ldr	r3, [pc, #68]	; (8000eb4 <I2C_init+0x58>)
 8000e6e:	6a1b      	ldr	r3, [r3, #32]
 8000e70:	4a10      	ldr	r2, [pc, #64]	; (8000eb4 <I2C_init+0x58>)
 8000e72:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8000e76:	6213      	str	r3, [r2, #32]

    // Set the peripheral clock frequency to be the default 16 MHz
    I2C1 -> CR2 = 16;
 8000e78:	4b0f      	ldr	r3, [pc, #60]	; (8000eb8 <I2C_init+0x5c>)
 8000e7a:	2210      	movs	r2, #16
 8000e7c:	809a      	strh	r2, [r3, #4]

    // Set SCL frequency to be 100 kHz (Sm mode)
    I2C1 -> CCR = 80;
 8000e7e:	4b0e      	ldr	r3, [pc, #56]	; (8000eb8 <I2C_init+0x5c>)
 8000e80:	2250      	movs	r2, #80	; 0x50
 8000e82:	839a      	strh	r2, [r3, #28]

    // Set max rise time
    I2C1 -> TRISE = 17;
 8000e84:	4b0c      	ldr	r3, [pc, #48]	; (8000eb8 <I2C_init+0x5c>)
 8000e86:	2211      	movs	r2, #17
 8000e88:	841a      	strh	r2, [r3, #32]

    // Enable ACK
    I2C1->CR1 |= I2C_CR1_ACK;
 8000e8a:	4b0b      	ldr	r3, [pc, #44]	; (8000eb8 <I2C_init+0x5c>)
 8000e8c:	881b      	ldrh	r3, [r3, #0]
 8000e8e:	b29b      	uxth	r3, r3
 8000e90:	4a09      	ldr	r2, [pc, #36]	; (8000eb8 <I2C_init+0x5c>)
 8000e92:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000e96:	b29b      	uxth	r3, r3
 8000e98:	8013      	strh	r3, [r2, #0]

    // Enable I2C1
    I2C1->CR1 |= I2C_CR1_PE;
 8000e9a:	4b07      	ldr	r3, [pc, #28]	; (8000eb8 <I2C_init+0x5c>)
 8000e9c:	881b      	ldrh	r3, [r3, #0]
 8000e9e:	b29b      	uxth	r3, r3
 8000ea0:	4a05      	ldr	r2, [pc, #20]	; (8000eb8 <I2C_init+0x5c>)
 8000ea2:	f043 0301 	orr.w	r3, r3, #1
 8000ea6:	b29b      	uxth	r3, r3
 8000ea8:	8013      	strh	r3, [r2, #0]

}
 8000eaa:	bf00      	nop
 8000eac:	46bd      	mov	sp, r7
 8000eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb2:	4770      	bx	lr
 8000eb4:	40023800 	.word	0x40023800
 8000eb8:	40005400 	.word	0x40005400

08000ebc <I2C_start>:


// I2C start condition
void I2C_start(void){
 8000ebc:	b580      	push	{r7, lr}
 8000ebe:	b082      	sub	sp, #8
 8000ec0:	af00      	add	r7, sp, #0

	// Generate a start condition
	I2C1 -> CR1 |= I2C_CR1_START;
 8000ec2:	4b12      	ldr	r3, [pc, #72]	; (8000f0c <I2C_start+0x50>)
 8000ec4:	881b      	ldrh	r3, [r3, #0]
 8000ec6:	b29b      	uxth	r3, r3
 8000ec8:	4a10      	ldr	r2, [pc, #64]	; (8000f0c <I2C_start+0x50>)
 8000eca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	8013      	strh	r3, [r2, #0]

	// Keep looping till the SB flag is set (i.e. start condition generated)
	uint32_t SB_timeout = TIMEOUT;
 8000ed2:	4b0f      	ldr	r3, [pc, #60]	; (8000f10 <I2C_start+0x54>)
 8000ed4:	607b      	str	r3, [r7, #4]
	while(!(I2C1 -> SR1 & I2C_SR1_SB)){
 8000ed6:	e009      	b.n	8000eec <I2C_start+0x30>
		if(--SB_timeout == 0){
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	3b01      	subs	r3, #1
 8000edc:	607b      	str	r3, [r7, #4]
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d103      	bne.n	8000eec <I2C_start+0x30>
			printf("Timeout waiting for SB flag to be set in start condition. \n");
 8000ee4:	480b      	ldr	r0, [pc, #44]	; (8000f14 <I2C_start+0x58>)
 8000ee6:	f000 ff1d 	bl	8001d24 <puts>
			return;
 8000eea:	e00b      	b.n	8000f04 <I2C_start+0x48>
	while(!(I2C1 -> SR1 & I2C_SR1_SB)){
 8000eec:	4b07      	ldr	r3, [pc, #28]	; (8000f0c <I2C_start+0x50>)
 8000eee:	8a9b      	ldrh	r3, [r3, #20]
 8000ef0:	b29b      	uxth	r3, r3
 8000ef2:	f003 0301 	and.w	r3, r3, #1
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d0ee      	beq.n	8000ed8 <I2C_start+0x1c>
		}
	}

	// Clear SB flag by reading SR1
	(void)I2C1->SR1;
 8000efa:	4b04      	ldr	r3, [pc, #16]	; (8000f0c <I2C_start+0x50>)
 8000efc:	8a9b      	ldrh	r3, [r3, #20]
	printf("Start condition generated. \n");
 8000efe:	4806      	ldr	r0, [pc, #24]	; (8000f18 <I2C_start+0x5c>)
 8000f00:	f000 ff10 	bl	8001d24 <puts>

}
 8000f04:	3708      	adds	r7, #8
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bd80      	pop	{r7, pc}
 8000f0a:	bf00      	nop
 8000f0c:	40005400 	.word	0x40005400
 8000f10:	000186a0 	.word	0x000186a0
 8000f14:	08003c70 	.word	0x08003c70
 8000f18:	08003cac 	.word	0x08003cac

08000f1c <I2C_stop>:

// I2C stop condition
void I2C_stop(void){
 8000f1c:	b580      	push	{r7, lr}
 8000f1e:	af00      	add	r7, sp, #0

	// Generate a stop condition
	I2C1 -> CR1 |= I2C_CR1_STOP;
 8000f20:	4b06      	ldr	r3, [pc, #24]	; (8000f3c <I2C_stop+0x20>)
 8000f22:	881b      	ldrh	r3, [r3, #0]
 8000f24:	b29b      	uxth	r3, r3
 8000f26:	4a05      	ldr	r2, [pc, #20]	; (8000f3c <I2C_stop+0x20>)
 8000f28:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000f2c:	b29b      	uxth	r3, r3
 8000f2e:	8013      	strh	r3, [r2, #0]
	printf("Stop condition generated. \n");
 8000f30:	4803      	ldr	r0, [pc, #12]	; (8000f40 <I2C_stop+0x24>)
 8000f32:	f000 fef7 	bl	8001d24 <puts>

}
 8000f36:	bf00      	nop
 8000f38:	bd80      	pop	{r7, pc}
 8000f3a:	bf00      	nop
 8000f3c:	40005400 	.word	0x40005400
 8000f40:	08003cc8 	.word	0x08003cc8

08000f44 <I2C_write_address>:

// I2C 7-bit address transmission
void I2C_write_address(uint8_t address){
 8000f44:	b580      	push	{r7, lr}
 8000f46:	b084      	sub	sp, #16
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	71fb      	strb	r3, [r7, #7]

	uint8_t slave_addr = address << 1;
 8000f4e:	79fb      	ldrb	r3, [r7, #7]
 8000f50:	005b      	lsls	r3, r3, #1
 8000f52:	72fb      	strb	r3, [r7, #11]
	slave_addr &= ~(1); // master write to slave: lsb = 0
 8000f54:	7afb      	ldrb	r3, [r7, #11]
 8000f56:	f023 0301 	bic.w	r3, r3, #1
 8000f5a:	72fb      	strb	r3, [r7, #11]

	// Write DR register with the slave address
	I2C1 -> DR = slave_addr;
 8000f5c:	4b10      	ldr	r3, [pc, #64]	; (8000fa0 <I2C_write_address+0x5c>)
 8000f5e:	7afa      	ldrb	r2, [r7, #11]
 8000f60:	b292      	uxth	r2, r2
 8000f62:	821a      	strh	r2, [r3, #16]

	uint32_t ADDR_timeout = TIMEOUT;
 8000f64:	4b0f      	ldr	r3, [pc, #60]	; (8000fa4 <I2C_write_address+0x60>)
 8000f66:	60fb      	str	r3, [r7, #12]

	// Keep looping till ADDR flag is set (i.e. address sent)
	while(!(I2C1 -> SR1 & I2C_SR1_ADDR)) {
 8000f68:	e009      	b.n	8000f7e <I2C_write_address+0x3a>

		if (--ADDR_timeout == 0){
 8000f6a:	68fb      	ldr	r3, [r7, #12]
 8000f6c:	3b01      	subs	r3, #1
 8000f6e:	60fb      	str	r3, [r7, #12]
 8000f70:	68fb      	ldr	r3, [r7, #12]
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d103      	bne.n	8000f7e <I2C_write_address+0x3a>
			printf("Timeout waiting for ADDR flag to be set in address transmission. \n");
 8000f76:	480c      	ldr	r0, [pc, #48]	; (8000fa8 <I2C_write_address+0x64>)
 8000f78:	f000 fed4 	bl	8001d24 <puts>
			return;
 8000f7c:	e00d      	b.n	8000f9a <I2C_write_address+0x56>
	while(!(I2C1 -> SR1 & I2C_SR1_ADDR)) {
 8000f7e:	4b08      	ldr	r3, [pc, #32]	; (8000fa0 <I2C_write_address+0x5c>)
 8000f80:	8a9b      	ldrh	r3, [r3, #20]
 8000f82:	b29b      	uxth	r3, r3
 8000f84:	f003 0302 	and.w	r3, r3, #2
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	d0ee      	beq.n	8000f6a <I2C_write_address+0x26>
			}
		}

	// Clear ADDR flag by reading SR1 and SR2
	(void)I2C1->SR1;
 8000f8c:	4b04      	ldr	r3, [pc, #16]	; (8000fa0 <I2C_write_address+0x5c>)
 8000f8e:	8a9b      	ldrh	r3, [r3, #20]
	(void)I2C1->SR2;
 8000f90:	4b03      	ldr	r3, [pc, #12]	; (8000fa0 <I2C_write_address+0x5c>)
 8000f92:	8b1b      	ldrh	r3, [r3, #24]

	printf("I2C address sent\n");
 8000f94:	4805      	ldr	r0, [pc, #20]	; (8000fac <I2C_write_address+0x68>)
 8000f96:	f000 fec5 	bl	8001d24 <puts>

}
 8000f9a:	3710      	adds	r7, #16
 8000f9c:	46bd      	mov	sp, r7
 8000f9e:	bd80      	pop	{r7, pc}
 8000fa0:	40005400 	.word	0x40005400
 8000fa4:	000186a0 	.word	0x000186a0
 8000fa8:	08003ce4 	.word	0x08003ce4
 8000fac:	08003d28 	.word	0x08003d28

08000fb0 <I2C_write_data>:


// I2C data transmission
void I2C_write_data(uint8_t data){
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	b084      	sub	sp, #16
 8000fb4:	af00      	add	r7, sp, #0
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	71fb      	strb	r3, [r7, #7]

	uint32_t TXE_timeout = TIMEOUT;
 8000fba:	4b1a      	ldr	r3, [pc, #104]	; (8001024 <I2C_write_data+0x74>)
 8000fbc:	60fb      	str	r3, [r7, #12]
	// Keep looping till TXE flag is set (i.e. data register is empty)
	while(!(I2C1 -> SR1 & I2C_SR1_TXE)){
 8000fbe:	e009      	b.n	8000fd4 <I2C_write_data+0x24>

		if(--TXE_timeout == 0){
 8000fc0:	68fb      	ldr	r3, [r7, #12]
 8000fc2:	3b01      	subs	r3, #1
 8000fc4:	60fb      	str	r3, [r7, #12]
 8000fc6:	68fb      	ldr	r3, [r7, #12]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d103      	bne.n	8000fd4 <I2C_write_data+0x24>
			printf("Timeout waiting for TXE flag to be set in data transmission. \n");
 8000fcc:	4816      	ldr	r0, [pc, #88]	; (8001028 <I2C_write_data+0x78>)
 8000fce:	f000 fea9 	bl	8001d24 <puts>
			return;
 8000fd2:	e023      	b.n	800101c <I2C_write_data+0x6c>
	while(!(I2C1 -> SR1 & I2C_SR1_TXE)){
 8000fd4:	4b15      	ldr	r3, [pc, #84]	; (800102c <I2C_write_data+0x7c>)
 8000fd6:	8a9b      	ldrh	r3, [r3, #20]
 8000fd8:	b29b      	uxth	r3, r3
 8000fda:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	d0ee      	beq.n	8000fc0 <I2C_write_data+0x10>
		}
	}

	// Write data (TXE flag is cleared by writing DR register)
	I2C1 -> DR = data;
 8000fe2:	4b12      	ldr	r3, [pc, #72]	; (800102c <I2C_write_data+0x7c>)
 8000fe4:	79fa      	ldrb	r2, [r7, #7]
 8000fe6:	b292      	uxth	r2, r2
 8000fe8:	821a      	strh	r2, [r3, #16]

	uint32_t BTF_timeout = TIMEOUT;
 8000fea:	4b0e      	ldr	r3, [pc, #56]	; (8001024 <I2C_write_data+0x74>)
 8000fec:	60bb      	str	r3, [r7, #8]
	// Keep looping till BTF flag is set (i.e. byte transfer is finished)
	while(!(I2C1 -> SR1 & I2C_SR1_BTF)){
 8000fee:	e009      	b.n	8001004 <I2C_write_data+0x54>

		if (--BTF_timeout == 0){
 8000ff0:	68bb      	ldr	r3, [r7, #8]
 8000ff2:	3b01      	subs	r3, #1
 8000ff4:	60bb      	str	r3, [r7, #8]
 8000ff6:	68bb      	ldr	r3, [r7, #8]
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	d103      	bne.n	8001004 <I2C_write_data+0x54>
			printf("Timeout waiting for BEF flag to be set in data transmission. \n");
 8000ffc:	480c      	ldr	r0, [pc, #48]	; (8001030 <I2C_write_data+0x80>)
 8000ffe:	f000 fe91 	bl	8001d24 <puts>
			return;
 8001002:	e00b      	b.n	800101c <I2C_write_data+0x6c>
	while(!(I2C1 -> SR1 & I2C_SR1_BTF)){
 8001004:	4b09      	ldr	r3, [pc, #36]	; (800102c <I2C_write_data+0x7c>)
 8001006:	8a9b      	ldrh	r3, [r3, #20]
 8001008:	b29b      	uxth	r3, r3
 800100a:	f003 0304 	and.w	r3, r3, #4
 800100e:	2b00      	cmp	r3, #0
 8001010:	d0ee      	beq.n	8000ff0 <I2C_write_data+0x40>
		}
	}

	printf("I2C data sent: 0x%02X\n", data);
 8001012:	79fb      	ldrb	r3, [r7, #7]
 8001014:	4619      	mov	r1, r3
 8001016:	4807      	ldr	r0, [pc, #28]	; (8001034 <I2C_write_data+0x84>)
 8001018:	f000 fe1e 	bl	8001c58 <iprintf>

}
 800101c:	3710      	adds	r7, #16
 800101e:	46bd      	mov	sp, r7
 8001020:	bd80      	pop	{r7, pc}
 8001022:	bf00      	nop
 8001024:	000186a0 	.word	0x000186a0
 8001028:	08003d3c 	.word	0x08003d3c
 800102c:	40005400 	.word	0x40005400
 8001030:	08003d7c 	.word	0x08003d7c
 8001034:	08003dbc 	.word	0x08003dbc

08001038 <main>:
#include "helper.h"
#include "lcd.h"

#define LCD_ADDRESS 0x27

int main(void) {
 8001038:	b580      	push	{r7, lr}
 800103a:	af00      	add	r7, sp, #0
    // System initialization
    GPIO_init();
 800103c:	f7ff fe0e 	bl	8000c5c <GPIO_init>
    I2C_init();
 8001040:	f7ff ff0c 	bl	8000e5c <I2C_init>

    while (1) {
        I2C_start();
 8001044:	f7ff ff3a 	bl	8000ebc <I2C_start>
        I2C_write_address(LCD_ADDRESS);
 8001048:	2027      	movs	r0, #39	; 0x27
 800104a:	f7ff ff7b 	bl	8000f44 <I2C_write_address>
        I2C_write_data(0xA5);
 800104e:	20a5      	movs	r0, #165	; 0xa5
 8001050:	f7ff ffae 	bl	8000fb0 <I2C_write_data>
        I2C_stop();
 8001054:	f7ff ff62 	bl	8000f1c <I2C_stop>
        timer_delay_ms(1000);
 8001058:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800105c:	f7ff fea6 	bl	8000dac <timer_delay_ms>
        I2C_start();
 8001060:	e7f0      	b.n	8001044 <main+0xc>

08001062 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001062:	b480      	push	{r7}
 8001064:	af00      	add	r7, sp, #0
  return 1;
 8001066:	2301      	movs	r3, #1
}
 8001068:	4618      	mov	r0, r3
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_kill>:

int _kill(int pid, int sig)
{
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
 800107a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800107c:	f000 fe66 	bl	8001d4c <__errno>
 8001080:	4603      	mov	r3, r0
 8001082:	2216      	movs	r2, #22
 8001084:	601a      	str	r2, [r3, #0]
  return -1;
 8001086:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800108a:	4618      	mov	r0, r3
 800108c:	3708      	adds	r7, #8
 800108e:	46bd      	mov	sp, r7
 8001090:	bd80      	pop	{r7, pc}

08001092 <_exit>:

void _exit (int status)
{
 8001092:	b580      	push	{r7, lr}
 8001094:	b082      	sub	sp, #8
 8001096:	af00      	add	r7, sp, #0
 8001098:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800109a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800109e:	6878      	ldr	r0, [r7, #4]
 80010a0:	f7ff ffe7 	bl	8001072 <_kill>
  while (1) {}    /* Make sure we hang here */
 80010a4:	e7fe      	b.n	80010a4 <_exit+0x12>

080010a6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80010a6:	b580      	push	{r7, lr}
 80010a8:	b086      	sub	sp, #24
 80010aa:	af00      	add	r7, sp, #0
 80010ac:	60f8      	str	r0, [r7, #12]
 80010ae:	60b9      	str	r1, [r7, #8]
 80010b0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010b2:	2300      	movs	r3, #0
 80010b4:	617b      	str	r3, [r7, #20]
 80010b6:	e00a      	b.n	80010ce <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80010b8:	f3af 8000 	nop.w
 80010bc:	4601      	mov	r1, r0
 80010be:	68bb      	ldr	r3, [r7, #8]
 80010c0:	1c5a      	adds	r2, r3, #1
 80010c2:	60ba      	str	r2, [r7, #8]
 80010c4:	b2ca      	uxtb	r2, r1
 80010c6:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010c8:	697b      	ldr	r3, [r7, #20]
 80010ca:	3301      	adds	r3, #1
 80010cc:	617b      	str	r3, [r7, #20]
 80010ce:	697a      	ldr	r2, [r7, #20]
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	429a      	cmp	r2, r3
 80010d4:	dbf0      	blt.n	80010b8 <_read+0x12>
  }

  return len;
 80010d6:	687b      	ldr	r3, [r7, #4]
}
 80010d8:	4618      	mov	r0, r3
 80010da:	3718      	adds	r7, #24
 80010dc:	46bd      	mov	sp, r7
 80010de:	bd80      	pop	{r7, pc}

080010e0 <_close>:
  }
  return len;
}

int _close(int file)
{
 80010e0:	b480      	push	{r7}
 80010e2:	b083      	sub	sp, #12
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80010e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80010ec:	4618      	mov	r0, r3
 80010ee:	370c      	adds	r7, #12
 80010f0:	46bd      	mov	sp, r7
 80010f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f6:	4770      	bx	lr

080010f8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80010f8:	b480      	push	{r7}
 80010fa:	b083      	sub	sp, #12
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	6078      	str	r0, [r7, #4]
 8001100:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001102:	683b      	ldr	r3, [r7, #0]
 8001104:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001108:	605a      	str	r2, [r3, #4]
  return 0;
 800110a:	2300      	movs	r3, #0
}
 800110c:	4618      	mov	r0, r3
 800110e:	370c      	adds	r7, #12
 8001110:	46bd      	mov	sp, r7
 8001112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001116:	4770      	bx	lr

08001118 <_isatty>:

int _isatty(int file)
{
 8001118:	b480      	push	{r7}
 800111a:	b083      	sub	sp, #12
 800111c:	af00      	add	r7, sp, #0
 800111e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001120:	2301      	movs	r3, #1
}
 8001122:	4618      	mov	r0, r3
 8001124:	370c      	adds	r7, #12
 8001126:	46bd      	mov	sp, r7
 8001128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800112c:	4770      	bx	lr

0800112e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800112e:	b480      	push	{r7}
 8001130:	b085      	sub	sp, #20
 8001132:	af00      	add	r7, sp, #0
 8001134:	60f8      	str	r0, [r7, #12]
 8001136:	60b9      	str	r1, [r7, #8]
 8001138:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800113a:	2300      	movs	r3, #0
}
 800113c:	4618      	mov	r0, r3
 800113e:	3714      	adds	r7, #20
 8001140:	46bd      	mov	sp, r7
 8001142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001146:	4770      	bx	lr

08001148 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001148:	b580      	push	{r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001150:	4a14      	ldr	r2, [pc, #80]	; (80011a4 <_sbrk+0x5c>)
 8001152:	4b15      	ldr	r3, [pc, #84]	; (80011a8 <_sbrk+0x60>)
 8001154:	1ad3      	subs	r3, r2, r3
 8001156:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001158:	697b      	ldr	r3, [r7, #20]
 800115a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800115c:	4b13      	ldr	r3, [pc, #76]	; (80011ac <_sbrk+0x64>)
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	2b00      	cmp	r3, #0
 8001162:	d102      	bne.n	800116a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001164:	4b11      	ldr	r3, [pc, #68]	; (80011ac <_sbrk+0x64>)
 8001166:	4a12      	ldr	r2, [pc, #72]	; (80011b0 <_sbrk+0x68>)
 8001168:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800116a:	4b10      	ldr	r3, [pc, #64]	; (80011ac <_sbrk+0x64>)
 800116c:	681a      	ldr	r2, [r3, #0]
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	4413      	add	r3, r2
 8001172:	693a      	ldr	r2, [r7, #16]
 8001174:	429a      	cmp	r2, r3
 8001176:	d207      	bcs.n	8001188 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001178:	f000 fde8 	bl	8001d4c <__errno>
 800117c:	4603      	mov	r3, r0
 800117e:	220c      	movs	r2, #12
 8001180:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001182:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001186:	e009      	b.n	800119c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001188:	4b08      	ldr	r3, [pc, #32]	; (80011ac <_sbrk+0x64>)
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800118e:	4b07      	ldr	r3, [pc, #28]	; (80011ac <_sbrk+0x64>)
 8001190:	681a      	ldr	r2, [r3, #0]
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	4413      	add	r3, r2
 8001196:	4a05      	ldr	r2, [pc, #20]	; (80011ac <_sbrk+0x64>)
 8001198:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800119a:	68fb      	ldr	r3, [r7, #12]
}
 800119c:	4618      	mov	r0, r3
 800119e:	3718      	adds	r7, #24
 80011a0:	46bd      	mov	sp, r7
 80011a2:	bd80      	pop	{r7, pc}
 80011a4:	20020000 	.word	0x20020000
 80011a8:	00000400 	.word	0x00000400
 80011ac:	200001e4 	.word	0x200001e4
 80011b0:	20000338 	.word	0x20000338

080011b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80011b4:	480d      	ldr	r0, [pc, #52]	; (80011ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80011b6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80011b8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80011bc:	480c      	ldr	r0, [pc, #48]	; (80011f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80011be:	490d      	ldr	r1, [pc, #52]	; (80011f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80011c0:	4a0d      	ldr	r2, [pc, #52]	; (80011f8 <LoopForever+0xe>)
  movs r3, #0
 80011c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80011c4:	e002      	b.n	80011cc <LoopCopyDataInit>

080011c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80011c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80011c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80011ca:	3304      	adds	r3, #4

080011cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80011cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80011ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80011d0:	d3f9      	bcc.n	80011c6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80011d2:	4a0a      	ldr	r2, [pc, #40]	; (80011fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80011d4:	4c0a      	ldr	r4, [pc, #40]	; (8001200 <LoopForever+0x16>)
  movs r3, #0
 80011d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80011d8:	e001      	b.n	80011de <LoopFillZerobss>

080011da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80011da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80011dc:	3204      	adds	r2, #4

080011de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80011de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80011e0:	d3fb      	bcc.n	80011da <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80011e2:	f000 fdb9 	bl	8001d58 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80011e6:	f7ff ff27 	bl	8001038 <main>

080011ea <LoopForever>:

LoopForever:
  b LoopForever
 80011ea:	e7fe      	b.n	80011ea <LoopForever>
  ldr   r0, =_estack
 80011ec:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80011f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80011f4:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80011f8:	0800414c 	.word	0x0800414c
  ldr r2, =_sbss
 80011fc:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 8001200:	20000334 	.word	0x20000334

08001204 <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001204:	e7fe      	b.n	8001204 <BusFault_Handler>

08001206 <__cvt>:
 8001206:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800120a:	ec55 4b10 	vmov	r4, r5, d0
 800120e:	2d00      	cmp	r5, #0
 8001210:	460e      	mov	r6, r1
 8001212:	4619      	mov	r1, r3
 8001214:	462b      	mov	r3, r5
 8001216:	bfbb      	ittet	lt
 8001218:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800121c:	461d      	movlt	r5, r3
 800121e:	2300      	movge	r3, #0
 8001220:	232d      	movlt	r3, #45	; 0x2d
 8001222:	700b      	strb	r3, [r1, #0]
 8001224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001226:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800122a:	4691      	mov	r9, r2
 800122c:	f023 0820 	bic.w	r8, r3, #32
 8001230:	bfbc      	itt	lt
 8001232:	4622      	movlt	r2, r4
 8001234:	4614      	movlt	r4, r2
 8001236:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800123a:	d005      	beq.n	8001248 <__cvt+0x42>
 800123c:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001240:	d100      	bne.n	8001244 <__cvt+0x3e>
 8001242:	3601      	adds	r6, #1
 8001244:	2102      	movs	r1, #2
 8001246:	e000      	b.n	800124a <__cvt+0x44>
 8001248:	2103      	movs	r1, #3
 800124a:	ab03      	add	r3, sp, #12
 800124c:	9301      	str	r3, [sp, #4]
 800124e:	ab02      	add	r3, sp, #8
 8001250:	9300      	str	r3, [sp, #0]
 8001252:	ec45 4b10 	vmov	d0, r4, r5
 8001256:	4653      	mov	r3, sl
 8001258:	4632      	mov	r2, r6
 800125a:	f000 fe2d 	bl	8001eb8 <_dtoa_r>
 800125e:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001262:	4607      	mov	r7, r0
 8001264:	d102      	bne.n	800126c <__cvt+0x66>
 8001266:	f019 0f01 	tst.w	r9, #1
 800126a:	d022      	beq.n	80012b2 <__cvt+0xac>
 800126c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001270:	eb07 0906 	add.w	r9, r7, r6
 8001274:	d110      	bne.n	8001298 <__cvt+0x92>
 8001276:	783b      	ldrb	r3, [r7, #0]
 8001278:	2b30      	cmp	r3, #48	; 0x30
 800127a:	d10a      	bne.n	8001292 <__cvt+0x8c>
 800127c:	2200      	movs	r2, #0
 800127e:	2300      	movs	r3, #0
 8001280:	4620      	mov	r0, r4
 8001282:	4629      	mov	r1, r5
 8001284:	f7ff fc20 	bl	8000ac8 <__aeabi_dcmpeq>
 8001288:	b918      	cbnz	r0, 8001292 <__cvt+0x8c>
 800128a:	f1c6 0601 	rsb	r6, r6, #1
 800128e:	f8ca 6000 	str.w	r6, [sl]
 8001292:	f8da 3000 	ldr.w	r3, [sl]
 8001296:	4499      	add	r9, r3
 8001298:	2200      	movs	r2, #0
 800129a:	2300      	movs	r3, #0
 800129c:	4620      	mov	r0, r4
 800129e:	4629      	mov	r1, r5
 80012a0:	f7ff fc12 	bl	8000ac8 <__aeabi_dcmpeq>
 80012a4:	b108      	cbz	r0, 80012aa <__cvt+0xa4>
 80012a6:	f8cd 900c 	str.w	r9, [sp, #12]
 80012aa:	2230      	movs	r2, #48	; 0x30
 80012ac:	9b03      	ldr	r3, [sp, #12]
 80012ae:	454b      	cmp	r3, r9
 80012b0:	d307      	bcc.n	80012c2 <__cvt+0xbc>
 80012b2:	9b03      	ldr	r3, [sp, #12]
 80012b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80012b6:	1bdb      	subs	r3, r3, r7
 80012b8:	4638      	mov	r0, r7
 80012ba:	6013      	str	r3, [r2, #0]
 80012bc:	b004      	add	sp, #16
 80012be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012c2:	1c59      	adds	r1, r3, #1
 80012c4:	9103      	str	r1, [sp, #12]
 80012c6:	701a      	strb	r2, [r3, #0]
 80012c8:	e7f0      	b.n	80012ac <__cvt+0xa6>

080012ca <__exponent>:
 80012ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012cc:	4603      	mov	r3, r0
 80012ce:	2900      	cmp	r1, #0
 80012d0:	bfb8      	it	lt
 80012d2:	4249      	neglt	r1, r1
 80012d4:	f803 2b02 	strb.w	r2, [r3], #2
 80012d8:	bfb4      	ite	lt
 80012da:	222d      	movlt	r2, #45	; 0x2d
 80012dc:	222b      	movge	r2, #43	; 0x2b
 80012de:	2909      	cmp	r1, #9
 80012e0:	7042      	strb	r2, [r0, #1]
 80012e2:	dd2a      	ble.n	800133a <__exponent+0x70>
 80012e4:	f10d 0207 	add.w	r2, sp, #7
 80012e8:	4617      	mov	r7, r2
 80012ea:	260a      	movs	r6, #10
 80012ec:	4694      	mov	ip, r2
 80012ee:	fb91 f5f6 	sdiv	r5, r1, r6
 80012f2:	fb06 1415 	mls	r4, r6, r5, r1
 80012f6:	3430      	adds	r4, #48	; 0x30
 80012f8:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80012fc:	460c      	mov	r4, r1
 80012fe:	2c63      	cmp	r4, #99	; 0x63
 8001300:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001304:	4629      	mov	r1, r5
 8001306:	dcf1      	bgt.n	80012ec <__exponent+0x22>
 8001308:	3130      	adds	r1, #48	; 0x30
 800130a:	f1ac 0402 	sub.w	r4, ip, #2
 800130e:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001312:	1c41      	adds	r1, r0, #1
 8001314:	4622      	mov	r2, r4
 8001316:	42ba      	cmp	r2, r7
 8001318:	d30a      	bcc.n	8001330 <__exponent+0x66>
 800131a:	f10d 0209 	add.w	r2, sp, #9
 800131e:	eba2 020c 	sub.w	r2, r2, ip
 8001322:	42bc      	cmp	r4, r7
 8001324:	bf88      	it	hi
 8001326:	2200      	movhi	r2, #0
 8001328:	4413      	add	r3, r2
 800132a:	1a18      	subs	r0, r3, r0
 800132c:	b003      	add	sp, #12
 800132e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001330:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001334:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001338:	e7ed      	b.n	8001316 <__exponent+0x4c>
 800133a:	2330      	movs	r3, #48	; 0x30
 800133c:	3130      	adds	r1, #48	; 0x30
 800133e:	7083      	strb	r3, [r0, #2]
 8001340:	70c1      	strb	r1, [r0, #3]
 8001342:	1d03      	adds	r3, r0, #4
 8001344:	e7f1      	b.n	800132a <__exponent+0x60>
	...

08001348 <_printf_float>:
 8001348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800134c:	ed2d 8b02 	vpush	{d8}
 8001350:	b08d      	sub	sp, #52	; 0x34
 8001352:	460c      	mov	r4, r1
 8001354:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001358:	4616      	mov	r6, r2
 800135a:	461f      	mov	r7, r3
 800135c:	4605      	mov	r5, r0
 800135e:	f000 fcf1 	bl	8001d44 <_localeconv_r>
 8001362:	f8d0 a000 	ldr.w	sl, [r0]
 8001366:	4650      	mov	r0, sl
 8001368:	f7fe ff82 	bl	8000270 <strlen>
 800136c:	2300      	movs	r3, #0
 800136e:	930a      	str	r3, [sp, #40]	; 0x28
 8001370:	6823      	ldr	r3, [r4, #0]
 8001372:	9305      	str	r3, [sp, #20]
 8001374:	f8d8 3000 	ldr.w	r3, [r8]
 8001378:	f894 b018 	ldrb.w	fp, [r4, #24]
 800137c:	3307      	adds	r3, #7
 800137e:	f023 0307 	bic.w	r3, r3, #7
 8001382:	f103 0208 	add.w	r2, r3, #8
 8001386:	f8c8 2000 	str.w	r2, [r8]
 800138a:	e9d3 8900 	ldrd	r8, r9, [r3]
 800138e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001392:	9307      	str	r3, [sp, #28]
 8001394:	f8cd 8018 	str.w	r8, [sp, #24]
 8001398:	ee08 0a10 	vmov	s16, r0
 800139c:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 80013a0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80013a4:	4b9e      	ldr	r3, [pc, #632]	; (8001620 <_printf_float+0x2d8>)
 80013a6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80013aa:	f7ff fbbf 	bl	8000b2c <__aeabi_dcmpun>
 80013ae:	bb88      	cbnz	r0, 8001414 <_printf_float+0xcc>
 80013b0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80013b4:	4b9a      	ldr	r3, [pc, #616]	; (8001620 <_printf_float+0x2d8>)
 80013b6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80013ba:	f7ff fb99 	bl	8000af0 <__aeabi_dcmple>
 80013be:	bb48      	cbnz	r0, 8001414 <_printf_float+0xcc>
 80013c0:	2200      	movs	r2, #0
 80013c2:	2300      	movs	r3, #0
 80013c4:	4640      	mov	r0, r8
 80013c6:	4649      	mov	r1, r9
 80013c8:	f7ff fb88 	bl	8000adc <__aeabi_dcmplt>
 80013cc:	b110      	cbz	r0, 80013d4 <_printf_float+0x8c>
 80013ce:	232d      	movs	r3, #45	; 0x2d
 80013d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013d4:	4a93      	ldr	r2, [pc, #588]	; (8001624 <_printf_float+0x2dc>)
 80013d6:	4b94      	ldr	r3, [pc, #592]	; (8001628 <_printf_float+0x2e0>)
 80013d8:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80013dc:	bf94      	ite	ls
 80013de:	4690      	movls	r8, r2
 80013e0:	4698      	movhi	r8, r3
 80013e2:	2303      	movs	r3, #3
 80013e4:	6123      	str	r3, [r4, #16]
 80013e6:	9b05      	ldr	r3, [sp, #20]
 80013e8:	f023 0304 	bic.w	r3, r3, #4
 80013ec:	6023      	str	r3, [r4, #0]
 80013ee:	f04f 0900 	mov.w	r9, #0
 80013f2:	9700      	str	r7, [sp, #0]
 80013f4:	4633      	mov	r3, r6
 80013f6:	aa0b      	add	r2, sp, #44	; 0x2c
 80013f8:	4621      	mov	r1, r4
 80013fa:	4628      	mov	r0, r5
 80013fc:	f000 f9da 	bl	80017b4 <_printf_common>
 8001400:	3001      	adds	r0, #1
 8001402:	f040 8090 	bne.w	8001526 <_printf_float+0x1de>
 8001406:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800140a:	b00d      	add	sp, #52	; 0x34
 800140c:	ecbd 8b02 	vpop	{d8}
 8001410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001414:	4642      	mov	r2, r8
 8001416:	464b      	mov	r3, r9
 8001418:	4640      	mov	r0, r8
 800141a:	4649      	mov	r1, r9
 800141c:	f7ff fb86 	bl	8000b2c <__aeabi_dcmpun>
 8001420:	b140      	cbz	r0, 8001434 <_printf_float+0xec>
 8001422:	464b      	mov	r3, r9
 8001424:	2b00      	cmp	r3, #0
 8001426:	bfbc      	itt	lt
 8001428:	232d      	movlt	r3, #45	; 0x2d
 800142a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800142e:	4a7f      	ldr	r2, [pc, #508]	; (800162c <_printf_float+0x2e4>)
 8001430:	4b7f      	ldr	r3, [pc, #508]	; (8001630 <_printf_float+0x2e8>)
 8001432:	e7d1      	b.n	80013d8 <_printf_float+0x90>
 8001434:	6863      	ldr	r3, [r4, #4]
 8001436:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800143a:	9206      	str	r2, [sp, #24]
 800143c:	1c5a      	adds	r2, r3, #1
 800143e:	d13f      	bne.n	80014c0 <_printf_float+0x178>
 8001440:	2306      	movs	r3, #6
 8001442:	6063      	str	r3, [r4, #4]
 8001444:	9b05      	ldr	r3, [sp, #20]
 8001446:	6861      	ldr	r1, [r4, #4]
 8001448:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800144c:	2300      	movs	r3, #0
 800144e:	9303      	str	r3, [sp, #12]
 8001450:	ab0a      	add	r3, sp, #40	; 0x28
 8001452:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001456:	ab09      	add	r3, sp, #36	; 0x24
 8001458:	ec49 8b10 	vmov	d0, r8, r9
 800145c:	9300      	str	r3, [sp, #0]
 800145e:	6022      	str	r2, [r4, #0]
 8001460:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001464:	4628      	mov	r0, r5
 8001466:	f7ff fece 	bl	8001206 <__cvt>
 800146a:	9b06      	ldr	r3, [sp, #24]
 800146c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800146e:	2b47      	cmp	r3, #71	; 0x47
 8001470:	4680      	mov	r8, r0
 8001472:	d108      	bne.n	8001486 <_printf_float+0x13e>
 8001474:	1cc8      	adds	r0, r1, #3
 8001476:	db02      	blt.n	800147e <_printf_float+0x136>
 8001478:	6863      	ldr	r3, [r4, #4]
 800147a:	4299      	cmp	r1, r3
 800147c:	dd41      	ble.n	8001502 <_printf_float+0x1ba>
 800147e:	f1ab 0302 	sub.w	r3, fp, #2
 8001482:	fa5f fb83 	uxtb.w	fp, r3
 8001486:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800148a:	d820      	bhi.n	80014ce <_printf_float+0x186>
 800148c:	3901      	subs	r1, #1
 800148e:	465a      	mov	r2, fp
 8001490:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001494:	9109      	str	r1, [sp, #36]	; 0x24
 8001496:	f7ff ff18 	bl	80012ca <__exponent>
 800149a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800149c:	1813      	adds	r3, r2, r0
 800149e:	2a01      	cmp	r2, #1
 80014a0:	4681      	mov	r9, r0
 80014a2:	6123      	str	r3, [r4, #16]
 80014a4:	dc02      	bgt.n	80014ac <_printf_float+0x164>
 80014a6:	6822      	ldr	r2, [r4, #0]
 80014a8:	07d2      	lsls	r2, r2, #31
 80014aa:	d501      	bpl.n	80014b0 <_printf_float+0x168>
 80014ac:	3301      	adds	r3, #1
 80014ae:	6123      	str	r3, [r4, #16]
 80014b0:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d09c      	beq.n	80013f2 <_printf_float+0xaa>
 80014b8:	232d      	movs	r3, #45	; 0x2d
 80014ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80014be:	e798      	b.n	80013f2 <_printf_float+0xaa>
 80014c0:	9a06      	ldr	r2, [sp, #24]
 80014c2:	2a47      	cmp	r2, #71	; 0x47
 80014c4:	d1be      	bne.n	8001444 <_printf_float+0xfc>
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d1bc      	bne.n	8001444 <_printf_float+0xfc>
 80014ca:	2301      	movs	r3, #1
 80014cc:	e7b9      	b.n	8001442 <_printf_float+0xfa>
 80014ce:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80014d2:	d118      	bne.n	8001506 <_printf_float+0x1be>
 80014d4:	2900      	cmp	r1, #0
 80014d6:	6863      	ldr	r3, [r4, #4]
 80014d8:	dd0b      	ble.n	80014f2 <_printf_float+0x1aa>
 80014da:	6121      	str	r1, [r4, #16]
 80014dc:	b913      	cbnz	r3, 80014e4 <_printf_float+0x19c>
 80014de:	6822      	ldr	r2, [r4, #0]
 80014e0:	07d0      	lsls	r0, r2, #31
 80014e2:	d502      	bpl.n	80014ea <_printf_float+0x1a2>
 80014e4:	3301      	adds	r3, #1
 80014e6:	440b      	add	r3, r1
 80014e8:	6123      	str	r3, [r4, #16]
 80014ea:	65a1      	str	r1, [r4, #88]	; 0x58
 80014ec:	f04f 0900 	mov.w	r9, #0
 80014f0:	e7de      	b.n	80014b0 <_printf_float+0x168>
 80014f2:	b913      	cbnz	r3, 80014fa <_printf_float+0x1b2>
 80014f4:	6822      	ldr	r2, [r4, #0]
 80014f6:	07d2      	lsls	r2, r2, #31
 80014f8:	d501      	bpl.n	80014fe <_printf_float+0x1b6>
 80014fa:	3302      	adds	r3, #2
 80014fc:	e7f4      	b.n	80014e8 <_printf_float+0x1a0>
 80014fe:	2301      	movs	r3, #1
 8001500:	e7f2      	b.n	80014e8 <_printf_float+0x1a0>
 8001502:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001506:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001508:	4299      	cmp	r1, r3
 800150a:	db05      	blt.n	8001518 <_printf_float+0x1d0>
 800150c:	6823      	ldr	r3, [r4, #0]
 800150e:	6121      	str	r1, [r4, #16]
 8001510:	07d8      	lsls	r0, r3, #31
 8001512:	d5ea      	bpl.n	80014ea <_printf_float+0x1a2>
 8001514:	1c4b      	adds	r3, r1, #1
 8001516:	e7e7      	b.n	80014e8 <_printf_float+0x1a0>
 8001518:	2900      	cmp	r1, #0
 800151a:	bfd4      	ite	le
 800151c:	f1c1 0202 	rsble	r2, r1, #2
 8001520:	2201      	movgt	r2, #1
 8001522:	4413      	add	r3, r2
 8001524:	e7e0      	b.n	80014e8 <_printf_float+0x1a0>
 8001526:	6823      	ldr	r3, [r4, #0]
 8001528:	055a      	lsls	r2, r3, #21
 800152a:	d407      	bmi.n	800153c <_printf_float+0x1f4>
 800152c:	6923      	ldr	r3, [r4, #16]
 800152e:	4642      	mov	r2, r8
 8001530:	4631      	mov	r1, r6
 8001532:	4628      	mov	r0, r5
 8001534:	47b8      	blx	r7
 8001536:	3001      	adds	r0, #1
 8001538:	d12c      	bne.n	8001594 <_printf_float+0x24c>
 800153a:	e764      	b.n	8001406 <_printf_float+0xbe>
 800153c:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001540:	f240 80e0 	bls.w	8001704 <_printf_float+0x3bc>
 8001544:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001548:	2200      	movs	r2, #0
 800154a:	2300      	movs	r3, #0
 800154c:	f7ff fabc 	bl	8000ac8 <__aeabi_dcmpeq>
 8001550:	2800      	cmp	r0, #0
 8001552:	d034      	beq.n	80015be <_printf_float+0x276>
 8001554:	4a37      	ldr	r2, [pc, #220]	; (8001634 <_printf_float+0x2ec>)
 8001556:	2301      	movs	r3, #1
 8001558:	4631      	mov	r1, r6
 800155a:	4628      	mov	r0, r5
 800155c:	47b8      	blx	r7
 800155e:	3001      	adds	r0, #1
 8001560:	f43f af51 	beq.w	8001406 <_printf_float+0xbe>
 8001564:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001568:	429a      	cmp	r2, r3
 800156a:	db02      	blt.n	8001572 <_printf_float+0x22a>
 800156c:	6823      	ldr	r3, [r4, #0]
 800156e:	07d8      	lsls	r0, r3, #31
 8001570:	d510      	bpl.n	8001594 <_printf_float+0x24c>
 8001572:	ee18 3a10 	vmov	r3, s16
 8001576:	4652      	mov	r2, sl
 8001578:	4631      	mov	r1, r6
 800157a:	4628      	mov	r0, r5
 800157c:	47b8      	blx	r7
 800157e:	3001      	adds	r0, #1
 8001580:	f43f af41 	beq.w	8001406 <_printf_float+0xbe>
 8001584:	f04f 0800 	mov.w	r8, #0
 8001588:	f104 091a 	add.w	r9, r4, #26
 800158c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800158e:	3b01      	subs	r3, #1
 8001590:	4543      	cmp	r3, r8
 8001592:	dc09      	bgt.n	80015a8 <_printf_float+0x260>
 8001594:	6823      	ldr	r3, [r4, #0]
 8001596:	079b      	lsls	r3, r3, #30
 8001598:	f100 8107 	bmi.w	80017aa <_printf_float+0x462>
 800159c:	68e0      	ldr	r0, [r4, #12]
 800159e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80015a0:	4298      	cmp	r0, r3
 80015a2:	bfb8      	it	lt
 80015a4:	4618      	movlt	r0, r3
 80015a6:	e730      	b.n	800140a <_printf_float+0xc2>
 80015a8:	2301      	movs	r3, #1
 80015aa:	464a      	mov	r2, r9
 80015ac:	4631      	mov	r1, r6
 80015ae:	4628      	mov	r0, r5
 80015b0:	47b8      	blx	r7
 80015b2:	3001      	adds	r0, #1
 80015b4:	f43f af27 	beq.w	8001406 <_printf_float+0xbe>
 80015b8:	f108 0801 	add.w	r8, r8, #1
 80015bc:	e7e6      	b.n	800158c <_printf_float+0x244>
 80015be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	dc39      	bgt.n	8001638 <_printf_float+0x2f0>
 80015c4:	4a1b      	ldr	r2, [pc, #108]	; (8001634 <_printf_float+0x2ec>)
 80015c6:	2301      	movs	r3, #1
 80015c8:	4631      	mov	r1, r6
 80015ca:	4628      	mov	r0, r5
 80015cc:	47b8      	blx	r7
 80015ce:	3001      	adds	r0, #1
 80015d0:	f43f af19 	beq.w	8001406 <_printf_float+0xbe>
 80015d4:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80015d8:	4313      	orrs	r3, r2
 80015da:	d102      	bne.n	80015e2 <_printf_float+0x29a>
 80015dc:	6823      	ldr	r3, [r4, #0]
 80015de:	07d9      	lsls	r1, r3, #31
 80015e0:	d5d8      	bpl.n	8001594 <_printf_float+0x24c>
 80015e2:	ee18 3a10 	vmov	r3, s16
 80015e6:	4652      	mov	r2, sl
 80015e8:	4631      	mov	r1, r6
 80015ea:	4628      	mov	r0, r5
 80015ec:	47b8      	blx	r7
 80015ee:	3001      	adds	r0, #1
 80015f0:	f43f af09 	beq.w	8001406 <_printf_float+0xbe>
 80015f4:	f04f 0900 	mov.w	r9, #0
 80015f8:	f104 0a1a 	add.w	sl, r4, #26
 80015fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80015fe:	425b      	negs	r3, r3
 8001600:	454b      	cmp	r3, r9
 8001602:	dc01      	bgt.n	8001608 <_printf_float+0x2c0>
 8001604:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001606:	e792      	b.n	800152e <_printf_float+0x1e6>
 8001608:	2301      	movs	r3, #1
 800160a:	4652      	mov	r2, sl
 800160c:	4631      	mov	r1, r6
 800160e:	4628      	mov	r0, r5
 8001610:	47b8      	blx	r7
 8001612:	3001      	adds	r0, #1
 8001614:	f43f aef7 	beq.w	8001406 <_printf_float+0xbe>
 8001618:	f109 0901 	add.w	r9, r9, #1
 800161c:	e7ee      	b.n	80015fc <_printf_float+0x2b4>
 800161e:	bf00      	nop
 8001620:	7fefffff 	.word	0x7fefffff
 8001624:	08003dd3 	.word	0x08003dd3
 8001628:	08003dd7 	.word	0x08003dd7
 800162c:	08003ddb 	.word	0x08003ddb
 8001630:	08003ddf 	.word	0x08003ddf
 8001634:	08003de3 	.word	0x08003de3
 8001638:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800163a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800163c:	429a      	cmp	r2, r3
 800163e:	bfa8      	it	ge
 8001640:	461a      	movge	r2, r3
 8001642:	2a00      	cmp	r2, #0
 8001644:	4691      	mov	r9, r2
 8001646:	dc37      	bgt.n	80016b8 <_printf_float+0x370>
 8001648:	f04f 0b00 	mov.w	fp, #0
 800164c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001650:	f104 021a 	add.w	r2, r4, #26
 8001654:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001656:	9305      	str	r3, [sp, #20]
 8001658:	eba3 0309 	sub.w	r3, r3, r9
 800165c:	455b      	cmp	r3, fp
 800165e:	dc33      	bgt.n	80016c8 <_printf_float+0x380>
 8001660:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001664:	429a      	cmp	r2, r3
 8001666:	db3b      	blt.n	80016e0 <_printf_float+0x398>
 8001668:	6823      	ldr	r3, [r4, #0]
 800166a:	07da      	lsls	r2, r3, #31
 800166c:	d438      	bmi.n	80016e0 <_printf_float+0x398>
 800166e:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001672:	eba2 0903 	sub.w	r9, r2, r3
 8001676:	9b05      	ldr	r3, [sp, #20]
 8001678:	1ad2      	subs	r2, r2, r3
 800167a:	4591      	cmp	r9, r2
 800167c:	bfa8      	it	ge
 800167e:	4691      	movge	r9, r2
 8001680:	f1b9 0f00 	cmp.w	r9, #0
 8001684:	dc35      	bgt.n	80016f2 <_printf_float+0x3aa>
 8001686:	f04f 0800 	mov.w	r8, #0
 800168a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800168e:	f104 0a1a 	add.w	sl, r4, #26
 8001692:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001696:	1a9b      	subs	r3, r3, r2
 8001698:	eba3 0309 	sub.w	r3, r3, r9
 800169c:	4543      	cmp	r3, r8
 800169e:	f77f af79 	ble.w	8001594 <_printf_float+0x24c>
 80016a2:	2301      	movs	r3, #1
 80016a4:	4652      	mov	r2, sl
 80016a6:	4631      	mov	r1, r6
 80016a8:	4628      	mov	r0, r5
 80016aa:	47b8      	blx	r7
 80016ac:	3001      	adds	r0, #1
 80016ae:	f43f aeaa 	beq.w	8001406 <_printf_float+0xbe>
 80016b2:	f108 0801 	add.w	r8, r8, #1
 80016b6:	e7ec      	b.n	8001692 <_printf_float+0x34a>
 80016b8:	4613      	mov	r3, r2
 80016ba:	4631      	mov	r1, r6
 80016bc:	4642      	mov	r2, r8
 80016be:	4628      	mov	r0, r5
 80016c0:	47b8      	blx	r7
 80016c2:	3001      	adds	r0, #1
 80016c4:	d1c0      	bne.n	8001648 <_printf_float+0x300>
 80016c6:	e69e      	b.n	8001406 <_printf_float+0xbe>
 80016c8:	2301      	movs	r3, #1
 80016ca:	4631      	mov	r1, r6
 80016cc:	4628      	mov	r0, r5
 80016ce:	9205      	str	r2, [sp, #20]
 80016d0:	47b8      	blx	r7
 80016d2:	3001      	adds	r0, #1
 80016d4:	f43f ae97 	beq.w	8001406 <_printf_float+0xbe>
 80016d8:	9a05      	ldr	r2, [sp, #20]
 80016da:	f10b 0b01 	add.w	fp, fp, #1
 80016de:	e7b9      	b.n	8001654 <_printf_float+0x30c>
 80016e0:	ee18 3a10 	vmov	r3, s16
 80016e4:	4652      	mov	r2, sl
 80016e6:	4631      	mov	r1, r6
 80016e8:	4628      	mov	r0, r5
 80016ea:	47b8      	blx	r7
 80016ec:	3001      	adds	r0, #1
 80016ee:	d1be      	bne.n	800166e <_printf_float+0x326>
 80016f0:	e689      	b.n	8001406 <_printf_float+0xbe>
 80016f2:	9a05      	ldr	r2, [sp, #20]
 80016f4:	464b      	mov	r3, r9
 80016f6:	4442      	add	r2, r8
 80016f8:	4631      	mov	r1, r6
 80016fa:	4628      	mov	r0, r5
 80016fc:	47b8      	blx	r7
 80016fe:	3001      	adds	r0, #1
 8001700:	d1c1      	bne.n	8001686 <_printf_float+0x33e>
 8001702:	e680      	b.n	8001406 <_printf_float+0xbe>
 8001704:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001706:	2a01      	cmp	r2, #1
 8001708:	dc01      	bgt.n	800170e <_printf_float+0x3c6>
 800170a:	07db      	lsls	r3, r3, #31
 800170c:	d53a      	bpl.n	8001784 <_printf_float+0x43c>
 800170e:	2301      	movs	r3, #1
 8001710:	4642      	mov	r2, r8
 8001712:	4631      	mov	r1, r6
 8001714:	4628      	mov	r0, r5
 8001716:	47b8      	blx	r7
 8001718:	3001      	adds	r0, #1
 800171a:	f43f ae74 	beq.w	8001406 <_printf_float+0xbe>
 800171e:	ee18 3a10 	vmov	r3, s16
 8001722:	4652      	mov	r2, sl
 8001724:	4631      	mov	r1, r6
 8001726:	4628      	mov	r0, r5
 8001728:	47b8      	blx	r7
 800172a:	3001      	adds	r0, #1
 800172c:	f43f ae6b 	beq.w	8001406 <_printf_float+0xbe>
 8001730:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001734:	2200      	movs	r2, #0
 8001736:	2300      	movs	r3, #0
 8001738:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 800173c:	f7ff f9c4 	bl	8000ac8 <__aeabi_dcmpeq>
 8001740:	b9d8      	cbnz	r0, 800177a <_printf_float+0x432>
 8001742:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 8001746:	f108 0201 	add.w	r2, r8, #1
 800174a:	4631      	mov	r1, r6
 800174c:	4628      	mov	r0, r5
 800174e:	47b8      	blx	r7
 8001750:	3001      	adds	r0, #1
 8001752:	d10e      	bne.n	8001772 <_printf_float+0x42a>
 8001754:	e657      	b.n	8001406 <_printf_float+0xbe>
 8001756:	2301      	movs	r3, #1
 8001758:	4652      	mov	r2, sl
 800175a:	4631      	mov	r1, r6
 800175c:	4628      	mov	r0, r5
 800175e:	47b8      	blx	r7
 8001760:	3001      	adds	r0, #1
 8001762:	f43f ae50 	beq.w	8001406 <_printf_float+0xbe>
 8001766:	f108 0801 	add.w	r8, r8, #1
 800176a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800176c:	3b01      	subs	r3, #1
 800176e:	4543      	cmp	r3, r8
 8001770:	dcf1      	bgt.n	8001756 <_printf_float+0x40e>
 8001772:	464b      	mov	r3, r9
 8001774:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001778:	e6da      	b.n	8001530 <_printf_float+0x1e8>
 800177a:	f04f 0800 	mov.w	r8, #0
 800177e:	f104 0a1a 	add.w	sl, r4, #26
 8001782:	e7f2      	b.n	800176a <_printf_float+0x422>
 8001784:	2301      	movs	r3, #1
 8001786:	4642      	mov	r2, r8
 8001788:	e7df      	b.n	800174a <_printf_float+0x402>
 800178a:	2301      	movs	r3, #1
 800178c:	464a      	mov	r2, r9
 800178e:	4631      	mov	r1, r6
 8001790:	4628      	mov	r0, r5
 8001792:	47b8      	blx	r7
 8001794:	3001      	adds	r0, #1
 8001796:	f43f ae36 	beq.w	8001406 <_printf_float+0xbe>
 800179a:	f108 0801 	add.w	r8, r8, #1
 800179e:	68e3      	ldr	r3, [r4, #12]
 80017a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80017a2:	1a5b      	subs	r3, r3, r1
 80017a4:	4543      	cmp	r3, r8
 80017a6:	dcf0      	bgt.n	800178a <_printf_float+0x442>
 80017a8:	e6f8      	b.n	800159c <_printf_float+0x254>
 80017aa:	f04f 0800 	mov.w	r8, #0
 80017ae:	f104 0919 	add.w	r9, r4, #25
 80017b2:	e7f4      	b.n	800179e <_printf_float+0x456>

080017b4 <_printf_common>:
 80017b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80017b8:	4616      	mov	r6, r2
 80017ba:	4699      	mov	r9, r3
 80017bc:	688a      	ldr	r2, [r1, #8]
 80017be:	690b      	ldr	r3, [r1, #16]
 80017c0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80017c4:	4293      	cmp	r3, r2
 80017c6:	bfb8      	it	lt
 80017c8:	4613      	movlt	r3, r2
 80017ca:	6033      	str	r3, [r6, #0]
 80017cc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80017d0:	4607      	mov	r7, r0
 80017d2:	460c      	mov	r4, r1
 80017d4:	b10a      	cbz	r2, 80017da <_printf_common+0x26>
 80017d6:	3301      	adds	r3, #1
 80017d8:	6033      	str	r3, [r6, #0]
 80017da:	6823      	ldr	r3, [r4, #0]
 80017dc:	0699      	lsls	r1, r3, #26
 80017de:	bf42      	ittt	mi
 80017e0:	6833      	ldrmi	r3, [r6, #0]
 80017e2:	3302      	addmi	r3, #2
 80017e4:	6033      	strmi	r3, [r6, #0]
 80017e6:	6825      	ldr	r5, [r4, #0]
 80017e8:	f015 0506 	ands.w	r5, r5, #6
 80017ec:	d106      	bne.n	80017fc <_printf_common+0x48>
 80017ee:	f104 0a19 	add.w	sl, r4, #25
 80017f2:	68e3      	ldr	r3, [r4, #12]
 80017f4:	6832      	ldr	r2, [r6, #0]
 80017f6:	1a9b      	subs	r3, r3, r2
 80017f8:	42ab      	cmp	r3, r5
 80017fa:	dc26      	bgt.n	800184a <_printf_common+0x96>
 80017fc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001800:	1e13      	subs	r3, r2, #0
 8001802:	6822      	ldr	r2, [r4, #0]
 8001804:	bf18      	it	ne
 8001806:	2301      	movne	r3, #1
 8001808:	0692      	lsls	r2, r2, #26
 800180a:	d42b      	bmi.n	8001864 <_printf_common+0xb0>
 800180c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001810:	4649      	mov	r1, r9
 8001812:	4638      	mov	r0, r7
 8001814:	47c0      	blx	r8
 8001816:	3001      	adds	r0, #1
 8001818:	d01e      	beq.n	8001858 <_printf_common+0xa4>
 800181a:	6823      	ldr	r3, [r4, #0]
 800181c:	6922      	ldr	r2, [r4, #16]
 800181e:	f003 0306 	and.w	r3, r3, #6
 8001822:	2b04      	cmp	r3, #4
 8001824:	bf02      	ittt	eq
 8001826:	68e5      	ldreq	r5, [r4, #12]
 8001828:	6833      	ldreq	r3, [r6, #0]
 800182a:	1aed      	subeq	r5, r5, r3
 800182c:	68a3      	ldr	r3, [r4, #8]
 800182e:	bf0c      	ite	eq
 8001830:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001834:	2500      	movne	r5, #0
 8001836:	4293      	cmp	r3, r2
 8001838:	bfc4      	itt	gt
 800183a:	1a9b      	subgt	r3, r3, r2
 800183c:	18ed      	addgt	r5, r5, r3
 800183e:	2600      	movs	r6, #0
 8001840:	341a      	adds	r4, #26
 8001842:	42b5      	cmp	r5, r6
 8001844:	d11a      	bne.n	800187c <_printf_common+0xc8>
 8001846:	2000      	movs	r0, #0
 8001848:	e008      	b.n	800185c <_printf_common+0xa8>
 800184a:	2301      	movs	r3, #1
 800184c:	4652      	mov	r2, sl
 800184e:	4649      	mov	r1, r9
 8001850:	4638      	mov	r0, r7
 8001852:	47c0      	blx	r8
 8001854:	3001      	adds	r0, #1
 8001856:	d103      	bne.n	8001860 <_printf_common+0xac>
 8001858:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800185c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001860:	3501      	adds	r5, #1
 8001862:	e7c6      	b.n	80017f2 <_printf_common+0x3e>
 8001864:	18e1      	adds	r1, r4, r3
 8001866:	1c5a      	adds	r2, r3, #1
 8001868:	2030      	movs	r0, #48	; 0x30
 800186a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800186e:	4422      	add	r2, r4
 8001870:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001874:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001878:	3302      	adds	r3, #2
 800187a:	e7c7      	b.n	800180c <_printf_common+0x58>
 800187c:	2301      	movs	r3, #1
 800187e:	4622      	mov	r2, r4
 8001880:	4649      	mov	r1, r9
 8001882:	4638      	mov	r0, r7
 8001884:	47c0      	blx	r8
 8001886:	3001      	adds	r0, #1
 8001888:	d0e6      	beq.n	8001858 <_printf_common+0xa4>
 800188a:	3601      	adds	r6, #1
 800188c:	e7d9      	b.n	8001842 <_printf_common+0x8e>
	...

08001890 <_printf_i>:
 8001890:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001894:	7e0f      	ldrb	r7, [r1, #24]
 8001896:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001898:	2f78      	cmp	r7, #120	; 0x78
 800189a:	4691      	mov	r9, r2
 800189c:	4680      	mov	r8, r0
 800189e:	460c      	mov	r4, r1
 80018a0:	469a      	mov	sl, r3
 80018a2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80018a6:	d807      	bhi.n	80018b8 <_printf_i+0x28>
 80018a8:	2f62      	cmp	r7, #98	; 0x62
 80018aa:	d80a      	bhi.n	80018c2 <_printf_i+0x32>
 80018ac:	2f00      	cmp	r7, #0
 80018ae:	f000 80d4 	beq.w	8001a5a <_printf_i+0x1ca>
 80018b2:	2f58      	cmp	r7, #88	; 0x58
 80018b4:	f000 80c0 	beq.w	8001a38 <_printf_i+0x1a8>
 80018b8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80018bc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80018c0:	e03a      	b.n	8001938 <_printf_i+0xa8>
 80018c2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80018c6:	2b15      	cmp	r3, #21
 80018c8:	d8f6      	bhi.n	80018b8 <_printf_i+0x28>
 80018ca:	a101      	add	r1, pc, #4	; (adr r1, 80018d0 <_printf_i+0x40>)
 80018cc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80018d0:	08001929 	.word	0x08001929
 80018d4:	0800193d 	.word	0x0800193d
 80018d8:	080018b9 	.word	0x080018b9
 80018dc:	080018b9 	.word	0x080018b9
 80018e0:	080018b9 	.word	0x080018b9
 80018e4:	080018b9 	.word	0x080018b9
 80018e8:	0800193d 	.word	0x0800193d
 80018ec:	080018b9 	.word	0x080018b9
 80018f0:	080018b9 	.word	0x080018b9
 80018f4:	080018b9 	.word	0x080018b9
 80018f8:	080018b9 	.word	0x080018b9
 80018fc:	08001a41 	.word	0x08001a41
 8001900:	08001969 	.word	0x08001969
 8001904:	080019fb 	.word	0x080019fb
 8001908:	080018b9 	.word	0x080018b9
 800190c:	080018b9 	.word	0x080018b9
 8001910:	08001a63 	.word	0x08001a63
 8001914:	080018b9 	.word	0x080018b9
 8001918:	08001969 	.word	0x08001969
 800191c:	080018b9 	.word	0x080018b9
 8001920:	080018b9 	.word	0x080018b9
 8001924:	08001a03 	.word	0x08001a03
 8001928:	682b      	ldr	r3, [r5, #0]
 800192a:	1d1a      	adds	r2, r3, #4
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	602a      	str	r2, [r5, #0]
 8001930:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001934:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001938:	2301      	movs	r3, #1
 800193a:	e09f      	b.n	8001a7c <_printf_i+0x1ec>
 800193c:	6820      	ldr	r0, [r4, #0]
 800193e:	682b      	ldr	r3, [r5, #0]
 8001940:	0607      	lsls	r7, r0, #24
 8001942:	f103 0104 	add.w	r1, r3, #4
 8001946:	6029      	str	r1, [r5, #0]
 8001948:	d501      	bpl.n	800194e <_printf_i+0xbe>
 800194a:	681e      	ldr	r6, [r3, #0]
 800194c:	e003      	b.n	8001956 <_printf_i+0xc6>
 800194e:	0646      	lsls	r6, r0, #25
 8001950:	d5fb      	bpl.n	800194a <_printf_i+0xba>
 8001952:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001956:	2e00      	cmp	r6, #0
 8001958:	da03      	bge.n	8001962 <_printf_i+0xd2>
 800195a:	232d      	movs	r3, #45	; 0x2d
 800195c:	4276      	negs	r6, r6
 800195e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001962:	485a      	ldr	r0, [pc, #360]	; (8001acc <_printf_i+0x23c>)
 8001964:	230a      	movs	r3, #10
 8001966:	e012      	b.n	800198e <_printf_i+0xfe>
 8001968:	682b      	ldr	r3, [r5, #0]
 800196a:	6820      	ldr	r0, [r4, #0]
 800196c:	1d19      	adds	r1, r3, #4
 800196e:	6029      	str	r1, [r5, #0]
 8001970:	0605      	lsls	r5, r0, #24
 8001972:	d501      	bpl.n	8001978 <_printf_i+0xe8>
 8001974:	681e      	ldr	r6, [r3, #0]
 8001976:	e002      	b.n	800197e <_printf_i+0xee>
 8001978:	0641      	lsls	r1, r0, #25
 800197a:	d5fb      	bpl.n	8001974 <_printf_i+0xe4>
 800197c:	881e      	ldrh	r6, [r3, #0]
 800197e:	4853      	ldr	r0, [pc, #332]	; (8001acc <_printf_i+0x23c>)
 8001980:	2f6f      	cmp	r7, #111	; 0x6f
 8001982:	bf0c      	ite	eq
 8001984:	2308      	moveq	r3, #8
 8001986:	230a      	movne	r3, #10
 8001988:	2100      	movs	r1, #0
 800198a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800198e:	6865      	ldr	r5, [r4, #4]
 8001990:	60a5      	str	r5, [r4, #8]
 8001992:	2d00      	cmp	r5, #0
 8001994:	bfa2      	ittt	ge
 8001996:	6821      	ldrge	r1, [r4, #0]
 8001998:	f021 0104 	bicge.w	r1, r1, #4
 800199c:	6021      	strge	r1, [r4, #0]
 800199e:	b90e      	cbnz	r6, 80019a4 <_printf_i+0x114>
 80019a0:	2d00      	cmp	r5, #0
 80019a2:	d04b      	beq.n	8001a3c <_printf_i+0x1ac>
 80019a4:	4615      	mov	r5, r2
 80019a6:	fbb6 f1f3 	udiv	r1, r6, r3
 80019aa:	fb03 6711 	mls	r7, r3, r1, r6
 80019ae:	5dc7      	ldrb	r7, [r0, r7]
 80019b0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80019b4:	4637      	mov	r7, r6
 80019b6:	42bb      	cmp	r3, r7
 80019b8:	460e      	mov	r6, r1
 80019ba:	d9f4      	bls.n	80019a6 <_printf_i+0x116>
 80019bc:	2b08      	cmp	r3, #8
 80019be:	d10b      	bne.n	80019d8 <_printf_i+0x148>
 80019c0:	6823      	ldr	r3, [r4, #0]
 80019c2:	07de      	lsls	r6, r3, #31
 80019c4:	d508      	bpl.n	80019d8 <_printf_i+0x148>
 80019c6:	6923      	ldr	r3, [r4, #16]
 80019c8:	6861      	ldr	r1, [r4, #4]
 80019ca:	4299      	cmp	r1, r3
 80019cc:	bfde      	ittt	le
 80019ce:	2330      	movle	r3, #48	; 0x30
 80019d0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80019d4:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80019d8:	1b52      	subs	r2, r2, r5
 80019da:	6122      	str	r2, [r4, #16]
 80019dc:	f8cd a000 	str.w	sl, [sp]
 80019e0:	464b      	mov	r3, r9
 80019e2:	aa03      	add	r2, sp, #12
 80019e4:	4621      	mov	r1, r4
 80019e6:	4640      	mov	r0, r8
 80019e8:	f7ff fee4 	bl	80017b4 <_printf_common>
 80019ec:	3001      	adds	r0, #1
 80019ee:	d14a      	bne.n	8001a86 <_printf_i+0x1f6>
 80019f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80019f4:	b004      	add	sp, #16
 80019f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80019fa:	6823      	ldr	r3, [r4, #0]
 80019fc:	f043 0320 	orr.w	r3, r3, #32
 8001a00:	6023      	str	r3, [r4, #0]
 8001a02:	4833      	ldr	r0, [pc, #204]	; (8001ad0 <_printf_i+0x240>)
 8001a04:	2778      	movs	r7, #120	; 0x78
 8001a06:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001a0a:	6823      	ldr	r3, [r4, #0]
 8001a0c:	6829      	ldr	r1, [r5, #0]
 8001a0e:	061f      	lsls	r7, r3, #24
 8001a10:	f851 6b04 	ldr.w	r6, [r1], #4
 8001a14:	d402      	bmi.n	8001a1c <_printf_i+0x18c>
 8001a16:	065f      	lsls	r7, r3, #25
 8001a18:	bf48      	it	mi
 8001a1a:	b2b6      	uxthmi	r6, r6
 8001a1c:	07df      	lsls	r7, r3, #31
 8001a1e:	bf48      	it	mi
 8001a20:	f043 0320 	orrmi.w	r3, r3, #32
 8001a24:	6029      	str	r1, [r5, #0]
 8001a26:	bf48      	it	mi
 8001a28:	6023      	strmi	r3, [r4, #0]
 8001a2a:	b91e      	cbnz	r6, 8001a34 <_printf_i+0x1a4>
 8001a2c:	6823      	ldr	r3, [r4, #0]
 8001a2e:	f023 0320 	bic.w	r3, r3, #32
 8001a32:	6023      	str	r3, [r4, #0]
 8001a34:	2310      	movs	r3, #16
 8001a36:	e7a7      	b.n	8001988 <_printf_i+0xf8>
 8001a38:	4824      	ldr	r0, [pc, #144]	; (8001acc <_printf_i+0x23c>)
 8001a3a:	e7e4      	b.n	8001a06 <_printf_i+0x176>
 8001a3c:	4615      	mov	r5, r2
 8001a3e:	e7bd      	b.n	80019bc <_printf_i+0x12c>
 8001a40:	682b      	ldr	r3, [r5, #0]
 8001a42:	6826      	ldr	r6, [r4, #0]
 8001a44:	6961      	ldr	r1, [r4, #20]
 8001a46:	1d18      	adds	r0, r3, #4
 8001a48:	6028      	str	r0, [r5, #0]
 8001a4a:	0635      	lsls	r5, r6, #24
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	d501      	bpl.n	8001a54 <_printf_i+0x1c4>
 8001a50:	6019      	str	r1, [r3, #0]
 8001a52:	e002      	b.n	8001a5a <_printf_i+0x1ca>
 8001a54:	0670      	lsls	r0, r6, #25
 8001a56:	d5fb      	bpl.n	8001a50 <_printf_i+0x1c0>
 8001a58:	8019      	strh	r1, [r3, #0]
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	6123      	str	r3, [r4, #16]
 8001a5e:	4615      	mov	r5, r2
 8001a60:	e7bc      	b.n	80019dc <_printf_i+0x14c>
 8001a62:	682b      	ldr	r3, [r5, #0]
 8001a64:	1d1a      	adds	r2, r3, #4
 8001a66:	602a      	str	r2, [r5, #0]
 8001a68:	681d      	ldr	r5, [r3, #0]
 8001a6a:	6862      	ldr	r2, [r4, #4]
 8001a6c:	2100      	movs	r1, #0
 8001a6e:	4628      	mov	r0, r5
 8001a70:	f7fe fbae 	bl	80001d0 <memchr>
 8001a74:	b108      	cbz	r0, 8001a7a <_printf_i+0x1ea>
 8001a76:	1b40      	subs	r0, r0, r5
 8001a78:	6060      	str	r0, [r4, #4]
 8001a7a:	6863      	ldr	r3, [r4, #4]
 8001a7c:	6123      	str	r3, [r4, #16]
 8001a7e:	2300      	movs	r3, #0
 8001a80:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001a84:	e7aa      	b.n	80019dc <_printf_i+0x14c>
 8001a86:	6923      	ldr	r3, [r4, #16]
 8001a88:	462a      	mov	r2, r5
 8001a8a:	4649      	mov	r1, r9
 8001a8c:	4640      	mov	r0, r8
 8001a8e:	47d0      	blx	sl
 8001a90:	3001      	adds	r0, #1
 8001a92:	d0ad      	beq.n	80019f0 <_printf_i+0x160>
 8001a94:	6823      	ldr	r3, [r4, #0]
 8001a96:	079b      	lsls	r3, r3, #30
 8001a98:	d413      	bmi.n	8001ac2 <_printf_i+0x232>
 8001a9a:	68e0      	ldr	r0, [r4, #12]
 8001a9c:	9b03      	ldr	r3, [sp, #12]
 8001a9e:	4298      	cmp	r0, r3
 8001aa0:	bfb8      	it	lt
 8001aa2:	4618      	movlt	r0, r3
 8001aa4:	e7a6      	b.n	80019f4 <_printf_i+0x164>
 8001aa6:	2301      	movs	r3, #1
 8001aa8:	4632      	mov	r2, r6
 8001aaa:	4649      	mov	r1, r9
 8001aac:	4640      	mov	r0, r8
 8001aae:	47d0      	blx	sl
 8001ab0:	3001      	adds	r0, #1
 8001ab2:	d09d      	beq.n	80019f0 <_printf_i+0x160>
 8001ab4:	3501      	adds	r5, #1
 8001ab6:	68e3      	ldr	r3, [r4, #12]
 8001ab8:	9903      	ldr	r1, [sp, #12]
 8001aba:	1a5b      	subs	r3, r3, r1
 8001abc:	42ab      	cmp	r3, r5
 8001abe:	dcf2      	bgt.n	8001aa6 <_printf_i+0x216>
 8001ac0:	e7eb      	b.n	8001a9a <_printf_i+0x20a>
 8001ac2:	2500      	movs	r5, #0
 8001ac4:	f104 0619 	add.w	r6, r4, #25
 8001ac8:	e7f5      	b.n	8001ab6 <_printf_i+0x226>
 8001aca:	bf00      	nop
 8001acc:	08003de5 	.word	0x08003de5
 8001ad0:	08003df6 	.word	0x08003df6

08001ad4 <std>:
 8001ad4:	2300      	movs	r3, #0
 8001ad6:	b510      	push	{r4, lr}
 8001ad8:	4604      	mov	r4, r0
 8001ada:	e9c0 3300 	strd	r3, r3, [r0]
 8001ade:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001ae2:	6083      	str	r3, [r0, #8]
 8001ae4:	8181      	strh	r1, [r0, #12]
 8001ae6:	6643      	str	r3, [r0, #100]	; 0x64
 8001ae8:	81c2      	strh	r2, [r0, #14]
 8001aea:	6183      	str	r3, [r0, #24]
 8001aec:	4619      	mov	r1, r3
 8001aee:	2208      	movs	r2, #8
 8001af0:	305c      	adds	r0, #92	; 0x5c
 8001af2:	f000 f91f 	bl	8001d34 <memset>
 8001af6:	4b0d      	ldr	r3, [pc, #52]	; (8001b2c <std+0x58>)
 8001af8:	6263      	str	r3, [r4, #36]	; 0x24
 8001afa:	4b0d      	ldr	r3, [pc, #52]	; (8001b30 <std+0x5c>)
 8001afc:	62a3      	str	r3, [r4, #40]	; 0x28
 8001afe:	4b0d      	ldr	r3, [pc, #52]	; (8001b34 <std+0x60>)
 8001b00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001b02:	4b0d      	ldr	r3, [pc, #52]	; (8001b38 <std+0x64>)
 8001b04:	6323      	str	r3, [r4, #48]	; 0x30
 8001b06:	4b0d      	ldr	r3, [pc, #52]	; (8001b3c <std+0x68>)
 8001b08:	6224      	str	r4, [r4, #32]
 8001b0a:	429c      	cmp	r4, r3
 8001b0c:	d006      	beq.n	8001b1c <std+0x48>
 8001b0e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001b12:	4294      	cmp	r4, r2
 8001b14:	d002      	beq.n	8001b1c <std+0x48>
 8001b16:	33d0      	adds	r3, #208	; 0xd0
 8001b18:	429c      	cmp	r4, r3
 8001b1a:	d105      	bne.n	8001b28 <std+0x54>
 8001b1c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001b20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b24:	f000 b93c 	b.w	8001da0 <__retarget_lock_init_recursive>
 8001b28:	bd10      	pop	{r4, pc}
 8001b2a:	bf00      	nop
 8001b2c:	080036e1 	.word	0x080036e1
 8001b30:	08003703 	.word	0x08003703
 8001b34:	0800373b 	.word	0x0800373b
 8001b38:	0800375f 	.word	0x0800375f
 8001b3c:	200001e8 	.word	0x200001e8

08001b40 <stdio_exit_handler>:
 8001b40:	4a02      	ldr	r2, [pc, #8]	; (8001b4c <stdio_exit_handler+0xc>)
 8001b42:	4903      	ldr	r1, [pc, #12]	; (8001b50 <stdio_exit_handler+0x10>)
 8001b44:	4803      	ldr	r0, [pc, #12]	; (8001b54 <stdio_exit_handler+0x14>)
 8001b46:	f000 b869 	b.w	8001c1c <_fwalk_sglue>
 8001b4a:	bf00      	nop
 8001b4c:	20000000 	.word	0x20000000
 8001b50:	08002f81 	.word	0x08002f81
 8001b54:	2000000c 	.word	0x2000000c

08001b58 <cleanup_stdio>:
 8001b58:	6841      	ldr	r1, [r0, #4]
 8001b5a:	4b0c      	ldr	r3, [pc, #48]	; (8001b8c <cleanup_stdio+0x34>)
 8001b5c:	4299      	cmp	r1, r3
 8001b5e:	b510      	push	{r4, lr}
 8001b60:	4604      	mov	r4, r0
 8001b62:	d001      	beq.n	8001b68 <cleanup_stdio+0x10>
 8001b64:	f001 fa0c 	bl	8002f80 <_fflush_r>
 8001b68:	68a1      	ldr	r1, [r4, #8]
 8001b6a:	4b09      	ldr	r3, [pc, #36]	; (8001b90 <cleanup_stdio+0x38>)
 8001b6c:	4299      	cmp	r1, r3
 8001b6e:	d002      	beq.n	8001b76 <cleanup_stdio+0x1e>
 8001b70:	4620      	mov	r0, r4
 8001b72:	f001 fa05 	bl	8002f80 <_fflush_r>
 8001b76:	68e1      	ldr	r1, [r4, #12]
 8001b78:	4b06      	ldr	r3, [pc, #24]	; (8001b94 <cleanup_stdio+0x3c>)
 8001b7a:	4299      	cmp	r1, r3
 8001b7c:	d004      	beq.n	8001b88 <cleanup_stdio+0x30>
 8001b7e:	4620      	mov	r0, r4
 8001b80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b84:	f001 b9fc 	b.w	8002f80 <_fflush_r>
 8001b88:	bd10      	pop	{r4, pc}
 8001b8a:	bf00      	nop
 8001b8c:	200001e8 	.word	0x200001e8
 8001b90:	20000250 	.word	0x20000250
 8001b94:	200002b8 	.word	0x200002b8

08001b98 <global_stdio_init.part.0>:
 8001b98:	b510      	push	{r4, lr}
 8001b9a:	4b0b      	ldr	r3, [pc, #44]	; (8001bc8 <global_stdio_init.part.0+0x30>)
 8001b9c:	4c0b      	ldr	r4, [pc, #44]	; (8001bcc <global_stdio_init.part.0+0x34>)
 8001b9e:	4a0c      	ldr	r2, [pc, #48]	; (8001bd0 <global_stdio_init.part.0+0x38>)
 8001ba0:	601a      	str	r2, [r3, #0]
 8001ba2:	4620      	mov	r0, r4
 8001ba4:	2200      	movs	r2, #0
 8001ba6:	2104      	movs	r1, #4
 8001ba8:	f7ff ff94 	bl	8001ad4 <std>
 8001bac:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001bb0:	2201      	movs	r2, #1
 8001bb2:	2109      	movs	r1, #9
 8001bb4:	f7ff ff8e 	bl	8001ad4 <std>
 8001bb8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001bbc:	2202      	movs	r2, #2
 8001bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bc2:	2112      	movs	r1, #18
 8001bc4:	f7ff bf86 	b.w	8001ad4 <std>
 8001bc8:	20000320 	.word	0x20000320
 8001bcc:	200001e8 	.word	0x200001e8
 8001bd0:	08001b41 	.word	0x08001b41

08001bd4 <__sfp_lock_acquire>:
 8001bd4:	4801      	ldr	r0, [pc, #4]	; (8001bdc <__sfp_lock_acquire+0x8>)
 8001bd6:	f000 b8e4 	b.w	8001da2 <__retarget_lock_acquire_recursive>
 8001bda:	bf00      	nop
 8001bdc:	20000325 	.word	0x20000325

08001be0 <__sfp_lock_release>:
 8001be0:	4801      	ldr	r0, [pc, #4]	; (8001be8 <__sfp_lock_release+0x8>)
 8001be2:	f000 b8df 	b.w	8001da4 <__retarget_lock_release_recursive>
 8001be6:	bf00      	nop
 8001be8:	20000325 	.word	0x20000325

08001bec <__sinit>:
 8001bec:	b510      	push	{r4, lr}
 8001bee:	4604      	mov	r4, r0
 8001bf0:	f7ff fff0 	bl	8001bd4 <__sfp_lock_acquire>
 8001bf4:	6a23      	ldr	r3, [r4, #32]
 8001bf6:	b11b      	cbz	r3, 8001c00 <__sinit+0x14>
 8001bf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bfc:	f7ff bff0 	b.w	8001be0 <__sfp_lock_release>
 8001c00:	4b04      	ldr	r3, [pc, #16]	; (8001c14 <__sinit+0x28>)
 8001c02:	6223      	str	r3, [r4, #32]
 8001c04:	4b04      	ldr	r3, [pc, #16]	; (8001c18 <__sinit+0x2c>)
 8001c06:	681b      	ldr	r3, [r3, #0]
 8001c08:	2b00      	cmp	r3, #0
 8001c0a:	d1f5      	bne.n	8001bf8 <__sinit+0xc>
 8001c0c:	f7ff ffc4 	bl	8001b98 <global_stdio_init.part.0>
 8001c10:	e7f2      	b.n	8001bf8 <__sinit+0xc>
 8001c12:	bf00      	nop
 8001c14:	08001b59 	.word	0x08001b59
 8001c18:	20000320 	.word	0x20000320

08001c1c <_fwalk_sglue>:
 8001c1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001c20:	4607      	mov	r7, r0
 8001c22:	4688      	mov	r8, r1
 8001c24:	4614      	mov	r4, r2
 8001c26:	2600      	movs	r6, #0
 8001c28:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001c2c:	f1b9 0901 	subs.w	r9, r9, #1
 8001c30:	d505      	bpl.n	8001c3e <_fwalk_sglue+0x22>
 8001c32:	6824      	ldr	r4, [r4, #0]
 8001c34:	2c00      	cmp	r4, #0
 8001c36:	d1f7      	bne.n	8001c28 <_fwalk_sglue+0xc>
 8001c38:	4630      	mov	r0, r6
 8001c3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001c3e:	89ab      	ldrh	r3, [r5, #12]
 8001c40:	2b01      	cmp	r3, #1
 8001c42:	d907      	bls.n	8001c54 <_fwalk_sglue+0x38>
 8001c44:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001c48:	3301      	adds	r3, #1
 8001c4a:	d003      	beq.n	8001c54 <_fwalk_sglue+0x38>
 8001c4c:	4629      	mov	r1, r5
 8001c4e:	4638      	mov	r0, r7
 8001c50:	47c0      	blx	r8
 8001c52:	4306      	orrs	r6, r0
 8001c54:	3568      	adds	r5, #104	; 0x68
 8001c56:	e7e9      	b.n	8001c2c <_fwalk_sglue+0x10>

08001c58 <iprintf>:
 8001c58:	b40f      	push	{r0, r1, r2, r3}
 8001c5a:	b507      	push	{r0, r1, r2, lr}
 8001c5c:	4906      	ldr	r1, [pc, #24]	; (8001c78 <iprintf+0x20>)
 8001c5e:	ab04      	add	r3, sp, #16
 8001c60:	6808      	ldr	r0, [r1, #0]
 8001c62:	f853 2b04 	ldr.w	r2, [r3], #4
 8001c66:	6881      	ldr	r1, [r0, #8]
 8001c68:	9301      	str	r3, [sp, #4]
 8001c6a:	f000 ff41 	bl	8002af0 <_vfiprintf_r>
 8001c6e:	b003      	add	sp, #12
 8001c70:	f85d eb04 	ldr.w	lr, [sp], #4
 8001c74:	b004      	add	sp, #16
 8001c76:	4770      	bx	lr
 8001c78:	20000058 	.word	0x20000058

08001c7c <_puts_r>:
 8001c7c:	6a03      	ldr	r3, [r0, #32]
 8001c7e:	b570      	push	{r4, r5, r6, lr}
 8001c80:	6884      	ldr	r4, [r0, #8]
 8001c82:	4605      	mov	r5, r0
 8001c84:	460e      	mov	r6, r1
 8001c86:	b90b      	cbnz	r3, 8001c8c <_puts_r+0x10>
 8001c88:	f7ff ffb0 	bl	8001bec <__sinit>
 8001c8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c8e:	07db      	lsls	r3, r3, #31
 8001c90:	d405      	bmi.n	8001c9e <_puts_r+0x22>
 8001c92:	89a3      	ldrh	r3, [r4, #12]
 8001c94:	0598      	lsls	r0, r3, #22
 8001c96:	d402      	bmi.n	8001c9e <_puts_r+0x22>
 8001c98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c9a:	f000 f882 	bl	8001da2 <__retarget_lock_acquire_recursive>
 8001c9e:	89a3      	ldrh	r3, [r4, #12]
 8001ca0:	0719      	lsls	r1, r3, #28
 8001ca2:	d513      	bpl.n	8001ccc <_puts_r+0x50>
 8001ca4:	6923      	ldr	r3, [r4, #16]
 8001ca6:	b18b      	cbz	r3, 8001ccc <_puts_r+0x50>
 8001ca8:	3e01      	subs	r6, #1
 8001caa:	68a3      	ldr	r3, [r4, #8]
 8001cac:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001cb0:	3b01      	subs	r3, #1
 8001cb2:	60a3      	str	r3, [r4, #8]
 8001cb4:	b9e9      	cbnz	r1, 8001cf2 <_puts_r+0x76>
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	da2e      	bge.n	8001d18 <_puts_r+0x9c>
 8001cba:	4622      	mov	r2, r4
 8001cbc:	210a      	movs	r1, #10
 8001cbe:	4628      	mov	r0, r5
 8001cc0:	f001 fd51 	bl	8003766 <__swbuf_r>
 8001cc4:	3001      	adds	r0, #1
 8001cc6:	d007      	beq.n	8001cd8 <_puts_r+0x5c>
 8001cc8:	250a      	movs	r5, #10
 8001cca:	e007      	b.n	8001cdc <_puts_r+0x60>
 8001ccc:	4621      	mov	r1, r4
 8001cce:	4628      	mov	r0, r5
 8001cd0:	f001 fd86 	bl	80037e0 <__swsetup_r>
 8001cd4:	2800      	cmp	r0, #0
 8001cd6:	d0e7      	beq.n	8001ca8 <_puts_r+0x2c>
 8001cd8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001cdc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001cde:	07da      	lsls	r2, r3, #31
 8001ce0:	d405      	bmi.n	8001cee <_puts_r+0x72>
 8001ce2:	89a3      	ldrh	r3, [r4, #12]
 8001ce4:	059b      	lsls	r3, r3, #22
 8001ce6:	d402      	bmi.n	8001cee <_puts_r+0x72>
 8001ce8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001cea:	f000 f85b 	bl	8001da4 <__retarget_lock_release_recursive>
 8001cee:	4628      	mov	r0, r5
 8001cf0:	bd70      	pop	{r4, r5, r6, pc}
 8001cf2:	2b00      	cmp	r3, #0
 8001cf4:	da04      	bge.n	8001d00 <_puts_r+0x84>
 8001cf6:	69a2      	ldr	r2, [r4, #24]
 8001cf8:	429a      	cmp	r2, r3
 8001cfa:	dc06      	bgt.n	8001d0a <_puts_r+0x8e>
 8001cfc:	290a      	cmp	r1, #10
 8001cfe:	d004      	beq.n	8001d0a <_puts_r+0x8e>
 8001d00:	6823      	ldr	r3, [r4, #0]
 8001d02:	1c5a      	adds	r2, r3, #1
 8001d04:	6022      	str	r2, [r4, #0]
 8001d06:	7019      	strb	r1, [r3, #0]
 8001d08:	e7cf      	b.n	8001caa <_puts_r+0x2e>
 8001d0a:	4622      	mov	r2, r4
 8001d0c:	4628      	mov	r0, r5
 8001d0e:	f001 fd2a 	bl	8003766 <__swbuf_r>
 8001d12:	3001      	adds	r0, #1
 8001d14:	d1c9      	bne.n	8001caa <_puts_r+0x2e>
 8001d16:	e7df      	b.n	8001cd8 <_puts_r+0x5c>
 8001d18:	6823      	ldr	r3, [r4, #0]
 8001d1a:	250a      	movs	r5, #10
 8001d1c:	1c5a      	adds	r2, r3, #1
 8001d1e:	6022      	str	r2, [r4, #0]
 8001d20:	701d      	strb	r5, [r3, #0]
 8001d22:	e7db      	b.n	8001cdc <_puts_r+0x60>

08001d24 <puts>:
 8001d24:	4b02      	ldr	r3, [pc, #8]	; (8001d30 <puts+0xc>)
 8001d26:	4601      	mov	r1, r0
 8001d28:	6818      	ldr	r0, [r3, #0]
 8001d2a:	f7ff bfa7 	b.w	8001c7c <_puts_r>
 8001d2e:	bf00      	nop
 8001d30:	20000058 	.word	0x20000058

08001d34 <memset>:
 8001d34:	4402      	add	r2, r0
 8001d36:	4603      	mov	r3, r0
 8001d38:	4293      	cmp	r3, r2
 8001d3a:	d100      	bne.n	8001d3e <memset+0xa>
 8001d3c:	4770      	bx	lr
 8001d3e:	f803 1b01 	strb.w	r1, [r3], #1
 8001d42:	e7f9      	b.n	8001d38 <memset+0x4>

08001d44 <_localeconv_r>:
 8001d44:	4800      	ldr	r0, [pc, #0]	; (8001d48 <_localeconv_r+0x4>)
 8001d46:	4770      	bx	lr
 8001d48:	2000014c 	.word	0x2000014c

08001d4c <__errno>:
 8001d4c:	4b01      	ldr	r3, [pc, #4]	; (8001d54 <__errno+0x8>)
 8001d4e:	6818      	ldr	r0, [r3, #0]
 8001d50:	4770      	bx	lr
 8001d52:	bf00      	nop
 8001d54:	20000058 	.word	0x20000058

08001d58 <__libc_init_array>:
 8001d58:	b570      	push	{r4, r5, r6, lr}
 8001d5a:	4d0d      	ldr	r5, [pc, #52]	; (8001d90 <__libc_init_array+0x38>)
 8001d5c:	4c0d      	ldr	r4, [pc, #52]	; (8001d94 <__libc_init_array+0x3c>)
 8001d5e:	1b64      	subs	r4, r4, r5
 8001d60:	10a4      	asrs	r4, r4, #2
 8001d62:	2600      	movs	r6, #0
 8001d64:	42a6      	cmp	r6, r4
 8001d66:	d109      	bne.n	8001d7c <__libc_init_array+0x24>
 8001d68:	4d0b      	ldr	r5, [pc, #44]	; (8001d98 <__libc_init_array+0x40>)
 8001d6a:	4c0c      	ldr	r4, [pc, #48]	; (8001d9c <__libc_init_array+0x44>)
 8001d6c:	f001 ff74 	bl	8003c58 <_init>
 8001d70:	1b64      	subs	r4, r4, r5
 8001d72:	10a4      	asrs	r4, r4, #2
 8001d74:	2600      	movs	r6, #0
 8001d76:	42a6      	cmp	r6, r4
 8001d78:	d105      	bne.n	8001d86 <__libc_init_array+0x2e>
 8001d7a:	bd70      	pop	{r4, r5, r6, pc}
 8001d7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001d80:	4798      	blx	r3
 8001d82:	3601      	adds	r6, #1
 8001d84:	e7ee      	b.n	8001d64 <__libc_init_array+0xc>
 8001d86:	f855 3b04 	ldr.w	r3, [r5], #4
 8001d8a:	4798      	blx	r3
 8001d8c:	3601      	adds	r6, #1
 8001d8e:	e7f2      	b.n	8001d76 <__libc_init_array+0x1e>
 8001d90:	08004144 	.word	0x08004144
 8001d94:	08004144 	.word	0x08004144
 8001d98:	08004144 	.word	0x08004144
 8001d9c:	08004148 	.word	0x08004148

08001da0 <__retarget_lock_init_recursive>:
 8001da0:	4770      	bx	lr

08001da2 <__retarget_lock_acquire_recursive>:
 8001da2:	4770      	bx	lr

08001da4 <__retarget_lock_release_recursive>:
 8001da4:	4770      	bx	lr

08001da6 <quorem>:
 8001da6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001daa:	6903      	ldr	r3, [r0, #16]
 8001dac:	690c      	ldr	r4, [r1, #16]
 8001dae:	42a3      	cmp	r3, r4
 8001db0:	4607      	mov	r7, r0
 8001db2:	db7e      	blt.n	8001eb2 <quorem+0x10c>
 8001db4:	3c01      	subs	r4, #1
 8001db6:	f101 0814 	add.w	r8, r1, #20
 8001dba:	f100 0514 	add.w	r5, r0, #20
 8001dbe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001dc2:	9301      	str	r3, [sp, #4]
 8001dc4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8001dc8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001dcc:	3301      	adds	r3, #1
 8001dce:	429a      	cmp	r2, r3
 8001dd0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8001dd4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8001dd8:	fbb2 f6f3 	udiv	r6, r2, r3
 8001ddc:	d331      	bcc.n	8001e42 <quorem+0x9c>
 8001dde:	f04f 0e00 	mov.w	lr, #0
 8001de2:	4640      	mov	r0, r8
 8001de4:	46ac      	mov	ip, r5
 8001de6:	46f2      	mov	sl, lr
 8001de8:	f850 2b04 	ldr.w	r2, [r0], #4
 8001dec:	b293      	uxth	r3, r2
 8001dee:	fb06 e303 	mla	r3, r6, r3, lr
 8001df2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8001df6:	0c1a      	lsrs	r2, r3, #16
 8001df8:	b29b      	uxth	r3, r3
 8001dfa:	ebaa 0303 	sub.w	r3, sl, r3
 8001dfe:	f8dc a000 	ldr.w	sl, [ip]
 8001e02:	fa13 f38a 	uxtah	r3, r3, sl
 8001e06:	fb06 220e 	mla	r2, r6, lr, r2
 8001e0a:	9300      	str	r3, [sp, #0]
 8001e0c:	9b00      	ldr	r3, [sp, #0]
 8001e0e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8001e12:	b292      	uxth	r2, r2
 8001e14:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8001e18:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001e1c:	f8bd 3000 	ldrh.w	r3, [sp]
 8001e20:	4581      	cmp	r9, r0
 8001e22:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001e26:	f84c 3b04 	str.w	r3, [ip], #4
 8001e2a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8001e2e:	d2db      	bcs.n	8001de8 <quorem+0x42>
 8001e30:	f855 300b 	ldr.w	r3, [r5, fp]
 8001e34:	b92b      	cbnz	r3, 8001e42 <quorem+0x9c>
 8001e36:	9b01      	ldr	r3, [sp, #4]
 8001e38:	3b04      	subs	r3, #4
 8001e3a:	429d      	cmp	r5, r3
 8001e3c:	461a      	mov	r2, r3
 8001e3e:	d32c      	bcc.n	8001e9a <quorem+0xf4>
 8001e40:	613c      	str	r4, [r7, #16]
 8001e42:	4638      	mov	r0, r7
 8001e44:	f001 fb4c 	bl	80034e0 <__mcmp>
 8001e48:	2800      	cmp	r0, #0
 8001e4a:	db22      	blt.n	8001e92 <quorem+0xec>
 8001e4c:	3601      	adds	r6, #1
 8001e4e:	4629      	mov	r1, r5
 8001e50:	2000      	movs	r0, #0
 8001e52:	f858 2b04 	ldr.w	r2, [r8], #4
 8001e56:	f8d1 c000 	ldr.w	ip, [r1]
 8001e5a:	b293      	uxth	r3, r2
 8001e5c:	1ac3      	subs	r3, r0, r3
 8001e5e:	0c12      	lsrs	r2, r2, #16
 8001e60:	fa13 f38c 	uxtah	r3, r3, ip
 8001e64:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8001e68:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001e6c:	b29b      	uxth	r3, r3
 8001e6e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001e72:	45c1      	cmp	r9, r8
 8001e74:	f841 3b04 	str.w	r3, [r1], #4
 8001e78:	ea4f 4022 	mov.w	r0, r2, asr #16
 8001e7c:	d2e9      	bcs.n	8001e52 <quorem+0xac>
 8001e7e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001e82:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001e86:	b922      	cbnz	r2, 8001e92 <quorem+0xec>
 8001e88:	3b04      	subs	r3, #4
 8001e8a:	429d      	cmp	r5, r3
 8001e8c:	461a      	mov	r2, r3
 8001e8e:	d30a      	bcc.n	8001ea6 <quorem+0x100>
 8001e90:	613c      	str	r4, [r7, #16]
 8001e92:	4630      	mov	r0, r6
 8001e94:	b003      	add	sp, #12
 8001e96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e9a:	6812      	ldr	r2, [r2, #0]
 8001e9c:	3b04      	subs	r3, #4
 8001e9e:	2a00      	cmp	r2, #0
 8001ea0:	d1ce      	bne.n	8001e40 <quorem+0x9a>
 8001ea2:	3c01      	subs	r4, #1
 8001ea4:	e7c9      	b.n	8001e3a <quorem+0x94>
 8001ea6:	6812      	ldr	r2, [r2, #0]
 8001ea8:	3b04      	subs	r3, #4
 8001eaa:	2a00      	cmp	r2, #0
 8001eac:	d1f0      	bne.n	8001e90 <quorem+0xea>
 8001eae:	3c01      	subs	r4, #1
 8001eb0:	e7eb      	b.n	8001e8a <quorem+0xe4>
 8001eb2:	2000      	movs	r0, #0
 8001eb4:	e7ee      	b.n	8001e94 <quorem+0xee>
	...

08001eb8 <_dtoa_r>:
 8001eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ebc:	ed2d 8b04 	vpush	{d8-d9}
 8001ec0:	69c5      	ldr	r5, [r0, #28]
 8001ec2:	b093      	sub	sp, #76	; 0x4c
 8001ec4:	ed8d 0b02 	vstr	d0, [sp, #8]
 8001ec8:	ec57 6b10 	vmov	r6, r7, d0
 8001ecc:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8001ed0:	9107      	str	r1, [sp, #28]
 8001ed2:	4604      	mov	r4, r0
 8001ed4:	920a      	str	r2, [sp, #40]	; 0x28
 8001ed6:	930d      	str	r3, [sp, #52]	; 0x34
 8001ed8:	b975      	cbnz	r5, 8001ef8 <_dtoa_r+0x40>
 8001eda:	2010      	movs	r0, #16
 8001edc:	f000 ff22 	bl	8002d24 <malloc>
 8001ee0:	4602      	mov	r2, r0
 8001ee2:	61e0      	str	r0, [r4, #28]
 8001ee4:	b920      	cbnz	r0, 8001ef0 <_dtoa_r+0x38>
 8001ee6:	4bae      	ldr	r3, [pc, #696]	; (80021a0 <_dtoa_r+0x2e8>)
 8001ee8:	21ef      	movs	r1, #239	; 0xef
 8001eea:	48ae      	ldr	r0, [pc, #696]	; (80021a4 <_dtoa_r+0x2ec>)
 8001eec:	f001 fdb8 	bl	8003a60 <__assert_func>
 8001ef0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001ef4:	6005      	str	r5, [r0, #0]
 8001ef6:	60c5      	str	r5, [r0, #12]
 8001ef8:	69e3      	ldr	r3, [r4, #28]
 8001efa:	6819      	ldr	r1, [r3, #0]
 8001efc:	b151      	cbz	r1, 8001f14 <_dtoa_r+0x5c>
 8001efe:	685a      	ldr	r2, [r3, #4]
 8001f00:	604a      	str	r2, [r1, #4]
 8001f02:	2301      	movs	r3, #1
 8001f04:	4093      	lsls	r3, r2
 8001f06:	608b      	str	r3, [r1, #8]
 8001f08:	4620      	mov	r0, r4
 8001f0a:	f001 f8ad 	bl	8003068 <_Bfree>
 8001f0e:	69e3      	ldr	r3, [r4, #28]
 8001f10:	2200      	movs	r2, #0
 8001f12:	601a      	str	r2, [r3, #0]
 8001f14:	1e3b      	subs	r3, r7, #0
 8001f16:	bfbb      	ittet	lt
 8001f18:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8001f1c:	9303      	strlt	r3, [sp, #12]
 8001f1e:	2300      	movge	r3, #0
 8001f20:	2201      	movlt	r2, #1
 8001f22:	bfac      	ite	ge
 8001f24:	f8c8 3000 	strge.w	r3, [r8]
 8001f28:	f8c8 2000 	strlt.w	r2, [r8]
 8001f2c:	4b9e      	ldr	r3, [pc, #632]	; (80021a8 <_dtoa_r+0x2f0>)
 8001f2e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8001f32:	ea33 0308 	bics.w	r3, r3, r8
 8001f36:	d11b      	bne.n	8001f70 <_dtoa_r+0xb8>
 8001f38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8001f3a:	f242 730f 	movw	r3, #9999	; 0x270f
 8001f3e:	6013      	str	r3, [r2, #0]
 8001f40:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8001f44:	4333      	orrs	r3, r6
 8001f46:	f000 8593 	beq.w	8002a70 <_dtoa_r+0xbb8>
 8001f4a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f4c:	b963      	cbnz	r3, 8001f68 <_dtoa_r+0xb0>
 8001f4e:	4b97      	ldr	r3, [pc, #604]	; (80021ac <_dtoa_r+0x2f4>)
 8001f50:	e027      	b.n	8001fa2 <_dtoa_r+0xea>
 8001f52:	4b97      	ldr	r3, [pc, #604]	; (80021b0 <_dtoa_r+0x2f8>)
 8001f54:	9300      	str	r3, [sp, #0]
 8001f56:	3308      	adds	r3, #8
 8001f58:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8001f5a:	6013      	str	r3, [r2, #0]
 8001f5c:	9800      	ldr	r0, [sp, #0]
 8001f5e:	b013      	add	sp, #76	; 0x4c
 8001f60:	ecbd 8b04 	vpop	{d8-d9}
 8001f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f68:	4b90      	ldr	r3, [pc, #576]	; (80021ac <_dtoa_r+0x2f4>)
 8001f6a:	9300      	str	r3, [sp, #0]
 8001f6c:	3303      	adds	r3, #3
 8001f6e:	e7f3      	b.n	8001f58 <_dtoa_r+0xa0>
 8001f70:	ed9d 7b02 	vldr	d7, [sp, #8]
 8001f74:	2200      	movs	r2, #0
 8001f76:	ec51 0b17 	vmov	r0, r1, d7
 8001f7a:	eeb0 8a47 	vmov.f32	s16, s14
 8001f7e:	eef0 8a67 	vmov.f32	s17, s15
 8001f82:	2300      	movs	r3, #0
 8001f84:	f7fe fda0 	bl	8000ac8 <__aeabi_dcmpeq>
 8001f88:	4681      	mov	r9, r0
 8001f8a:	b160      	cbz	r0, 8001fa6 <_dtoa_r+0xee>
 8001f8c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8001f8e:	2301      	movs	r3, #1
 8001f90:	6013      	str	r3, [r2, #0]
 8001f92:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	f000 8568 	beq.w	8002a6a <_dtoa_r+0xbb2>
 8001f9a:	4b86      	ldr	r3, [pc, #536]	; (80021b4 <_dtoa_r+0x2fc>)
 8001f9c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8001f9e:	6013      	str	r3, [r2, #0]
 8001fa0:	3b01      	subs	r3, #1
 8001fa2:	9300      	str	r3, [sp, #0]
 8001fa4:	e7da      	b.n	8001f5c <_dtoa_r+0xa4>
 8001fa6:	aa10      	add	r2, sp, #64	; 0x40
 8001fa8:	a911      	add	r1, sp, #68	; 0x44
 8001faa:	4620      	mov	r0, r4
 8001fac:	eeb0 0a48 	vmov.f32	s0, s16
 8001fb0:	eef0 0a68 	vmov.f32	s1, s17
 8001fb4:	f001 fb3a 	bl	800362c <__d2b>
 8001fb8:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8001fbc:	4682      	mov	sl, r0
 8001fbe:	2d00      	cmp	r5, #0
 8001fc0:	d07f      	beq.n	80020c2 <_dtoa_r+0x20a>
 8001fc2:	ee18 3a90 	vmov	r3, s17
 8001fc6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001fca:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8001fce:	ec51 0b18 	vmov	r0, r1, d8
 8001fd2:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8001fd6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8001fda:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8001fde:	4619      	mov	r1, r3
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	4b75      	ldr	r3, [pc, #468]	; (80021b8 <_dtoa_r+0x300>)
 8001fe4:	f7fe f950 	bl	8000288 <__aeabi_dsub>
 8001fe8:	a367      	add	r3, pc, #412	; (adr r3, 8002188 <_dtoa_r+0x2d0>)
 8001fea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fee:	f7fe fb03 	bl	80005f8 <__aeabi_dmul>
 8001ff2:	a367      	add	r3, pc, #412	; (adr r3, 8002190 <_dtoa_r+0x2d8>)
 8001ff4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ff8:	f7fe f948 	bl	800028c <__adddf3>
 8001ffc:	4606      	mov	r6, r0
 8001ffe:	4628      	mov	r0, r5
 8002000:	460f      	mov	r7, r1
 8002002:	f7fe fa8f 	bl	8000524 <__aeabi_i2d>
 8002006:	a364      	add	r3, pc, #400	; (adr r3, 8002198 <_dtoa_r+0x2e0>)
 8002008:	e9d3 2300 	ldrd	r2, r3, [r3]
 800200c:	f7fe faf4 	bl	80005f8 <__aeabi_dmul>
 8002010:	4602      	mov	r2, r0
 8002012:	460b      	mov	r3, r1
 8002014:	4630      	mov	r0, r6
 8002016:	4639      	mov	r1, r7
 8002018:	f7fe f938 	bl	800028c <__adddf3>
 800201c:	4606      	mov	r6, r0
 800201e:	460f      	mov	r7, r1
 8002020:	f7fe fd9a 	bl	8000b58 <__aeabi_d2iz>
 8002024:	2200      	movs	r2, #0
 8002026:	4683      	mov	fp, r0
 8002028:	2300      	movs	r3, #0
 800202a:	4630      	mov	r0, r6
 800202c:	4639      	mov	r1, r7
 800202e:	f7fe fd55 	bl	8000adc <__aeabi_dcmplt>
 8002032:	b148      	cbz	r0, 8002048 <_dtoa_r+0x190>
 8002034:	4658      	mov	r0, fp
 8002036:	f7fe fa75 	bl	8000524 <__aeabi_i2d>
 800203a:	4632      	mov	r2, r6
 800203c:	463b      	mov	r3, r7
 800203e:	f7fe fd43 	bl	8000ac8 <__aeabi_dcmpeq>
 8002042:	b908      	cbnz	r0, 8002048 <_dtoa_r+0x190>
 8002044:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002048:	f1bb 0f16 	cmp.w	fp, #22
 800204c:	d857      	bhi.n	80020fe <_dtoa_r+0x246>
 800204e:	4b5b      	ldr	r3, [pc, #364]	; (80021bc <_dtoa_r+0x304>)
 8002050:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002054:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002058:	ec51 0b18 	vmov	r0, r1, d8
 800205c:	f7fe fd3e 	bl	8000adc <__aeabi_dcmplt>
 8002060:	2800      	cmp	r0, #0
 8002062:	d04e      	beq.n	8002102 <_dtoa_r+0x24a>
 8002064:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002068:	2300      	movs	r3, #0
 800206a:	930c      	str	r3, [sp, #48]	; 0x30
 800206c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800206e:	1b5b      	subs	r3, r3, r5
 8002070:	1e5a      	subs	r2, r3, #1
 8002072:	bf45      	ittet	mi
 8002074:	f1c3 0301 	rsbmi	r3, r3, #1
 8002078:	9305      	strmi	r3, [sp, #20]
 800207a:	2300      	movpl	r3, #0
 800207c:	2300      	movmi	r3, #0
 800207e:	9206      	str	r2, [sp, #24]
 8002080:	bf54      	ite	pl
 8002082:	9305      	strpl	r3, [sp, #20]
 8002084:	9306      	strmi	r3, [sp, #24]
 8002086:	f1bb 0f00 	cmp.w	fp, #0
 800208a:	db3c      	blt.n	8002106 <_dtoa_r+0x24e>
 800208c:	9b06      	ldr	r3, [sp, #24]
 800208e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8002092:	445b      	add	r3, fp
 8002094:	9306      	str	r3, [sp, #24]
 8002096:	2300      	movs	r3, #0
 8002098:	9308      	str	r3, [sp, #32]
 800209a:	9b07      	ldr	r3, [sp, #28]
 800209c:	2b09      	cmp	r3, #9
 800209e:	d868      	bhi.n	8002172 <_dtoa_r+0x2ba>
 80020a0:	2b05      	cmp	r3, #5
 80020a2:	bfc4      	itt	gt
 80020a4:	3b04      	subgt	r3, #4
 80020a6:	9307      	strgt	r3, [sp, #28]
 80020a8:	9b07      	ldr	r3, [sp, #28]
 80020aa:	f1a3 0302 	sub.w	r3, r3, #2
 80020ae:	bfcc      	ite	gt
 80020b0:	2500      	movgt	r5, #0
 80020b2:	2501      	movle	r5, #1
 80020b4:	2b03      	cmp	r3, #3
 80020b6:	f200 8085 	bhi.w	80021c4 <_dtoa_r+0x30c>
 80020ba:	e8df f003 	tbb	[pc, r3]
 80020be:	3b2e      	.short	0x3b2e
 80020c0:	5839      	.short	0x5839
 80020c2:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80020c6:	441d      	add	r5, r3
 80020c8:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80020cc:	2b20      	cmp	r3, #32
 80020ce:	bfc1      	itttt	gt
 80020d0:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80020d4:	fa08 f803 	lslgt.w	r8, r8, r3
 80020d8:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 80020dc:	fa26 f303 	lsrgt.w	r3, r6, r3
 80020e0:	bfd6      	itet	le
 80020e2:	f1c3 0320 	rsble	r3, r3, #32
 80020e6:	ea48 0003 	orrgt.w	r0, r8, r3
 80020ea:	fa06 f003 	lslle.w	r0, r6, r3
 80020ee:	f7fe fa09 	bl	8000504 <__aeabi_ui2d>
 80020f2:	2201      	movs	r2, #1
 80020f4:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80020f8:	3d01      	subs	r5, #1
 80020fa:	920e      	str	r2, [sp, #56]	; 0x38
 80020fc:	e76f      	b.n	8001fde <_dtoa_r+0x126>
 80020fe:	2301      	movs	r3, #1
 8002100:	e7b3      	b.n	800206a <_dtoa_r+0x1b2>
 8002102:	900c      	str	r0, [sp, #48]	; 0x30
 8002104:	e7b2      	b.n	800206c <_dtoa_r+0x1b4>
 8002106:	9b05      	ldr	r3, [sp, #20]
 8002108:	eba3 030b 	sub.w	r3, r3, fp
 800210c:	9305      	str	r3, [sp, #20]
 800210e:	f1cb 0300 	rsb	r3, fp, #0
 8002112:	9308      	str	r3, [sp, #32]
 8002114:	2300      	movs	r3, #0
 8002116:	930b      	str	r3, [sp, #44]	; 0x2c
 8002118:	e7bf      	b.n	800209a <_dtoa_r+0x1e2>
 800211a:	2300      	movs	r3, #0
 800211c:	9309      	str	r3, [sp, #36]	; 0x24
 800211e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002120:	2b00      	cmp	r3, #0
 8002122:	dc52      	bgt.n	80021ca <_dtoa_r+0x312>
 8002124:	2301      	movs	r3, #1
 8002126:	9301      	str	r3, [sp, #4]
 8002128:	9304      	str	r3, [sp, #16]
 800212a:	461a      	mov	r2, r3
 800212c:	920a      	str	r2, [sp, #40]	; 0x28
 800212e:	e00b      	b.n	8002148 <_dtoa_r+0x290>
 8002130:	2301      	movs	r3, #1
 8002132:	e7f3      	b.n	800211c <_dtoa_r+0x264>
 8002134:	2300      	movs	r3, #0
 8002136:	9309      	str	r3, [sp, #36]	; 0x24
 8002138:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800213a:	445b      	add	r3, fp
 800213c:	9301      	str	r3, [sp, #4]
 800213e:	3301      	adds	r3, #1
 8002140:	2b01      	cmp	r3, #1
 8002142:	9304      	str	r3, [sp, #16]
 8002144:	bfb8      	it	lt
 8002146:	2301      	movlt	r3, #1
 8002148:	69e0      	ldr	r0, [r4, #28]
 800214a:	2100      	movs	r1, #0
 800214c:	2204      	movs	r2, #4
 800214e:	f102 0614 	add.w	r6, r2, #20
 8002152:	429e      	cmp	r6, r3
 8002154:	d93d      	bls.n	80021d2 <_dtoa_r+0x31a>
 8002156:	6041      	str	r1, [r0, #4]
 8002158:	4620      	mov	r0, r4
 800215a:	f000 ff45 	bl	8002fe8 <_Balloc>
 800215e:	9000      	str	r0, [sp, #0]
 8002160:	2800      	cmp	r0, #0
 8002162:	d139      	bne.n	80021d8 <_dtoa_r+0x320>
 8002164:	4b16      	ldr	r3, [pc, #88]	; (80021c0 <_dtoa_r+0x308>)
 8002166:	4602      	mov	r2, r0
 8002168:	f240 11af 	movw	r1, #431	; 0x1af
 800216c:	e6bd      	b.n	8001eea <_dtoa_r+0x32>
 800216e:	2301      	movs	r3, #1
 8002170:	e7e1      	b.n	8002136 <_dtoa_r+0x27e>
 8002172:	2501      	movs	r5, #1
 8002174:	2300      	movs	r3, #0
 8002176:	9307      	str	r3, [sp, #28]
 8002178:	9509      	str	r5, [sp, #36]	; 0x24
 800217a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800217e:	9301      	str	r3, [sp, #4]
 8002180:	9304      	str	r3, [sp, #16]
 8002182:	2200      	movs	r2, #0
 8002184:	2312      	movs	r3, #18
 8002186:	e7d1      	b.n	800212c <_dtoa_r+0x274>
 8002188:	636f4361 	.word	0x636f4361
 800218c:	3fd287a7 	.word	0x3fd287a7
 8002190:	8b60c8b3 	.word	0x8b60c8b3
 8002194:	3fc68a28 	.word	0x3fc68a28
 8002198:	509f79fb 	.word	0x509f79fb
 800219c:	3fd34413 	.word	0x3fd34413
 80021a0:	08003e14 	.word	0x08003e14
 80021a4:	08003e2b 	.word	0x08003e2b
 80021a8:	7ff00000 	.word	0x7ff00000
 80021ac:	08003e10 	.word	0x08003e10
 80021b0:	08003e07 	.word	0x08003e07
 80021b4:	08003de4 	.word	0x08003de4
 80021b8:	3ff80000 	.word	0x3ff80000
 80021bc:	08003f28 	.word	0x08003f28
 80021c0:	08003e83 	.word	0x08003e83
 80021c4:	2301      	movs	r3, #1
 80021c6:	9309      	str	r3, [sp, #36]	; 0x24
 80021c8:	e7d7      	b.n	800217a <_dtoa_r+0x2c2>
 80021ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80021cc:	9301      	str	r3, [sp, #4]
 80021ce:	9304      	str	r3, [sp, #16]
 80021d0:	e7ba      	b.n	8002148 <_dtoa_r+0x290>
 80021d2:	3101      	adds	r1, #1
 80021d4:	0052      	lsls	r2, r2, #1
 80021d6:	e7ba      	b.n	800214e <_dtoa_r+0x296>
 80021d8:	69e3      	ldr	r3, [r4, #28]
 80021da:	9a00      	ldr	r2, [sp, #0]
 80021dc:	601a      	str	r2, [r3, #0]
 80021de:	9b04      	ldr	r3, [sp, #16]
 80021e0:	2b0e      	cmp	r3, #14
 80021e2:	f200 80a8 	bhi.w	8002336 <_dtoa_r+0x47e>
 80021e6:	2d00      	cmp	r5, #0
 80021e8:	f000 80a5 	beq.w	8002336 <_dtoa_r+0x47e>
 80021ec:	f1bb 0f00 	cmp.w	fp, #0
 80021f0:	dd38      	ble.n	8002264 <_dtoa_r+0x3ac>
 80021f2:	4bc0      	ldr	r3, [pc, #768]	; (80024f4 <_dtoa_r+0x63c>)
 80021f4:	f00b 020f 	and.w	r2, fp, #15
 80021f8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80021fc:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002200:	e9d3 6700 	ldrd	r6, r7, [r3]
 8002204:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002208:	d019      	beq.n	800223e <_dtoa_r+0x386>
 800220a:	4bbb      	ldr	r3, [pc, #748]	; (80024f8 <_dtoa_r+0x640>)
 800220c:	ec51 0b18 	vmov	r0, r1, d8
 8002210:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002214:	f7fe fb1a 	bl	800084c <__aeabi_ddiv>
 8002218:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800221c:	f008 080f 	and.w	r8, r8, #15
 8002220:	2503      	movs	r5, #3
 8002222:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 80024f8 <_dtoa_r+0x640>
 8002226:	f1b8 0f00 	cmp.w	r8, #0
 800222a:	d10a      	bne.n	8002242 <_dtoa_r+0x38a>
 800222c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002230:	4632      	mov	r2, r6
 8002232:	463b      	mov	r3, r7
 8002234:	f7fe fb0a 	bl	800084c <__aeabi_ddiv>
 8002238:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800223c:	e02b      	b.n	8002296 <_dtoa_r+0x3de>
 800223e:	2502      	movs	r5, #2
 8002240:	e7ef      	b.n	8002222 <_dtoa_r+0x36a>
 8002242:	f018 0f01 	tst.w	r8, #1
 8002246:	d008      	beq.n	800225a <_dtoa_r+0x3a2>
 8002248:	4630      	mov	r0, r6
 800224a:	4639      	mov	r1, r7
 800224c:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002250:	f7fe f9d2 	bl	80005f8 <__aeabi_dmul>
 8002254:	3501      	adds	r5, #1
 8002256:	4606      	mov	r6, r0
 8002258:	460f      	mov	r7, r1
 800225a:	ea4f 0868 	mov.w	r8, r8, asr #1
 800225e:	f109 0908 	add.w	r9, r9, #8
 8002262:	e7e0      	b.n	8002226 <_dtoa_r+0x36e>
 8002264:	f000 809f 	beq.w	80023a6 <_dtoa_r+0x4ee>
 8002268:	f1cb 0600 	rsb	r6, fp, #0
 800226c:	4ba1      	ldr	r3, [pc, #644]	; (80024f4 <_dtoa_r+0x63c>)
 800226e:	4fa2      	ldr	r7, [pc, #648]	; (80024f8 <_dtoa_r+0x640>)
 8002270:	f006 020f 	and.w	r2, r6, #15
 8002274:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002278:	e9d3 2300 	ldrd	r2, r3, [r3]
 800227c:	ec51 0b18 	vmov	r0, r1, d8
 8002280:	f7fe f9ba 	bl	80005f8 <__aeabi_dmul>
 8002284:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002288:	1136      	asrs	r6, r6, #4
 800228a:	2300      	movs	r3, #0
 800228c:	2502      	movs	r5, #2
 800228e:	2e00      	cmp	r6, #0
 8002290:	d17e      	bne.n	8002390 <_dtoa_r+0x4d8>
 8002292:	2b00      	cmp	r3, #0
 8002294:	d1d0      	bne.n	8002238 <_dtoa_r+0x380>
 8002296:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002298:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800229c:	2b00      	cmp	r3, #0
 800229e:	f000 8084 	beq.w	80023aa <_dtoa_r+0x4f2>
 80022a2:	4b96      	ldr	r3, [pc, #600]	; (80024fc <_dtoa_r+0x644>)
 80022a4:	2200      	movs	r2, #0
 80022a6:	4640      	mov	r0, r8
 80022a8:	4649      	mov	r1, r9
 80022aa:	f7fe fc17 	bl	8000adc <__aeabi_dcmplt>
 80022ae:	2800      	cmp	r0, #0
 80022b0:	d07b      	beq.n	80023aa <_dtoa_r+0x4f2>
 80022b2:	9b04      	ldr	r3, [sp, #16]
 80022b4:	2b00      	cmp	r3, #0
 80022b6:	d078      	beq.n	80023aa <_dtoa_r+0x4f2>
 80022b8:	9b01      	ldr	r3, [sp, #4]
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	dd39      	ble.n	8002332 <_dtoa_r+0x47a>
 80022be:	4b90      	ldr	r3, [pc, #576]	; (8002500 <_dtoa_r+0x648>)
 80022c0:	2200      	movs	r2, #0
 80022c2:	4640      	mov	r0, r8
 80022c4:	4649      	mov	r1, r9
 80022c6:	f7fe f997 	bl	80005f8 <__aeabi_dmul>
 80022ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80022ce:	9e01      	ldr	r6, [sp, #4]
 80022d0:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
 80022d4:	3501      	adds	r5, #1
 80022d6:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80022da:	4628      	mov	r0, r5
 80022dc:	f7fe f922 	bl	8000524 <__aeabi_i2d>
 80022e0:	4642      	mov	r2, r8
 80022e2:	464b      	mov	r3, r9
 80022e4:	f7fe f988 	bl	80005f8 <__aeabi_dmul>
 80022e8:	4b86      	ldr	r3, [pc, #536]	; (8002504 <_dtoa_r+0x64c>)
 80022ea:	2200      	movs	r2, #0
 80022ec:	f7fd ffce 	bl	800028c <__adddf3>
 80022f0:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 80022f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80022f8:	9303      	str	r3, [sp, #12]
 80022fa:	2e00      	cmp	r6, #0
 80022fc:	d158      	bne.n	80023b0 <_dtoa_r+0x4f8>
 80022fe:	4b82      	ldr	r3, [pc, #520]	; (8002508 <_dtoa_r+0x650>)
 8002300:	2200      	movs	r2, #0
 8002302:	4640      	mov	r0, r8
 8002304:	4649      	mov	r1, r9
 8002306:	f7fd ffbf 	bl	8000288 <__aeabi_dsub>
 800230a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800230e:	4680      	mov	r8, r0
 8002310:	4689      	mov	r9, r1
 8002312:	f7fe fc01 	bl	8000b18 <__aeabi_dcmpgt>
 8002316:	2800      	cmp	r0, #0
 8002318:	f040 8296 	bne.w	8002848 <_dtoa_r+0x990>
 800231c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002320:	4640      	mov	r0, r8
 8002322:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002326:	4649      	mov	r1, r9
 8002328:	f7fe fbd8 	bl	8000adc <__aeabi_dcmplt>
 800232c:	2800      	cmp	r0, #0
 800232e:	f040 8289 	bne.w	8002844 <_dtoa_r+0x98c>
 8002332:	ed8d 8b02 	vstr	d8, [sp, #8]
 8002336:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002338:	2b00      	cmp	r3, #0
 800233a:	f2c0 814e 	blt.w	80025da <_dtoa_r+0x722>
 800233e:	f1bb 0f0e 	cmp.w	fp, #14
 8002342:	f300 814a 	bgt.w	80025da <_dtoa_r+0x722>
 8002346:	4b6b      	ldr	r3, [pc, #428]	; (80024f4 <_dtoa_r+0x63c>)
 8002348:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800234c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002350:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002352:	2b00      	cmp	r3, #0
 8002354:	f280 80dc 	bge.w	8002510 <_dtoa_r+0x658>
 8002358:	9b04      	ldr	r3, [sp, #16]
 800235a:	2b00      	cmp	r3, #0
 800235c:	f300 80d8 	bgt.w	8002510 <_dtoa_r+0x658>
 8002360:	f040 826f 	bne.w	8002842 <_dtoa_r+0x98a>
 8002364:	4b68      	ldr	r3, [pc, #416]	; (8002508 <_dtoa_r+0x650>)
 8002366:	2200      	movs	r2, #0
 8002368:	4640      	mov	r0, r8
 800236a:	4649      	mov	r1, r9
 800236c:	f7fe f944 	bl	80005f8 <__aeabi_dmul>
 8002370:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002374:	f7fe fbc6 	bl	8000b04 <__aeabi_dcmpge>
 8002378:	9e04      	ldr	r6, [sp, #16]
 800237a:	4637      	mov	r7, r6
 800237c:	2800      	cmp	r0, #0
 800237e:	f040 8245 	bne.w	800280c <_dtoa_r+0x954>
 8002382:	9d00      	ldr	r5, [sp, #0]
 8002384:	2331      	movs	r3, #49	; 0x31
 8002386:	f805 3b01 	strb.w	r3, [r5], #1
 800238a:	f10b 0b01 	add.w	fp, fp, #1
 800238e:	e241      	b.n	8002814 <_dtoa_r+0x95c>
 8002390:	07f2      	lsls	r2, r6, #31
 8002392:	d505      	bpl.n	80023a0 <_dtoa_r+0x4e8>
 8002394:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002398:	f7fe f92e 	bl	80005f8 <__aeabi_dmul>
 800239c:	3501      	adds	r5, #1
 800239e:	2301      	movs	r3, #1
 80023a0:	1076      	asrs	r6, r6, #1
 80023a2:	3708      	adds	r7, #8
 80023a4:	e773      	b.n	800228e <_dtoa_r+0x3d6>
 80023a6:	2502      	movs	r5, #2
 80023a8:	e775      	b.n	8002296 <_dtoa_r+0x3de>
 80023aa:	9e04      	ldr	r6, [sp, #16]
 80023ac:	465f      	mov	r7, fp
 80023ae:	e792      	b.n	80022d6 <_dtoa_r+0x41e>
 80023b0:	9900      	ldr	r1, [sp, #0]
 80023b2:	4b50      	ldr	r3, [pc, #320]	; (80024f4 <_dtoa_r+0x63c>)
 80023b4:	ed9d 7b02 	vldr	d7, [sp, #8]
 80023b8:	4431      	add	r1, r6
 80023ba:	9102      	str	r1, [sp, #8]
 80023bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80023be:	eeb0 9a47 	vmov.f32	s18, s14
 80023c2:	eef0 9a67 	vmov.f32	s19, s15
 80023c6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80023ca:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80023ce:	2900      	cmp	r1, #0
 80023d0:	d044      	beq.n	800245c <_dtoa_r+0x5a4>
 80023d2:	494e      	ldr	r1, [pc, #312]	; (800250c <_dtoa_r+0x654>)
 80023d4:	2000      	movs	r0, #0
 80023d6:	f7fe fa39 	bl	800084c <__aeabi_ddiv>
 80023da:	ec53 2b19 	vmov	r2, r3, d9
 80023de:	f7fd ff53 	bl	8000288 <__aeabi_dsub>
 80023e2:	9d00      	ldr	r5, [sp, #0]
 80023e4:	ec41 0b19 	vmov	d9, r0, r1
 80023e8:	4649      	mov	r1, r9
 80023ea:	4640      	mov	r0, r8
 80023ec:	f7fe fbb4 	bl	8000b58 <__aeabi_d2iz>
 80023f0:	4606      	mov	r6, r0
 80023f2:	f7fe f897 	bl	8000524 <__aeabi_i2d>
 80023f6:	4602      	mov	r2, r0
 80023f8:	460b      	mov	r3, r1
 80023fa:	4640      	mov	r0, r8
 80023fc:	4649      	mov	r1, r9
 80023fe:	f7fd ff43 	bl	8000288 <__aeabi_dsub>
 8002402:	3630      	adds	r6, #48	; 0x30
 8002404:	f805 6b01 	strb.w	r6, [r5], #1
 8002408:	ec53 2b19 	vmov	r2, r3, d9
 800240c:	4680      	mov	r8, r0
 800240e:	4689      	mov	r9, r1
 8002410:	f7fe fb64 	bl	8000adc <__aeabi_dcmplt>
 8002414:	2800      	cmp	r0, #0
 8002416:	d164      	bne.n	80024e2 <_dtoa_r+0x62a>
 8002418:	4642      	mov	r2, r8
 800241a:	464b      	mov	r3, r9
 800241c:	4937      	ldr	r1, [pc, #220]	; (80024fc <_dtoa_r+0x644>)
 800241e:	2000      	movs	r0, #0
 8002420:	f7fd ff32 	bl	8000288 <__aeabi_dsub>
 8002424:	ec53 2b19 	vmov	r2, r3, d9
 8002428:	f7fe fb58 	bl	8000adc <__aeabi_dcmplt>
 800242c:	2800      	cmp	r0, #0
 800242e:	f040 80b6 	bne.w	800259e <_dtoa_r+0x6e6>
 8002432:	9b02      	ldr	r3, [sp, #8]
 8002434:	429d      	cmp	r5, r3
 8002436:	f43f af7c 	beq.w	8002332 <_dtoa_r+0x47a>
 800243a:	4b31      	ldr	r3, [pc, #196]	; (8002500 <_dtoa_r+0x648>)
 800243c:	ec51 0b19 	vmov	r0, r1, d9
 8002440:	2200      	movs	r2, #0
 8002442:	f7fe f8d9 	bl	80005f8 <__aeabi_dmul>
 8002446:	4b2e      	ldr	r3, [pc, #184]	; (8002500 <_dtoa_r+0x648>)
 8002448:	ec41 0b19 	vmov	d9, r0, r1
 800244c:	2200      	movs	r2, #0
 800244e:	4640      	mov	r0, r8
 8002450:	4649      	mov	r1, r9
 8002452:	f7fe f8d1 	bl	80005f8 <__aeabi_dmul>
 8002456:	4680      	mov	r8, r0
 8002458:	4689      	mov	r9, r1
 800245a:	e7c5      	b.n	80023e8 <_dtoa_r+0x530>
 800245c:	ec51 0b17 	vmov	r0, r1, d7
 8002460:	f7fe f8ca 	bl	80005f8 <__aeabi_dmul>
 8002464:	9b02      	ldr	r3, [sp, #8]
 8002466:	9d00      	ldr	r5, [sp, #0]
 8002468:	930f      	str	r3, [sp, #60]	; 0x3c
 800246a:	ec41 0b19 	vmov	d9, r0, r1
 800246e:	4649      	mov	r1, r9
 8002470:	4640      	mov	r0, r8
 8002472:	f7fe fb71 	bl	8000b58 <__aeabi_d2iz>
 8002476:	4606      	mov	r6, r0
 8002478:	f7fe f854 	bl	8000524 <__aeabi_i2d>
 800247c:	3630      	adds	r6, #48	; 0x30
 800247e:	4602      	mov	r2, r0
 8002480:	460b      	mov	r3, r1
 8002482:	4640      	mov	r0, r8
 8002484:	4649      	mov	r1, r9
 8002486:	f7fd feff 	bl	8000288 <__aeabi_dsub>
 800248a:	f805 6b01 	strb.w	r6, [r5], #1
 800248e:	9b02      	ldr	r3, [sp, #8]
 8002490:	429d      	cmp	r5, r3
 8002492:	4680      	mov	r8, r0
 8002494:	4689      	mov	r9, r1
 8002496:	f04f 0200 	mov.w	r2, #0
 800249a:	d124      	bne.n	80024e6 <_dtoa_r+0x62e>
 800249c:	4b1b      	ldr	r3, [pc, #108]	; (800250c <_dtoa_r+0x654>)
 800249e:	ec51 0b19 	vmov	r0, r1, d9
 80024a2:	f7fd fef3 	bl	800028c <__adddf3>
 80024a6:	4602      	mov	r2, r0
 80024a8:	460b      	mov	r3, r1
 80024aa:	4640      	mov	r0, r8
 80024ac:	4649      	mov	r1, r9
 80024ae:	f7fe fb33 	bl	8000b18 <__aeabi_dcmpgt>
 80024b2:	2800      	cmp	r0, #0
 80024b4:	d173      	bne.n	800259e <_dtoa_r+0x6e6>
 80024b6:	ec53 2b19 	vmov	r2, r3, d9
 80024ba:	4914      	ldr	r1, [pc, #80]	; (800250c <_dtoa_r+0x654>)
 80024bc:	2000      	movs	r0, #0
 80024be:	f7fd fee3 	bl	8000288 <__aeabi_dsub>
 80024c2:	4602      	mov	r2, r0
 80024c4:	460b      	mov	r3, r1
 80024c6:	4640      	mov	r0, r8
 80024c8:	4649      	mov	r1, r9
 80024ca:	f7fe fb07 	bl	8000adc <__aeabi_dcmplt>
 80024ce:	2800      	cmp	r0, #0
 80024d0:	f43f af2f 	beq.w	8002332 <_dtoa_r+0x47a>
 80024d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80024d6:	1e6b      	subs	r3, r5, #1
 80024d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80024da:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80024de:	2b30      	cmp	r3, #48	; 0x30
 80024e0:	d0f8      	beq.n	80024d4 <_dtoa_r+0x61c>
 80024e2:	46bb      	mov	fp, r7
 80024e4:	e04a      	b.n	800257c <_dtoa_r+0x6c4>
 80024e6:	4b06      	ldr	r3, [pc, #24]	; (8002500 <_dtoa_r+0x648>)
 80024e8:	f7fe f886 	bl	80005f8 <__aeabi_dmul>
 80024ec:	4680      	mov	r8, r0
 80024ee:	4689      	mov	r9, r1
 80024f0:	e7bd      	b.n	800246e <_dtoa_r+0x5b6>
 80024f2:	bf00      	nop
 80024f4:	08003f28 	.word	0x08003f28
 80024f8:	08003f00 	.word	0x08003f00
 80024fc:	3ff00000 	.word	0x3ff00000
 8002500:	40240000 	.word	0x40240000
 8002504:	401c0000 	.word	0x401c0000
 8002508:	40140000 	.word	0x40140000
 800250c:	3fe00000 	.word	0x3fe00000
 8002510:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002514:	9d00      	ldr	r5, [sp, #0]
 8002516:	4642      	mov	r2, r8
 8002518:	464b      	mov	r3, r9
 800251a:	4630      	mov	r0, r6
 800251c:	4639      	mov	r1, r7
 800251e:	f7fe f995 	bl	800084c <__aeabi_ddiv>
 8002522:	f7fe fb19 	bl	8000b58 <__aeabi_d2iz>
 8002526:	9001      	str	r0, [sp, #4]
 8002528:	f7fd fffc 	bl	8000524 <__aeabi_i2d>
 800252c:	4642      	mov	r2, r8
 800252e:	464b      	mov	r3, r9
 8002530:	f7fe f862 	bl	80005f8 <__aeabi_dmul>
 8002534:	4602      	mov	r2, r0
 8002536:	460b      	mov	r3, r1
 8002538:	4630      	mov	r0, r6
 800253a:	4639      	mov	r1, r7
 800253c:	f7fd fea4 	bl	8000288 <__aeabi_dsub>
 8002540:	9e01      	ldr	r6, [sp, #4]
 8002542:	9f04      	ldr	r7, [sp, #16]
 8002544:	3630      	adds	r6, #48	; 0x30
 8002546:	f805 6b01 	strb.w	r6, [r5], #1
 800254a:	9e00      	ldr	r6, [sp, #0]
 800254c:	1bae      	subs	r6, r5, r6
 800254e:	42b7      	cmp	r7, r6
 8002550:	4602      	mov	r2, r0
 8002552:	460b      	mov	r3, r1
 8002554:	d134      	bne.n	80025c0 <_dtoa_r+0x708>
 8002556:	f7fd fe99 	bl	800028c <__adddf3>
 800255a:	4642      	mov	r2, r8
 800255c:	464b      	mov	r3, r9
 800255e:	4606      	mov	r6, r0
 8002560:	460f      	mov	r7, r1
 8002562:	f7fe fad9 	bl	8000b18 <__aeabi_dcmpgt>
 8002566:	b9c8      	cbnz	r0, 800259c <_dtoa_r+0x6e4>
 8002568:	4642      	mov	r2, r8
 800256a:	464b      	mov	r3, r9
 800256c:	4630      	mov	r0, r6
 800256e:	4639      	mov	r1, r7
 8002570:	f7fe faaa 	bl	8000ac8 <__aeabi_dcmpeq>
 8002574:	b110      	cbz	r0, 800257c <_dtoa_r+0x6c4>
 8002576:	9b01      	ldr	r3, [sp, #4]
 8002578:	07db      	lsls	r3, r3, #31
 800257a:	d40f      	bmi.n	800259c <_dtoa_r+0x6e4>
 800257c:	4651      	mov	r1, sl
 800257e:	4620      	mov	r0, r4
 8002580:	f000 fd72 	bl	8003068 <_Bfree>
 8002584:	2300      	movs	r3, #0
 8002586:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002588:	702b      	strb	r3, [r5, #0]
 800258a:	f10b 0301 	add.w	r3, fp, #1
 800258e:	6013      	str	r3, [r2, #0]
 8002590:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002592:	2b00      	cmp	r3, #0
 8002594:	f43f ace2 	beq.w	8001f5c <_dtoa_r+0xa4>
 8002598:	601d      	str	r5, [r3, #0]
 800259a:	e4df      	b.n	8001f5c <_dtoa_r+0xa4>
 800259c:	465f      	mov	r7, fp
 800259e:	462b      	mov	r3, r5
 80025a0:	461d      	mov	r5, r3
 80025a2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80025a6:	2a39      	cmp	r2, #57	; 0x39
 80025a8:	d106      	bne.n	80025b8 <_dtoa_r+0x700>
 80025aa:	9a00      	ldr	r2, [sp, #0]
 80025ac:	429a      	cmp	r2, r3
 80025ae:	d1f7      	bne.n	80025a0 <_dtoa_r+0x6e8>
 80025b0:	9900      	ldr	r1, [sp, #0]
 80025b2:	2230      	movs	r2, #48	; 0x30
 80025b4:	3701      	adds	r7, #1
 80025b6:	700a      	strb	r2, [r1, #0]
 80025b8:	781a      	ldrb	r2, [r3, #0]
 80025ba:	3201      	adds	r2, #1
 80025bc:	701a      	strb	r2, [r3, #0]
 80025be:	e790      	b.n	80024e2 <_dtoa_r+0x62a>
 80025c0:	4ba3      	ldr	r3, [pc, #652]	; (8002850 <_dtoa_r+0x998>)
 80025c2:	2200      	movs	r2, #0
 80025c4:	f7fe f818 	bl	80005f8 <__aeabi_dmul>
 80025c8:	2200      	movs	r2, #0
 80025ca:	2300      	movs	r3, #0
 80025cc:	4606      	mov	r6, r0
 80025ce:	460f      	mov	r7, r1
 80025d0:	f7fe fa7a 	bl	8000ac8 <__aeabi_dcmpeq>
 80025d4:	2800      	cmp	r0, #0
 80025d6:	d09e      	beq.n	8002516 <_dtoa_r+0x65e>
 80025d8:	e7d0      	b.n	800257c <_dtoa_r+0x6c4>
 80025da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80025dc:	2a00      	cmp	r2, #0
 80025de:	f000 80ca 	beq.w	8002776 <_dtoa_r+0x8be>
 80025e2:	9a07      	ldr	r2, [sp, #28]
 80025e4:	2a01      	cmp	r2, #1
 80025e6:	f300 80ad 	bgt.w	8002744 <_dtoa_r+0x88c>
 80025ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80025ec:	2a00      	cmp	r2, #0
 80025ee:	f000 80a5 	beq.w	800273c <_dtoa_r+0x884>
 80025f2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80025f6:	9e08      	ldr	r6, [sp, #32]
 80025f8:	9d05      	ldr	r5, [sp, #20]
 80025fa:	9a05      	ldr	r2, [sp, #20]
 80025fc:	441a      	add	r2, r3
 80025fe:	9205      	str	r2, [sp, #20]
 8002600:	9a06      	ldr	r2, [sp, #24]
 8002602:	2101      	movs	r1, #1
 8002604:	441a      	add	r2, r3
 8002606:	4620      	mov	r0, r4
 8002608:	9206      	str	r2, [sp, #24]
 800260a:	f000 fde3 	bl	80031d4 <__i2b>
 800260e:	4607      	mov	r7, r0
 8002610:	b165      	cbz	r5, 800262c <_dtoa_r+0x774>
 8002612:	9b06      	ldr	r3, [sp, #24]
 8002614:	2b00      	cmp	r3, #0
 8002616:	dd09      	ble.n	800262c <_dtoa_r+0x774>
 8002618:	42ab      	cmp	r3, r5
 800261a:	9a05      	ldr	r2, [sp, #20]
 800261c:	bfa8      	it	ge
 800261e:	462b      	movge	r3, r5
 8002620:	1ad2      	subs	r2, r2, r3
 8002622:	9205      	str	r2, [sp, #20]
 8002624:	9a06      	ldr	r2, [sp, #24]
 8002626:	1aed      	subs	r5, r5, r3
 8002628:	1ad3      	subs	r3, r2, r3
 800262a:	9306      	str	r3, [sp, #24]
 800262c:	9b08      	ldr	r3, [sp, #32]
 800262e:	b1f3      	cbz	r3, 800266e <_dtoa_r+0x7b6>
 8002630:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002632:	2b00      	cmp	r3, #0
 8002634:	f000 80a3 	beq.w	800277e <_dtoa_r+0x8c6>
 8002638:	2e00      	cmp	r6, #0
 800263a:	dd10      	ble.n	800265e <_dtoa_r+0x7a6>
 800263c:	4639      	mov	r1, r7
 800263e:	4632      	mov	r2, r6
 8002640:	4620      	mov	r0, r4
 8002642:	f000 fe87 	bl	8003354 <__pow5mult>
 8002646:	4652      	mov	r2, sl
 8002648:	4601      	mov	r1, r0
 800264a:	4607      	mov	r7, r0
 800264c:	4620      	mov	r0, r4
 800264e:	f000 fdd7 	bl	8003200 <__multiply>
 8002652:	4651      	mov	r1, sl
 8002654:	4680      	mov	r8, r0
 8002656:	4620      	mov	r0, r4
 8002658:	f000 fd06 	bl	8003068 <_Bfree>
 800265c:	46c2      	mov	sl, r8
 800265e:	9b08      	ldr	r3, [sp, #32]
 8002660:	1b9a      	subs	r2, r3, r6
 8002662:	d004      	beq.n	800266e <_dtoa_r+0x7b6>
 8002664:	4651      	mov	r1, sl
 8002666:	4620      	mov	r0, r4
 8002668:	f000 fe74 	bl	8003354 <__pow5mult>
 800266c:	4682      	mov	sl, r0
 800266e:	2101      	movs	r1, #1
 8002670:	4620      	mov	r0, r4
 8002672:	f000 fdaf 	bl	80031d4 <__i2b>
 8002676:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002678:	2b00      	cmp	r3, #0
 800267a:	4606      	mov	r6, r0
 800267c:	f340 8081 	ble.w	8002782 <_dtoa_r+0x8ca>
 8002680:	461a      	mov	r2, r3
 8002682:	4601      	mov	r1, r0
 8002684:	4620      	mov	r0, r4
 8002686:	f000 fe65 	bl	8003354 <__pow5mult>
 800268a:	9b07      	ldr	r3, [sp, #28]
 800268c:	2b01      	cmp	r3, #1
 800268e:	4606      	mov	r6, r0
 8002690:	dd7a      	ble.n	8002788 <_dtoa_r+0x8d0>
 8002692:	f04f 0800 	mov.w	r8, #0
 8002696:	6933      	ldr	r3, [r6, #16]
 8002698:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800269c:	6918      	ldr	r0, [r3, #16]
 800269e:	f000 fd4b 	bl	8003138 <__hi0bits>
 80026a2:	f1c0 0020 	rsb	r0, r0, #32
 80026a6:	9b06      	ldr	r3, [sp, #24]
 80026a8:	4418      	add	r0, r3
 80026aa:	f010 001f 	ands.w	r0, r0, #31
 80026ae:	f000 8094 	beq.w	80027da <_dtoa_r+0x922>
 80026b2:	f1c0 0320 	rsb	r3, r0, #32
 80026b6:	2b04      	cmp	r3, #4
 80026b8:	f340 8085 	ble.w	80027c6 <_dtoa_r+0x90e>
 80026bc:	9b05      	ldr	r3, [sp, #20]
 80026be:	f1c0 001c 	rsb	r0, r0, #28
 80026c2:	4403      	add	r3, r0
 80026c4:	9305      	str	r3, [sp, #20]
 80026c6:	9b06      	ldr	r3, [sp, #24]
 80026c8:	4403      	add	r3, r0
 80026ca:	4405      	add	r5, r0
 80026cc:	9306      	str	r3, [sp, #24]
 80026ce:	9b05      	ldr	r3, [sp, #20]
 80026d0:	2b00      	cmp	r3, #0
 80026d2:	dd05      	ble.n	80026e0 <_dtoa_r+0x828>
 80026d4:	4651      	mov	r1, sl
 80026d6:	461a      	mov	r2, r3
 80026d8:	4620      	mov	r0, r4
 80026da:	f000 fe95 	bl	8003408 <__lshift>
 80026de:	4682      	mov	sl, r0
 80026e0:	9b06      	ldr	r3, [sp, #24]
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	dd05      	ble.n	80026f2 <_dtoa_r+0x83a>
 80026e6:	4631      	mov	r1, r6
 80026e8:	461a      	mov	r2, r3
 80026ea:	4620      	mov	r0, r4
 80026ec:	f000 fe8c 	bl	8003408 <__lshift>
 80026f0:	4606      	mov	r6, r0
 80026f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80026f4:	2b00      	cmp	r3, #0
 80026f6:	d072      	beq.n	80027de <_dtoa_r+0x926>
 80026f8:	4631      	mov	r1, r6
 80026fa:	4650      	mov	r0, sl
 80026fc:	f000 fef0 	bl	80034e0 <__mcmp>
 8002700:	2800      	cmp	r0, #0
 8002702:	da6c      	bge.n	80027de <_dtoa_r+0x926>
 8002704:	2300      	movs	r3, #0
 8002706:	4651      	mov	r1, sl
 8002708:	220a      	movs	r2, #10
 800270a:	4620      	mov	r0, r4
 800270c:	f000 fcce 	bl	80030ac <__multadd>
 8002710:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002712:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002716:	4682      	mov	sl, r0
 8002718:	2b00      	cmp	r3, #0
 800271a:	f000 81b0 	beq.w	8002a7e <_dtoa_r+0xbc6>
 800271e:	2300      	movs	r3, #0
 8002720:	4639      	mov	r1, r7
 8002722:	220a      	movs	r2, #10
 8002724:	4620      	mov	r0, r4
 8002726:	f000 fcc1 	bl	80030ac <__multadd>
 800272a:	9b01      	ldr	r3, [sp, #4]
 800272c:	2b00      	cmp	r3, #0
 800272e:	4607      	mov	r7, r0
 8002730:	f300 8096 	bgt.w	8002860 <_dtoa_r+0x9a8>
 8002734:	9b07      	ldr	r3, [sp, #28]
 8002736:	2b02      	cmp	r3, #2
 8002738:	dc59      	bgt.n	80027ee <_dtoa_r+0x936>
 800273a:	e091      	b.n	8002860 <_dtoa_r+0x9a8>
 800273c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800273e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002742:	e758      	b.n	80025f6 <_dtoa_r+0x73e>
 8002744:	9b04      	ldr	r3, [sp, #16]
 8002746:	1e5e      	subs	r6, r3, #1
 8002748:	9b08      	ldr	r3, [sp, #32]
 800274a:	42b3      	cmp	r3, r6
 800274c:	bfbf      	itttt	lt
 800274e:	9b08      	ldrlt	r3, [sp, #32]
 8002750:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002752:	9608      	strlt	r6, [sp, #32]
 8002754:	1af3      	sublt	r3, r6, r3
 8002756:	bfb4      	ite	lt
 8002758:	18d2      	addlt	r2, r2, r3
 800275a:	1b9e      	subge	r6, r3, r6
 800275c:	9b04      	ldr	r3, [sp, #16]
 800275e:	bfbc      	itt	lt
 8002760:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002762:	2600      	movlt	r6, #0
 8002764:	2b00      	cmp	r3, #0
 8002766:	bfb7      	itett	lt
 8002768:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 800276c:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8002770:	1a9d      	sublt	r5, r3, r2
 8002772:	2300      	movlt	r3, #0
 8002774:	e741      	b.n	80025fa <_dtoa_r+0x742>
 8002776:	9e08      	ldr	r6, [sp, #32]
 8002778:	9d05      	ldr	r5, [sp, #20]
 800277a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800277c:	e748      	b.n	8002610 <_dtoa_r+0x758>
 800277e:	9a08      	ldr	r2, [sp, #32]
 8002780:	e770      	b.n	8002664 <_dtoa_r+0x7ac>
 8002782:	9b07      	ldr	r3, [sp, #28]
 8002784:	2b01      	cmp	r3, #1
 8002786:	dc19      	bgt.n	80027bc <_dtoa_r+0x904>
 8002788:	9b02      	ldr	r3, [sp, #8]
 800278a:	b9bb      	cbnz	r3, 80027bc <_dtoa_r+0x904>
 800278c:	9b03      	ldr	r3, [sp, #12]
 800278e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002792:	b99b      	cbnz	r3, 80027bc <_dtoa_r+0x904>
 8002794:	9b03      	ldr	r3, [sp, #12]
 8002796:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800279a:	0d1b      	lsrs	r3, r3, #20
 800279c:	051b      	lsls	r3, r3, #20
 800279e:	b183      	cbz	r3, 80027c2 <_dtoa_r+0x90a>
 80027a0:	9b05      	ldr	r3, [sp, #20]
 80027a2:	3301      	adds	r3, #1
 80027a4:	9305      	str	r3, [sp, #20]
 80027a6:	9b06      	ldr	r3, [sp, #24]
 80027a8:	3301      	adds	r3, #1
 80027aa:	9306      	str	r3, [sp, #24]
 80027ac:	f04f 0801 	mov.w	r8, #1
 80027b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	f47f af6f 	bne.w	8002696 <_dtoa_r+0x7de>
 80027b8:	2001      	movs	r0, #1
 80027ba:	e774      	b.n	80026a6 <_dtoa_r+0x7ee>
 80027bc:	f04f 0800 	mov.w	r8, #0
 80027c0:	e7f6      	b.n	80027b0 <_dtoa_r+0x8f8>
 80027c2:	4698      	mov	r8, r3
 80027c4:	e7f4      	b.n	80027b0 <_dtoa_r+0x8f8>
 80027c6:	d082      	beq.n	80026ce <_dtoa_r+0x816>
 80027c8:	9a05      	ldr	r2, [sp, #20]
 80027ca:	331c      	adds	r3, #28
 80027cc:	441a      	add	r2, r3
 80027ce:	9205      	str	r2, [sp, #20]
 80027d0:	9a06      	ldr	r2, [sp, #24]
 80027d2:	441a      	add	r2, r3
 80027d4:	441d      	add	r5, r3
 80027d6:	9206      	str	r2, [sp, #24]
 80027d8:	e779      	b.n	80026ce <_dtoa_r+0x816>
 80027da:	4603      	mov	r3, r0
 80027dc:	e7f4      	b.n	80027c8 <_dtoa_r+0x910>
 80027de:	9b04      	ldr	r3, [sp, #16]
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	dc37      	bgt.n	8002854 <_dtoa_r+0x99c>
 80027e4:	9b07      	ldr	r3, [sp, #28]
 80027e6:	2b02      	cmp	r3, #2
 80027e8:	dd34      	ble.n	8002854 <_dtoa_r+0x99c>
 80027ea:	9b04      	ldr	r3, [sp, #16]
 80027ec:	9301      	str	r3, [sp, #4]
 80027ee:	9b01      	ldr	r3, [sp, #4]
 80027f0:	b963      	cbnz	r3, 800280c <_dtoa_r+0x954>
 80027f2:	4631      	mov	r1, r6
 80027f4:	2205      	movs	r2, #5
 80027f6:	4620      	mov	r0, r4
 80027f8:	f000 fc58 	bl	80030ac <__multadd>
 80027fc:	4601      	mov	r1, r0
 80027fe:	4606      	mov	r6, r0
 8002800:	4650      	mov	r0, sl
 8002802:	f000 fe6d 	bl	80034e0 <__mcmp>
 8002806:	2800      	cmp	r0, #0
 8002808:	f73f adbb 	bgt.w	8002382 <_dtoa_r+0x4ca>
 800280c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800280e:	9d00      	ldr	r5, [sp, #0]
 8002810:	ea6f 0b03 	mvn.w	fp, r3
 8002814:	f04f 0800 	mov.w	r8, #0
 8002818:	4631      	mov	r1, r6
 800281a:	4620      	mov	r0, r4
 800281c:	f000 fc24 	bl	8003068 <_Bfree>
 8002820:	2f00      	cmp	r7, #0
 8002822:	f43f aeab 	beq.w	800257c <_dtoa_r+0x6c4>
 8002826:	f1b8 0f00 	cmp.w	r8, #0
 800282a:	d005      	beq.n	8002838 <_dtoa_r+0x980>
 800282c:	45b8      	cmp	r8, r7
 800282e:	d003      	beq.n	8002838 <_dtoa_r+0x980>
 8002830:	4641      	mov	r1, r8
 8002832:	4620      	mov	r0, r4
 8002834:	f000 fc18 	bl	8003068 <_Bfree>
 8002838:	4639      	mov	r1, r7
 800283a:	4620      	mov	r0, r4
 800283c:	f000 fc14 	bl	8003068 <_Bfree>
 8002840:	e69c      	b.n	800257c <_dtoa_r+0x6c4>
 8002842:	2600      	movs	r6, #0
 8002844:	4637      	mov	r7, r6
 8002846:	e7e1      	b.n	800280c <_dtoa_r+0x954>
 8002848:	46bb      	mov	fp, r7
 800284a:	4637      	mov	r7, r6
 800284c:	e599      	b.n	8002382 <_dtoa_r+0x4ca>
 800284e:	bf00      	nop
 8002850:	40240000 	.word	0x40240000
 8002854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002856:	2b00      	cmp	r3, #0
 8002858:	f000 80c8 	beq.w	80029ec <_dtoa_r+0xb34>
 800285c:	9b04      	ldr	r3, [sp, #16]
 800285e:	9301      	str	r3, [sp, #4]
 8002860:	2d00      	cmp	r5, #0
 8002862:	dd05      	ble.n	8002870 <_dtoa_r+0x9b8>
 8002864:	4639      	mov	r1, r7
 8002866:	462a      	mov	r2, r5
 8002868:	4620      	mov	r0, r4
 800286a:	f000 fdcd 	bl	8003408 <__lshift>
 800286e:	4607      	mov	r7, r0
 8002870:	f1b8 0f00 	cmp.w	r8, #0
 8002874:	d05b      	beq.n	800292e <_dtoa_r+0xa76>
 8002876:	6879      	ldr	r1, [r7, #4]
 8002878:	4620      	mov	r0, r4
 800287a:	f000 fbb5 	bl	8002fe8 <_Balloc>
 800287e:	4605      	mov	r5, r0
 8002880:	b928      	cbnz	r0, 800288e <_dtoa_r+0x9d6>
 8002882:	4b83      	ldr	r3, [pc, #524]	; (8002a90 <_dtoa_r+0xbd8>)
 8002884:	4602      	mov	r2, r0
 8002886:	f240 21ef 	movw	r1, #751	; 0x2ef
 800288a:	f7ff bb2e 	b.w	8001eea <_dtoa_r+0x32>
 800288e:	693a      	ldr	r2, [r7, #16]
 8002890:	3202      	adds	r2, #2
 8002892:	0092      	lsls	r2, r2, #2
 8002894:	f107 010c 	add.w	r1, r7, #12
 8002898:	300c      	adds	r0, #12
 800289a:	f001 f8d3 	bl	8003a44 <memcpy>
 800289e:	2201      	movs	r2, #1
 80028a0:	4629      	mov	r1, r5
 80028a2:	4620      	mov	r0, r4
 80028a4:	f000 fdb0 	bl	8003408 <__lshift>
 80028a8:	9b00      	ldr	r3, [sp, #0]
 80028aa:	3301      	adds	r3, #1
 80028ac:	9304      	str	r3, [sp, #16]
 80028ae:	e9dd 2300 	ldrd	r2, r3, [sp]
 80028b2:	4413      	add	r3, r2
 80028b4:	9308      	str	r3, [sp, #32]
 80028b6:	9b02      	ldr	r3, [sp, #8]
 80028b8:	f003 0301 	and.w	r3, r3, #1
 80028bc:	46b8      	mov	r8, r7
 80028be:	9306      	str	r3, [sp, #24]
 80028c0:	4607      	mov	r7, r0
 80028c2:	9b04      	ldr	r3, [sp, #16]
 80028c4:	4631      	mov	r1, r6
 80028c6:	3b01      	subs	r3, #1
 80028c8:	4650      	mov	r0, sl
 80028ca:	9301      	str	r3, [sp, #4]
 80028cc:	f7ff fa6b 	bl	8001da6 <quorem>
 80028d0:	4641      	mov	r1, r8
 80028d2:	9002      	str	r0, [sp, #8]
 80028d4:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80028d8:	4650      	mov	r0, sl
 80028da:	f000 fe01 	bl	80034e0 <__mcmp>
 80028de:	463a      	mov	r2, r7
 80028e0:	9005      	str	r0, [sp, #20]
 80028e2:	4631      	mov	r1, r6
 80028e4:	4620      	mov	r0, r4
 80028e6:	f000 fe17 	bl	8003518 <__mdiff>
 80028ea:	68c2      	ldr	r2, [r0, #12]
 80028ec:	4605      	mov	r5, r0
 80028ee:	bb02      	cbnz	r2, 8002932 <_dtoa_r+0xa7a>
 80028f0:	4601      	mov	r1, r0
 80028f2:	4650      	mov	r0, sl
 80028f4:	f000 fdf4 	bl	80034e0 <__mcmp>
 80028f8:	4602      	mov	r2, r0
 80028fa:	4629      	mov	r1, r5
 80028fc:	4620      	mov	r0, r4
 80028fe:	9209      	str	r2, [sp, #36]	; 0x24
 8002900:	f000 fbb2 	bl	8003068 <_Bfree>
 8002904:	9b07      	ldr	r3, [sp, #28]
 8002906:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002908:	9d04      	ldr	r5, [sp, #16]
 800290a:	ea43 0102 	orr.w	r1, r3, r2
 800290e:	9b06      	ldr	r3, [sp, #24]
 8002910:	4319      	orrs	r1, r3
 8002912:	d110      	bne.n	8002936 <_dtoa_r+0xa7e>
 8002914:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002918:	d029      	beq.n	800296e <_dtoa_r+0xab6>
 800291a:	9b05      	ldr	r3, [sp, #20]
 800291c:	2b00      	cmp	r3, #0
 800291e:	dd02      	ble.n	8002926 <_dtoa_r+0xa6e>
 8002920:	9b02      	ldr	r3, [sp, #8]
 8002922:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002926:	9b01      	ldr	r3, [sp, #4]
 8002928:	f883 9000 	strb.w	r9, [r3]
 800292c:	e774      	b.n	8002818 <_dtoa_r+0x960>
 800292e:	4638      	mov	r0, r7
 8002930:	e7ba      	b.n	80028a8 <_dtoa_r+0x9f0>
 8002932:	2201      	movs	r2, #1
 8002934:	e7e1      	b.n	80028fa <_dtoa_r+0xa42>
 8002936:	9b05      	ldr	r3, [sp, #20]
 8002938:	2b00      	cmp	r3, #0
 800293a:	db04      	blt.n	8002946 <_dtoa_r+0xa8e>
 800293c:	9907      	ldr	r1, [sp, #28]
 800293e:	430b      	orrs	r3, r1
 8002940:	9906      	ldr	r1, [sp, #24]
 8002942:	430b      	orrs	r3, r1
 8002944:	d120      	bne.n	8002988 <_dtoa_r+0xad0>
 8002946:	2a00      	cmp	r2, #0
 8002948:	dded      	ble.n	8002926 <_dtoa_r+0xa6e>
 800294a:	4651      	mov	r1, sl
 800294c:	2201      	movs	r2, #1
 800294e:	4620      	mov	r0, r4
 8002950:	f000 fd5a 	bl	8003408 <__lshift>
 8002954:	4631      	mov	r1, r6
 8002956:	4682      	mov	sl, r0
 8002958:	f000 fdc2 	bl	80034e0 <__mcmp>
 800295c:	2800      	cmp	r0, #0
 800295e:	dc03      	bgt.n	8002968 <_dtoa_r+0xab0>
 8002960:	d1e1      	bne.n	8002926 <_dtoa_r+0xa6e>
 8002962:	f019 0f01 	tst.w	r9, #1
 8002966:	d0de      	beq.n	8002926 <_dtoa_r+0xa6e>
 8002968:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800296c:	d1d8      	bne.n	8002920 <_dtoa_r+0xa68>
 800296e:	9a01      	ldr	r2, [sp, #4]
 8002970:	2339      	movs	r3, #57	; 0x39
 8002972:	7013      	strb	r3, [r2, #0]
 8002974:	462b      	mov	r3, r5
 8002976:	461d      	mov	r5, r3
 8002978:	3b01      	subs	r3, #1
 800297a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800297e:	2a39      	cmp	r2, #57	; 0x39
 8002980:	d06c      	beq.n	8002a5c <_dtoa_r+0xba4>
 8002982:	3201      	adds	r2, #1
 8002984:	701a      	strb	r2, [r3, #0]
 8002986:	e747      	b.n	8002818 <_dtoa_r+0x960>
 8002988:	2a00      	cmp	r2, #0
 800298a:	dd07      	ble.n	800299c <_dtoa_r+0xae4>
 800298c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002990:	d0ed      	beq.n	800296e <_dtoa_r+0xab6>
 8002992:	9a01      	ldr	r2, [sp, #4]
 8002994:	f109 0301 	add.w	r3, r9, #1
 8002998:	7013      	strb	r3, [r2, #0]
 800299a:	e73d      	b.n	8002818 <_dtoa_r+0x960>
 800299c:	9b04      	ldr	r3, [sp, #16]
 800299e:	9a08      	ldr	r2, [sp, #32]
 80029a0:	f803 9c01 	strb.w	r9, [r3, #-1]
 80029a4:	4293      	cmp	r3, r2
 80029a6:	d043      	beq.n	8002a30 <_dtoa_r+0xb78>
 80029a8:	4651      	mov	r1, sl
 80029aa:	2300      	movs	r3, #0
 80029ac:	220a      	movs	r2, #10
 80029ae:	4620      	mov	r0, r4
 80029b0:	f000 fb7c 	bl	80030ac <__multadd>
 80029b4:	45b8      	cmp	r8, r7
 80029b6:	4682      	mov	sl, r0
 80029b8:	f04f 0300 	mov.w	r3, #0
 80029bc:	f04f 020a 	mov.w	r2, #10
 80029c0:	4641      	mov	r1, r8
 80029c2:	4620      	mov	r0, r4
 80029c4:	d107      	bne.n	80029d6 <_dtoa_r+0xb1e>
 80029c6:	f000 fb71 	bl	80030ac <__multadd>
 80029ca:	4680      	mov	r8, r0
 80029cc:	4607      	mov	r7, r0
 80029ce:	9b04      	ldr	r3, [sp, #16]
 80029d0:	3301      	adds	r3, #1
 80029d2:	9304      	str	r3, [sp, #16]
 80029d4:	e775      	b.n	80028c2 <_dtoa_r+0xa0a>
 80029d6:	f000 fb69 	bl	80030ac <__multadd>
 80029da:	4639      	mov	r1, r7
 80029dc:	4680      	mov	r8, r0
 80029de:	2300      	movs	r3, #0
 80029e0:	220a      	movs	r2, #10
 80029e2:	4620      	mov	r0, r4
 80029e4:	f000 fb62 	bl	80030ac <__multadd>
 80029e8:	4607      	mov	r7, r0
 80029ea:	e7f0      	b.n	80029ce <_dtoa_r+0xb16>
 80029ec:	9b04      	ldr	r3, [sp, #16]
 80029ee:	9301      	str	r3, [sp, #4]
 80029f0:	9d00      	ldr	r5, [sp, #0]
 80029f2:	4631      	mov	r1, r6
 80029f4:	4650      	mov	r0, sl
 80029f6:	f7ff f9d6 	bl	8001da6 <quorem>
 80029fa:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80029fe:	9b00      	ldr	r3, [sp, #0]
 8002a00:	f805 9b01 	strb.w	r9, [r5], #1
 8002a04:	1aea      	subs	r2, r5, r3
 8002a06:	9b01      	ldr	r3, [sp, #4]
 8002a08:	4293      	cmp	r3, r2
 8002a0a:	dd07      	ble.n	8002a1c <_dtoa_r+0xb64>
 8002a0c:	4651      	mov	r1, sl
 8002a0e:	2300      	movs	r3, #0
 8002a10:	220a      	movs	r2, #10
 8002a12:	4620      	mov	r0, r4
 8002a14:	f000 fb4a 	bl	80030ac <__multadd>
 8002a18:	4682      	mov	sl, r0
 8002a1a:	e7ea      	b.n	80029f2 <_dtoa_r+0xb3a>
 8002a1c:	9b01      	ldr	r3, [sp, #4]
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	bfc8      	it	gt
 8002a22:	461d      	movgt	r5, r3
 8002a24:	9b00      	ldr	r3, [sp, #0]
 8002a26:	bfd8      	it	le
 8002a28:	2501      	movle	r5, #1
 8002a2a:	441d      	add	r5, r3
 8002a2c:	f04f 0800 	mov.w	r8, #0
 8002a30:	4651      	mov	r1, sl
 8002a32:	2201      	movs	r2, #1
 8002a34:	4620      	mov	r0, r4
 8002a36:	f000 fce7 	bl	8003408 <__lshift>
 8002a3a:	4631      	mov	r1, r6
 8002a3c:	4682      	mov	sl, r0
 8002a3e:	f000 fd4f 	bl	80034e0 <__mcmp>
 8002a42:	2800      	cmp	r0, #0
 8002a44:	dc96      	bgt.n	8002974 <_dtoa_r+0xabc>
 8002a46:	d102      	bne.n	8002a4e <_dtoa_r+0xb96>
 8002a48:	f019 0f01 	tst.w	r9, #1
 8002a4c:	d192      	bne.n	8002974 <_dtoa_r+0xabc>
 8002a4e:	462b      	mov	r3, r5
 8002a50:	461d      	mov	r5, r3
 8002a52:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002a56:	2a30      	cmp	r2, #48	; 0x30
 8002a58:	d0fa      	beq.n	8002a50 <_dtoa_r+0xb98>
 8002a5a:	e6dd      	b.n	8002818 <_dtoa_r+0x960>
 8002a5c:	9a00      	ldr	r2, [sp, #0]
 8002a5e:	429a      	cmp	r2, r3
 8002a60:	d189      	bne.n	8002976 <_dtoa_r+0xabe>
 8002a62:	f10b 0b01 	add.w	fp, fp, #1
 8002a66:	2331      	movs	r3, #49	; 0x31
 8002a68:	e796      	b.n	8002998 <_dtoa_r+0xae0>
 8002a6a:	4b0a      	ldr	r3, [pc, #40]	; (8002a94 <_dtoa_r+0xbdc>)
 8002a6c:	f7ff ba99 	b.w	8001fa2 <_dtoa_r+0xea>
 8002a70:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002a72:	2b00      	cmp	r3, #0
 8002a74:	f47f aa6d 	bne.w	8001f52 <_dtoa_r+0x9a>
 8002a78:	4b07      	ldr	r3, [pc, #28]	; (8002a98 <_dtoa_r+0xbe0>)
 8002a7a:	f7ff ba92 	b.w	8001fa2 <_dtoa_r+0xea>
 8002a7e:	9b01      	ldr	r3, [sp, #4]
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	dcb5      	bgt.n	80029f0 <_dtoa_r+0xb38>
 8002a84:	9b07      	ldr	r3, [sp, #28]
 8002a86:	2b02      	cmp	r3, #2
 8002a88:	f73f aeb1 	bgt.w	80027ee <_dtoa_r+0x936>
 8002a8c:	e7b0      	b.n	80029f0 <_dtoa_r+0xb38>
 8002a8e:	bf00      	nop
 8002a90:	08003e83 	.word	0x08003e83
 8002a94:	08003de3 	.word	0x08003de3
 8002a98:	08003e07 	.word	0x08003e07

08002a9c <__sfputc_r>:
 8002a9c:	6893      	ldr	r3, [r2, #8]
 8002a9e:	3b01      	subs	r3, #1
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	b410      	push	{r4}
 8002aa4:	6093      	str	r3, [r2, #8]
 8002aa6:	da08      	bge.n	8002aba <__sfputc_r+0x1e>
 8002aa8:	6994      	ldr	r4, [r2, #24]
 8002aaa:	42a3      	cmp	r3, r4
 8002aac:	db01      	blt.n	8002ab2 <__sfputc_r+0x16>
 8002aae:	290a      	cmp	r1, #10
 8002ab0:	d103      	bne.n	8002aba <__sfputc_r+0x1e>
 8002ab2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002ab6:	f000 be56 	b.w	8003766 <__swbuf_r>
 8002aba:	6813      	ldr	r3, [r2, #0]
 8002abc:	1c58      	adds	r0, r3, #1
 8002abe:	6010      	str	r0, [r2, #0]
 8002ac0:	7019      	strb	r1, [r3, #0]
 8002ac2:	4608      	mov	r0, r1
 8002ac4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002ac8:	4770      	bx	lr

08002aca <__sfputs_r>:
 8002aca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002acc:	4606      	mov	r6, r0
 8002ace:	460f      	mov	r7, r1
 8002ad0:	4614      	mov	r4, r2
 8002ad2:	18d5      	adds	r5, r2, r3
 8002ad4:	42ac      	cmp	r4, r5
 8002ad6:	d101      	bne.n	8002adc <__sfputs_r+0x12>
 8002ad8:	2000      	movs	r0, #0
 8002ada:	e007      	b.n	8002aec <__sfputs_r+0x22>
 8002adc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002ae0:	463a      	mov	r2, r7
 8002ae2:	4630      	mov	r0, r6
 8002ae4:	f7ff ffda 	bl	8002a9c <__sfputc_r>
 8002ae8:	1c43      	adds	r3, r0, #1
 8002aea:	d1f3      	bne.n	8002ad4 <__sfputs_r+0xa>
 8002aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08002af0 <_vfiprintf_r>:
 8002af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002af4:	460d      	mov	r5, r1
 8002af6:	b09d      	sub	sp, #116	; 0x74
 8002af8:	4614      	mov	r4, r2
 8002afa:	4698      	mov	r8, r3
 8002afc:	4606      	mov	r6, r0
 8002afe:	b118      	cbz	r0, 8002b08 <_vfiprintf_r+0x18>
 8002b00:	6a03      	ldr	r3, [r0, #32]
 8002b02:	b90b      	cbnz	r3, 8002b08 <_vfiprintf_r+0x18>
 8002b04:	f7ff f872 	bl	8001bec <__sinit>
 8002b08:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002b0a:	07d9      	lsls	r1, r3, #31
 8002b0c:	d405      	bmi.n	8002b1a <_vfiprintf_r+0x2a>
 8002b0e:	89ab      	ldrh	r3, [r5, #12]
 8002b10:	059a      	lsls	r2, r3, #22
 8002b12:	d402      	bmi.n	8002b1a <_vfiprintf_r+0x2a>
 8002b14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002b16:	f7ff f944 	bl	8001da2 <__retarget_lock_acquire_recursive>
 8002b1a:	89ab      	ldrh	r3, [r5, #12]
 8002b1c:	071b      	lsls	r3, r3, #28
 8002b1e:	d501      	bpl.n	8002b24 <_vfiprintf_r+0x34>
 8002b20:	692b      	ldr	r3, [r5, #16]
 8002b22:	b99b      	cbnz	r3, 8002b4c <_vfiprintf_r+0x5c>
 8002b24:	4629      	mov	r1, r5
 8002b26:	4630      	mov	r0, r6
 8002b28:	f000 fe5a 	bl	80037e0 <__swsetup_r>
 8002b2c:	b170      	cbz	r0, 8002b4c <_vfiprintf_r+0x5c>
 8002b2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002b30:	07dc      	lsls	r4, r3, #31
 8002b32:	d504      	bpl.n	8002b3e <_vfiprintf_r+0x4e>
 8002b34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002b38:	b01d      	add	sp, #116	; 0x74
 8002b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b3e:	89ab      	ldrh	r3, [r5, #12]
 8002b40:	0598      	lsls	r0, r3, #22
 8002b42:	d4f7      	bmi.n	8002b34 <_vfiprintf_r+0x44>
 8002b44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002b46:	f7ff f92d 	bl	8001da4 <__retarget_lock_release_recursive>
 8002b4a:	e7f3      	b.n	8002b34 <_vfiprintf_r+0x44>
 8002b4c:	2300      	movs	r3, #0
 8002b4e:	9309      	str	r3, [sp, #36]	; 0x24
 8002b50:	2320      	movs	r3, #32
 8002b52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002b56:	f8cd 800c 	str.w	r8, [sp, #12]
 8002b5a:	2330      	movs	r3, #48	; 0x30
 8002b5c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8002d10 <_vfiprintf_r+0x220>
 8002b60:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002b64:	f04f 0901 	mov.w	r9, #1
 8002b68:	4623      	mov	r3, r4
 8002b6a:	469a      	mov	sl, r3
 8002b6c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002b70:	b10a      	cbz	r2, 8002b76 <_vfiprintf_r+0x86>
 8002b72:	2a25      	cmp	r2, #37	; 0x25
 8002b74:	d1f9      	bne.n	8002b6a <_vfiprintf_r+0x7a>
 8002b76:	ebba 0b04 	subs.w	fp, sl, r4
 8002b7a:	d00b      	beq.n	8002b94 <_vfiprintf_r+0xa4>
 8002b7c:	465b      	mov	r3, fp
 8002b7e:	4622      	mov	r2, r4
 8002b80:	4629      	mov	r1, r5
 8002b82:	4630      	mov	r0, r6
 8002b84:	f7ff ffa1 	bl	8002aca <__sfputs_r>
 8002b88:	3001      	adds	r0, #1
 8002b8a:	f000 80a9 	beq.w	8002ce0 <_vfiprintf_r+0x1f0>
 8002b8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002b90:	445a      	add	r2, fp
 8002b92:	9209      	str	r2, [sp, #36]	; 0x24
 8002b94:	f89a 3000 	ldrb.w	r3, [sl]
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	f000 80a1 	beq.w	8002ce0 <_vfiprintf_r+0x1f0>
 8002b9e:	2300      	movs	r3, #0
 8002ba0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002ba4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002ba8:	f10a 0a01 	add.w	sl, sl, #1
 8002bac:	9304      	str	r3, [sp, #16]
 8002bae:	9307      	str	r3, [sp, #28]
 8002bb0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002bb4:	931a      	str	r3, [sp, #104]	; 0x68
 8002bb6:	4654      	mov	r4, sl
 8002bb8:	2205      	movs	r2, #5
 8002bba:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002bbe:	4854      	ldr	r0, [pc, #336]	; (8002d10 <_vfiprintf_r+0x220>)
 8002bc0:	f7fd fb06 	bl	80001d0 <memchr>
 8002bc4:	9a04      	ldr	r2, [sp, #16]
 8002bc6:	b9d8      	cbnz	r0, 8002c00 <_vfiprintf_r+0x110>
 8002bc8:	06d1      	lsls	r1, r2, #27
 8002bca:	bf44      	itt	mi
 8002bcc:	2320      	movmi	r3, #32
 8002bce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002bd2:	0713      	lsls	r3, r2, #28
 8002bd4:	bf44      	itt	mi
 8002bd6:	232b      	movmi	r3, #43	; 0x2b
 8002bd8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002bdc:	f89a 3000 	ldrb.w	r3, [sl]
 8002be0:	2b2a      	cmp	r3, #42	; 0x2a
 8002be2:	d015      	beq.n	8002c10 <_vfiprintf_r+0x120>
 8002be4:	9a07      	ldr	r2, [sp, #28]
 8002be6:	4654      	mov	r4, sl
 8002be8:	2000      	movs	r0, #0
 8002bea:	f04f 0c0a 	mov.w	ip, #10
 8002bee:	4621      	mov	r1, r4
 8002bf0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002bf4:	3b30      	subs	r3, #48	; 0x30
 8002bf6:	2b09      	cmp	r3, #9
 8002bf8:	d94d      	bls.n	8002c96 <_vfiprintf_r+0x1a6>
 8002bfa:	b1b0      	cbz	r0, 8002c2a <_vfiprintf_r+0x13a>
 8002bfc:	9207      	str	r2, [sp, #28]
 8002bfe:	e014      	b.n	8002c2a <_vfiprintf_r+0x13a>
 8002c00:	eba0 0308 	sub.w	r3, r0, r8
 8002c04:	fa09 f303 	lsl.w	r3, r9, r3
 8002c08:	4313      	orrs	r3, r2
 8002c0a:	9304      	str	r3, [sp, #16]
 8002c0c:	46a2      	mov	sl, r4
 8002c0e:	e7d2      	b.n	8002bb6 <_vfiprintf_r+0xc6>
 8002c10:	9b03      	ldr	r3, [sp, #12]
 8002c12:	1d19      	adds	r1, r3, #4
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	9103      	str	r1, [sp, #12]
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	bfbb      	ittet	lt
 8002c1c:	425b      	neglt	r3, r3
 8002c1e:	f042 0202 	orrlt.w	r2, r2, #2
 8002c22:	9307      	strge	r3, [sp, #28]
 8002c24:	9307      	strlt	r3, [sp, #28]
 8002c26:	bfb8      	it	lt
 8002c28:	9204      	strlt	r2, [sp, #16]
 8002c2a:	7823      	ldrb	r3, [r4, #0]
 8002c2c:	2b2e      	cmp	r3, #46	; 0x2e
 8002c2e:	d10c      	bne.n	8002c4a <_vfiprintf_r+0x15a>
 8002c30:	7863      	ldrb	r3, [r4, #1]
 8002c32:	2b2a      	cmp	r3, #42	; 0x2a
 8002c34:	d134      	bne.n	8002ca0 <_vfiprintf_r+0x1b0>
 8002c36:	9b03      	ldr	r3, [sp, #12]
 8002c38:	1d1a      	adds	r2, r3, #4
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	9203      	str	r2, [sp, #12]
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	bfb8      	it	lt
 8002c42:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8002c46:	3402      	adds	r4, #2
 8002c48:	9305      	str	r3, [sp, #20]
 8002c4a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8002d20 <_vfiprintf_r+0x230>
 8002c4e:	7821      	ldrb	r1, [r4, #0]
 8002c50:	2203      	movs	r2, #3
 8002c52:	4650      	mov	r0, sl
 8002c54:	f7fd fabc 	bl	80001d0 <memchr>
 8002c58:	b138      	cbz	r0, 8002c6a <_vfiprintf_r+0x17a>
 8002c5a:	9b04      	ldr	r3, [sp, #16]
 8002c5c:	eba0 000a 	sub.w	r0, r0, sl
 8002c60:	2240      	movs	r2, #64	; 0x40
 8002c62:	4082      	lsls	r2, r0
 8002c64:	4313      	orrs	r3, r2
 8002c66:	3401      	adds	r4, #1
 8002c68:	9304      	str	r3, [sp, #16]
 8002c6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002c6e:	4829      	ldr	r0, [pc, #164]	; (8002d14 <_vfiprintf_r+0x224>)
 8002c70:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002c74:	2206      	movs	r2, #6
 8002c76:	f7fd faab 	bl	80001d0 <memchr>
 8002c7a:	2800      	cmp	r0, #0
 8002c7c:	d03f      	beq.n	8002cfe <_vfiprintf_r+0x20e>
 8002c7e:	4b26      	ldr	r3, [pc, #152]	; (8002d18 <_vfiprintf_r+0x228>)
 8002c80:	bb1b      	cbnz	r3, 8002cca <_vfiprintf_r+0x1da>
 8002c82:	9b03      	ldr	r3, [sp, #12]
 8002c84:	3307      	adds	r3, #7
 8002c86:	f023 0307 	bic.w	r3, r3, #7
 8002c8a:	3308      	adds	r3, #8
 8002c8c:	9303      	str	r3, [sp, #12]
 8002c8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c90:	443b      	add	r3, r7
 8002c92:	9309      	str	r3, [sp, #36]	; 0x24
 8002c94:	e768      	b.n	8002b68 <_vfiprintf_r+0x78>
 8002c96:	fb0c 3202 	mla	r2, ip, r2, r3
 8002c9a:	460c      	mov	r4, r1
 8002c9c:	2001      	movs	r0, #1
 8002c9e:	e7a6      	b.n	8002bee <_vfiprintf_r+0xfe>
 8002ca0:	2300      	movs	r3, #0
 8002ca2:	3401      	adds	r4, #1
 8002ca4:	9305      	str	r3, [sp, #20]
 8002ca6:	4619      	mov	r1, r3
 8002ca8:	f04f 0c0a 	mov.w	ip, #10
 8002cac:	4620      	mov	r0, r4
 8002cae:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002cb2:	3a30      	subs	r2, #48	; 0x30
 8002cb4:	2a09      	cmp	r2, #9
 8002cb6:	d903      	bls.n	8002cc0 <_vfiprintf_r+0x1d0>
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d0c6      	beq.n	8002c4a <_vfiprintf_r+0x15a>
 8002cbc:	9105      	str	r1, [sp, #20]
 8002cbe:	e7c4      	b.n	8002c4a <_vfiprintf_r+0x15a>
 8002cc0:	fb0c 2101 	mla	r1, ip, r1, r2
 8002cc4:	4604      	mov	r4, r0
 8002cc6:	2301      	movs	r3, #1
 8002cc8:	e7f0      	b.n	8002cac <_vfiprintf_r+0x1bc>
 8002cca:	ab03      	add	r3, sp, #12
 8002ccc:	9300      	str	r3, [sp, #0]
 8002cce:	462a      	mov	r2, r5
 8002cd0:	4b12      	ldr	r3, [pc, #72]	; (8002d1c <_vfiprintf_r+0x22c>)
 8002cd2:	a904      	add	r1, sp, #16
 8002cd4:	4630      	mov	r0, r6
 8002cd6:	f7fe fb37 	bl	8001348 <_printf_float>
 8002cda:	4607      	mov	r7, r0
 8002cdc:	1c78      	adds	r0, r7, #1
 8002cde:	d1d6      	bne.n	8002c8e <_vfiprintf_r+0x19e>
 8002ce0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002ce2:	07d9      	lsls	r1, r3, #31
 8002ce4:	d405      	bmi.n	8002cf2 <_vfiprintf_r+0x202>
 8002ce6:	89ab      	ldrh	r3, [r5, #12]
 8002ce8:	059a      	lsls	r2, r3, #22
 8002cea:	d402      	bmi.n	8002cf2 <_vfiprintf_r+0x202>
 8002cec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002cee:	f7ff f859 	bl	8001da4 <__retarget_lock_release_recursive>
 8002cf2:	89ab      	ldrh	r3, [r5, #12]
 8002cf4:	065b      	lsls	r3, r3, #25
 8002cf6:	f53f af1d 	bmi.w	8002b34 <_vfiprintf_r+0x44>
 8002cfa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002cfc:	e71c      	b.n	8002b38 <_vfiprintf_r+0x48>
 8002cfe:	ab03      	add	r3, sp, #12
 8002d00:	9300      	str	r3, [sp, #0]
 8002d02:	462a      	mov	r2, r5
 8002d04:	4b05      	ldr	r3, [pc, #20]	; (8002d1c <_vfiprintf_r+0x22c>)
 8002d06:	a904      	add	r1, sp, #16
 8002d08:	4630      	mov	r0, r6
 8002d0a:	f7fe fdc1 	bl	8001890 <_printf_i>
 8002d0e:	e7e4      	b.n	8002cda <_vfiprintf_r+0x1ea>
 8002d10:	08003e94 	.word	0x08003e94
 8002d14:	08003e9e 	.word	0x08003e9e
 8002d18:	08001349 	.word	0x08001349
 8002d1c:	08002acb 	.word	0x08002acb
 8002d20:	08003e9a 	.word	0x08003e9a

08002d24 <malloc>:
 8002d24:	4b02      	ldr	r3, [pc, #8]	; (8002d30 <malloc+0xc>)
 8002d26:	4601      	mov	r1, r0
 8002d28:	6818      	ldr	r0, [r3, #0]
 8002d2a:	f000 b823 	b.w	8002d74 <_malloc_r>
 8002d2e:	bf00      	nop
 8002d30:	20000058 	.word	0x20000058

08002d34 <sbrk_aligned>:
 8002d34:	b570      	push	{r4, r5, r6, lr}
 8002d36:	4e0e      	ldr	r6, [pc, #56]	; (8002d70 <sbrk_aligned+0x3c>)
 8002d38:	460c      	mov	r4, r1
 8002d3a:	6831      	ldr	r1, [r6, #0]
 8002d3c:	4605      	mov	r5, r0
 8002d3e:	b911      	cbnz	r1, 8002d46 <sbrk_aligned+0x12>
 8002d40:	f000 fe5e 	bl	8003a00 <_sbrk_r>
 8002d44:	6030      	str	r0, [r6, #0]
 8002d46:	4621      	mov	r1, r4
 8002d48:	4628      	mov	r0, r5
 8002d4a:	f000 fe59 	bl	8003a00 <_sbrk_r>
 8002d4e:	1c43      	adds	r3, r0, #1
 8002d50:	d00a      	beq.n	8002d68 <sbrk_aligned+0x34>
 8002d52:	1cc4      	adds	r4, r0, #3
 8002d54:	f024 0403 	bic.w	r4, r4, #3
 8002d58:	42a0      	cmp	r0, r4
 8002d5a:	d007      	beq.n	8002d6c <sbrk_aligned+0x38>
 8002d5c:	1a21      	subs	r1, r4, r0
 8002d5e:	4628      	mov	r0, r5
 8002d60:	f000 fe4e 	bl	8003a00 <_sbrk_r>
 8002d64:	3001      	adds	r0, #1
 8002d66:	d101      	bne.n	8002d6c <sbrk_aligned+0x38>
 8002d68:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8002d6c:	4620      	mov	r0, r4
 8002d6e:	bd70      	pop	{r4, r5, r6, pc}
 8002d70:	2000032c 	.word	0x2000032c

08002d74 <_malloc_r>:
 8002d74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002d78:	1ccd      	adds	r5, r1, #3
 8002d7a:	f025 0503 	bic.w	r5, r5, #3
 8002d7e:	3508      	adds	r5, #8
 8002d80:	2d0c      	cmp	r5, #12
 8002d82:	bf38      	it	cc
 8002d84:	250c      	movcc	r5, #12
 8002d86:	2d00      	cmp	r5, #0
 8002d88:	4607      	mov	r7, r0
 8002d8a:	db01      	blt.n	8002d90 <_malloc_r+0x1c>
 8002d8c:	42a9      	cmp	r1, r5
 8002d8e:	d905      	bls.n	8002d9c <_malloc_r+0x28>
 8002d90:	230c      	movs	r3, #12
 8002d92:	603b      	str	r3, [r7, #0]
 8002d94:	2600      	movs	r6, #0
 8002d96:	4630      	mov	r0, r6
 8002d98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002d9c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8002e70 <_malloc_r+0xfc>
 8002da0:	f000 f916 	bl	8002fd0 <__malloc_lock>
 8002da4:	f8d8 3000 	ldr.w	r3, [r8]
 8002da8:	461c      	mov	r4, r3
 8002daa:	bb5c      	cbnz	r4, 8002e04 <_malloc_r+0x90>
 8002dac:	4629      	mov	r1, r5
 8002dae:	4638      	mov	r0, r7
 8002db0:	f7ff ffc0 	bl	8002d34 <sbrk_aligned>
 8002db4:	1c43      	adds	r3, r0, #1
 8002db6:	4604      	mov	r4, r0
 8002db8:	d155      	bne.n	8002e66 <_malloc_r+0xf2>
 8002dba:	f8d8 4000 	ldr.w	r4, [r8]
 8002dbe:	4626      	mov	r6, r4
 8002dc0:	2e00      	cmp	r6, #0
 8002dc2:	d145      	bne.n	8002e50 <_malloc_r+0xdc>
 8002dc4:	2c00      	cmp	r4, #0
 8002dc6:	d048      	beq.n	8002e5a <_malloc_r+0xe6>
 8002dc8:	6823      	ldr	r3, [r4, #0]
 8002dca:	4631      	mov	r1, r6
 8002dcc:	4638      	mov	r0, r7
 8002dce:	eb04 0903 	add.w	r9, r4, r3
 8002dd2:	f000 fe15 	bl	8003a00 <_sbrk_r>
 8002dd6:	4581      	cmp	r9, r0
 8002dd8:	d13f      	bne.n	8002e5a <_malloc_r+0xe6>
 8002dda:	6821      	ldr	r1, [r4, #0]
 8002ddc:	1a6d      	subs	r5, r5, r1
 8002dde:	4629      	mov	r1, r5
 8002de0:	4638      	mov	r0, r7
 8002de2:	f7ff ffa7 	bl	8002d34 <sbrk_aligned>
 8002de6:	3001      	adds	r0, #1
 8002de8:	d037      	beq.n	8002e5a <_malloc_r+0xe6>
 8002dea:	6823      	ldr	r3, [r4, #0]
 8002dec:	442b      	add	r3, r5
 8002dee:	6023      	str	r3, [r4, #0]
 8002df0:	f8d8 3000 	ldr.w	r3, [r8]
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d038      	beq.n	8002e6a <_malloc_r+0xf6>
 8002df8:	685a      	ldr	r2, [r3, #4]
 8002dfa:	42a2      	cmp	r2, r4
 8002dfc:	d12b      	bne.n	8002e56 <_malloc_r+0xe2>
 8002dfe:	2200      	movs	r2, #0
 8002e00:	605a      	str	r2, [r3, #4]
 8002e02:	e00f      	b.n	8002e24 <_malloc_r+0xb0>
 8002e04:	6822      	ldr	r2, [r4, #0]
 8002e06:	1b52      	subs	r2, r2, r5
 8002e08:	d41f      	bmi.n	8002e4a <_malloc_r+0xd6>
 8002e0a:	2a0b      	cmp	r2, #11
 8002e0c:	d917      	bls.n	8002e3e <_malloc_r+0xca>
 8002e0e:	1961      	adds	r1, r4, r5
 8002e10:	42a3      	cmp	r3, r4
 8002e12:	6025      	str	r5, [r4, #0]
 8002e14:	bf18      	it	ne
 8002e16:	6059      	strne	r1, [r3, #4]
 8002e18:	6863      	ldr	r3, [r4, #4]
 8002e1a:	bf08      	it	eq
 8002e1c:	f8c8 1000 	streq.w	r1, [r8]
 8002e20:	5162      	str	r2, [r4, r5]
 8002e22:	604b      	str	r3, [r1, #4]
 8002e24:	4638      	mov	r0, r7
 8002e26:	f104 060b 	add.w	r6, r4, #11
 8002e2a:	f000 f8d7 	bl	8002fdc <__malloc_unlock>
 8002e2e:	f026 0607 	bic.w	r6, r6, #7
 8002e32:	1d23      	adds	r3, r4, #4
 8002e34:	1af2      	subs	r2, r6, r3
 8002e36:	d0ae      	beq.n	8002d96 <_malloc_r+0x22>
 8002e38:	1b9b      	subs	r3, r3, r6
 8002e3a:	50a3      	str	r3, [r4, r2]
 8002e3c:	e7ab      	b.n	8002d96 <_malloc_r+0x22>
 8002e3e:	42a3      	cmp	r3, r4
 8002e40:	6862      	ldr	r2, [r4, #4]
 8002e42:	d1dd      	bne.n	8002e00 <_malloc_r+0x8c>
 8002e44:	f8c8 2000 	str.w	r2, [r8]
 8002e48:	e7ec      	b.n	8002e24 <_malloc_r+0xb0>
 8002e4a:	4623      	mov	r3, r4
 8002e4c:	6864      	ldr	r4, [r4, #4]
 8002e4e:	e7ac      	b.n	8002daa <_malloc_r+0x36>
 8002e50:	4634      	mov	r4, r6
 8002e52:	6876      	ldr	r6, [r6, #4]
 8002e54:	e7b4      	b.n	8002dc0 <_malloc_r+0x4c>
 8002e56:	4613      	mov	r3, r2
 8002e58:	e7cc      	b.n	8002df4 <_malloc_r+0x80>
 8002e5a:	230c      	movs	r3, #12
 8002e5c:	603b      	str	r3, [r7, #0]
 8002e5e:	4638      	mov	r0, r7
 8002e60:	f000 f8bc 	bl	8002fdc <__malloc_unlock>
 8002e64:	e797      	b.n	8002d96 <_malloc_r+0x22>
 8002e66:	6025      	str	r5, [r4, #0]
 8002e68:	e7dc      	b.n	8002e24 <_malloc_r+0xb0>
 8002e6a:	605b      	str	r3, [r3, #4]
 8002e6c:	deff      	udf	#255	; 0xff
 8002e6e:	bf00      	nop
 8002e70:	20000328 	.word	0x20000328

08002e74 <__sflush_r>:
 8002e74:	898a      	ldrh	r2, [r1, #12]
 8002e76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e7a:	4605      	mov	r5, r0
 8002e7c:	0710      	lsls	r0, r2, #28
 8002e7e:	460c      	mov	r4, r1
 8002e80:	d458      	bmi.n	8002f34 <__sflush_r+0xc0>
 8002e82:	684b      	ldr	r3, [r1, #4]
 8002e84:	2b00      	cmp	r3, #0
 8002e86:	dc05      	bgt.n	8002e94 <__sflush_r+0x20>
 8002e88:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	dc02      	bgt.n	8002e94 <__sflush_r+0x20>
 8002e8e:	2000      	movs	r0, #0
 8002e90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002e94:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8002e96:	2e00      	cmp	r6, #0
 8002e98:	d0f9      	beq.n	8002e8e <__sflush_r+0x1a>
 8002e9a:	2300      	movs	r3, #0
 8002e9c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8002ea0:	682f      	ldr	r7, [r5, #0]
 8002ea2:	6a21      	ldr	r1, [r4, #32]
 8002ea4:	602b      	str	r3, [r5, #0]
 8002ea6:	d032      	beq.n	8002f0e <__sflush_r+0x9a>
 8002ea8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8002eaa:	89a3      	ldrh	r3, [r4, #12]
 8002eac:	075a      	lsls	r2, r3, #29
 8002eae:	d505      	bpl.n	8002ebc <__sflush_r+0x48>
 8002eb0:	6863      	ldr	r3, [r4, #4]
 8002eb2:	1ac0      	subs	r0, r0, r3
 8002eb4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8002eb6:	b10b      	cbz	r3, 8002ebc <__sflush_r+0x48>
 8002eb8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002eba:	1ac0      	subs	r0, r0, r3
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	4602      	mov	r2, r0
 8002ec0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8002ec2:	6a21      	ldr	r1, [r4, #32]
 8002ec4:	4628      	mov	r0, r5
 8002ec6:	47b0      	blx	r6
 8002ec8:	1c43      	adds	r3, r0, #1
 8002eca:	89a3      	ldrh	r3, [r4, #12]
 8002ecc:	d106      	bne.n	8002edc <__sflush_r+0x68>
 8002ece:	6829      	ldr	r1, [r5, #0]
 8002ed0:	291d      	cmp	r1, #29
 8002ed2:	d82b      	bhi.n	8002f2c <__sflush_r+0xb8>
 8002ed4:	4a29      	ldr	r2, [pc, #164]	; (8002f7c <__sflush_r+0x108>)
 8002ed6:	410a      	asrs	r2, r1
 8002ed8:	07d6      	lsls	r6, r2, #31
 8002eda:	d427      	bmi.n	8002f2c <__sflush_r+0xb8>
 8002edc:	2200      	movs	r2, #0
 8002ede:	6062      	str	r2, [r4, #4]
 8002ee0:	04d9      	lsls	r1, r3, #19
 8002ee2:	6922      	ldr	r2, [r4, #16]
 8002ee4:	6022      	str	r2, [r4, #0]
 8002ee6:	d504      	bpl.n	8002ef2 <__sflush_r+0x7e>
 8002ee8:	1c42      	adds	r2, r0, #1
 8002eea:	d101      	bne.n	8002ef0 <__sflush_r+0x7c>
 8002eec:	682b      	ldr	r3, [r5, #0]
 8002eee:	b903      	cbnz	r3, 8002ef2 <__sflush_r+0x7e>
 8002ef0:	6560      	str	r0, [r4, #84]	; 0x54
 8002ef2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002ef4:	602f      	str	r7, [r5, #0]
 8002ef6:	2900      	cmp	r1, #0
 8002ef8:	d0c9      	beq.n	8002e8e <__sflush_r+0x1a>
 8002efa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002efe:	4299      	cmp	r1, r3
 8002f00:	d002      	beq.n	8002f08 <__sflush_r+0x94>
 8002f02:	4628      	mov	r0, r5
 8002f04:	f000 fde0 	bl	8003ac8 <_free_r>
 8002f08:	2000      	movs	r0, #0
 8002f0a:	6360      	str	r0, [r4, #52]	; 0x34
 8002f0c:	e7c0      	b.n	8002e90 <__sflush_r+0x1c>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	4628      	mov	r0, r5
 8002f12:	47b0      	blx	r6
 8002f14:	1c41      	adds	r1, r0, #1
 8002f16:	d1c8      	bne.n	8002eaa <__sflush_r+0x36>
 8002f18:	682b      	ldr	r3, [r5, #0]
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d0c5      	beq.n	8002eaa <__sflush_r+0x36>
 8002f1e:	2b1d      	cmp	r3, #29
 8002f20:	d001      	beq.n	8002f26 <__sflush_r+0xb2>
 8002f22:	2b16      	cmp	r3, #22
 8002f24:	d101      	bne.n	8002f2a <__sflush_r+0xb6>
 8002f26:	602f      	str	r7, [r5, #0]
 8002f28:	e7b1      	b.n	8002e8e <__sflush_r+0x1a>
 8002f2a:	89a3      	ldrh	r3, [r4, #12]
 8002f2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002f30:	81a3      	strh	r3, [r4, #12]
 8002f32:	e7ad      	b.n	8002e90 <__sflush_r+0x1c>
 8002f34:	690f      	ldr	r7, [r1, #16]
 8002f36:	2f00      	cmp	r7, #0
 8002f38:	d0a9      	beq.n	8002e8e <__sflush_r+0x1a>
 8002f3a:	0793      	lsls	r3, r2, #30
 8002f3c:	680e      	ldr	r6, [r1, #0]
 8002f3e:	bf08      	it	eq
 8002f40:	694b      	ldreq	r3, [r1, #20]
 8002f42:	600f      	str	r7, [r1, #0]
 8002f44:	bf18      	it	ne
 8002f46:	2300      	movne	r3, #0
 8002f48:	eba6 0807 	sub.w	r8, r6, r7
 8002f4c:	608b      	str	r3, [r1, #8]
 8002f4e:	f1b8 0f00 	cmp.w	r8, #0
 8002f52:	dd9c      	ble.n	8002e8e <__sflush_r+0x1a>
 8002f54:	6a21      	ldr	r1, [r4, #32]
 8002f56:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8002f58:	4643      	mov	r3, r8
 8002f5a:	463a      	mov	r2, r7
 8002f5c:	4628      	mov	r0, r5
 8002f5e:	47b0      	blx	r6
 8002f60:	2800      	cmp	r0, #0
 8002f62:	dc06      	bgt.n	8002f72 <__sflush_r+0xfe>
 8002f64:	89a3      	ldrh	r3, [r4, #12]
 8002f66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002f6a:	81a3      	strh	r3, [r4, #12]
 8002f6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002f70:	e78e      	b.n	8002e90 <__sflush_r+0x1c>
 8002f72:	4407      	add	r7, r0
 8002f74:	eba8 0800 	sub.w	r8, r8, r0
 8002f78:	e7e9      	b.n	8002f4e <__sflush_r+0xda>
 8002f7a:	bf00      	nop
 8002f7c:	dfbffffe 	.word	0xdfbffffe

08002f80 <_fflush_r>:
 8002f80:	b538      	push	{r3, r4, r5, lr}
 8002f82:	690b      	ldr	r3, [r1, #16]
 8002f84:	4605      	mov	r5, r0
 8002f86:	460c      	mov	r4, r1
 8002f88:	b913      	cbnz	r3, 8002f90 <_fflush_r+0x10>
 8002f8a:	2500      	movs	r5, #0
 8002f8c:	4628      	mov	r0, r5
 8002f8e:	bd38      	pop	{r3, r4, r5, pc}
 8002f90:	b118      	cbz	r0, 8002f9a <_fflush_r+0x1a>
 8002f92:	6a03      	ldr	r3, [r0, #32]
 8002f94:	b90b      	cbnz	r3, 8002f9a <_fflush_r+0x1a>
 8002f96:	f7fe fe29 	bl	8001bec <__sinit>
 8002f9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002f9e:	2b00      	cmp	r3, #0
 8002fa0:	d0f3      	beq.n	8002f8a <_fflush_r+0xa>
 8002fa2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8002fa4:	07d0      	lsls	r0, r2, #31
 8002fa6:	d404      	bmi.n	8002fb2 <_fflush_r+0x32>
 8002fa8:	0599      	lsls	r1, r3, #22
 8002faa:	d402      	bmi.n	8002fb2 <_fflush_r+0x32>
 8002fac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002fae:	f7fe fef8 	bl	8001da2 <__retarget_lock_acquire_recursive>
 8002fb2:	4628      	mov	r0, r5
 8002fb4:	4621      	mov	r1, r4
 8002fb6:	f7ff ff5d 	bl	8002e74 <__sflush_r>
 8002fba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002fbc:	07da      	lsls	r2, r3, #31
 8002fbe:	4605      	mov	r5, r0
 8002fc0:	d4e4      	bmi.n	8002f8c <_fflush_r+0xc>
 8002fc2:	89a3      	ldrh	r3, [r4, #12]
 8002fc4:	059b      	lsls	r3, r3, #22
 8002fc6:	d4e1      	bmi.n	8002f8c <_fflush_r+0xc>
 8002fc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002fca:	f7fe feeb 	bl	8001da4 <__retarget_lock_release_recursive>
 8002fce:	e7dd      	b.n	8002f8c <_fflush_r+0xc>

08002fd0 <__malloc_lock>:
 8002fd0:	4801      	ldr	r0, [pc, #4]	; (8002fd8 <__malloc_lock+0x8>)
 8002fd2:	f7fe bee6 	b.w	8001da2 <__retarget_lock_acquire_recursive>
 8002fd6:	bf00      	nop
 8002fd8:	20000324 	.word	0x20000324

08002fdc <__malloc_unlock>:
 8002fdc:	4801      	ldr	r0, [pc, #4]	; (8002fe4 <__malloc_unlock+0x8>)
 8002fde:	f7fe bee1 	b.w	8001da4 <__retarget_lock_release_recursive>
 8002fe2:	bf00      	nop
 8002fe4:	20000324 	.word	0x20000324

08002fe8 <_Balloc>:
 8002fe8:	b570      	push	{r4, r5, r6, lr}
 8002fea:	69c6      	ldr	r6, [r0, #28]
 8002fec:	4604      	mov	r4, r0
 8002fee:	460d      	mov	r5, r1
 8002ff0:	b976      	cbnz	r6, 8003010 <_Balloc+0x28>
 8002ff2:	2010      	movs	r0, #16
 8002ff4:	f7ff fe96 	bl	8002d24 <malloc>
 8002ff8:	4602      	mov	r2, r0
 8002ffa:	61e0      	str	r0, [r4, #28]
 8002ffc:	b920      	cbnz	r0, 8003008 <_Balloc+0x20>
 8002ffe:	4b18      	ldr	r3, [pc, #96]	; (8003060 <_Balloc+0x78>)
 8003000:	4818      	ldr	r0, [pc, #96]	; (8003064 <_Balloc+0x7c>)
 8003002:	216b      	movs	r1, #107	; 0x6b
 8003004:	f000 fd2c 	bl	8003a60 <__assert_func>
 8003008:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800300c:	6006      	str	r6, [r0, #0]
 800300e:	60c6      	str	r6, [r0, #12]
 8003010:	69e6      	ldr	r6, [r4, #28]
 8003012:	68f3      	ldr	r3, [r6, #12]
 8003014:	b183      	cbz	r3, 8003038 <_Balloc+0x50>
 8003016:	69e3      	ldr	r3, [r4, #28]
 8003018:	68db      	ldr	r3, [r3, #12]
 800301a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800301e:	b9b8      	cbnz	r0, 8003050 <_Balloc+0x68>
 8003020:	2101      	movs	r1, #1
 8003022:	fa01 f605 	lsl.w	r6, r1, r5
 8003026:	1d72      	adds	r2, r6, #5
 8003028:	0092      	lsls	r2, r2, #2
 800302a:	4620      	mov	r0, r4
 800302c:	f000 fd36 	bl	8003a9c <_calloc_r>
 8003030:	b160      	cbz	r0, 800304c <_Balloc+0x64>
 8003032:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003036:	e00e      	b.n	8003056 <_Balloc+0x6e>
 8003038:	2221      	movs	r2, #33	; 0x21
 800303a:	2104      	movs	r1, #4
 800303c:	4620      	mov	r0, r4
 800303e:	f000 fd2d 	bl	8003a9c <_calloc_r>
 8003042:	69e3      	ldr	r3, [r4, #28]
 8003044:	60f0      	str	r0, [r6, #12]
 8003046:	68db      	ldr	r3, [r3, #12]
 8003048:	2b00      	cmp	r3, #0
 800304a:	d1e4      	bne.n	8003016 <_Balloc+0x2e>
 800304c:	2000      	movs	r0, #0
 800304e:	bd70      	pop	{r4, r5, r6, pc}
 8003050:	6802      	ldr	r2, [r0, #0]
 8003052:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003056:	2300      	movs	r3, #0
 8003058:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800305c:	e7f7      	b.n	800304e <_Balloc+0x66>
 800305e:	bf00      	nop
 8003060:	08003e14 	.word	0x08003e14
 8003064:	08003ea5 	.word	0x08003ea5

08003068 <_Bfree>:
 8003068:	b570      	push	{r4, r5, r6, lr}
 800306a:	69c6      	ldr	r6, [r0, #28]
 800306c:	4605      	mov	r5, r0
 800306e:	460c      	mov	r4, r1
 8003070:	b976      	cbnz	r6, 8003090 <_Bfree+0x28>
 8003072:	2010      	movs	r0, #16
 8003074:	f7ff fe56 	bl	8002d24 <malloc>
 8003078:	4602      	mov	r2, r0
 800307a:	61e8      	str	r0, [r5, #28]
 800307c:	b920      	cbnz	r0, 8003088 <_Bfree+0x20>
 800307e:	4b09      	ldr	r3, [pc, #36]	; (80030a4 <_Bfree+0x3c>)
 8003080:	4809      	ldr	r0, [pc, #36]	; (80030a8 <_Bfree+0x40>)
 8003082:	218f      	movs	r1, #143	; 0x8f
 8003084:	f000 fcec 	bl	8003a60 <__assert_func>
 8003088:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800308c:	6006      	str	r6, [r0, #0]
 800308e:	60c6      	str	r6, [r0, #12]
 8003090:	b13c      	cbz	r4, 80030a2 <_Bfree+0x3a>
 8003092:	69eb      	ldr	r3, [r5, #28]
 8003094:	6862      	ldr	r2, [r4, #4]
 8003096:	68db      	ldr	r3, [r3, #12]
 8003098:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800309c:	6021      	str	r1, [r4, #0]
 800309e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80030a2:	bd70      	pop	{r4, r5, r6, pc}
 80030a4:	08003e14 	.word	0x08003e14
 80030a8:	08003ea5 	.word	0x08003ea5

080030ac <__multadd>:
 80030ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030b0:	690d      	ldr	r5, [r1, #16]
 80030b2:	4607      	mov	r7, r0
 80030b4:	460c      	mov	r4, r1
 80030b6:	461e      	mov	r6, r3
 80030b8:	f101 0c14 	add.w	ip, r1, #20
 80030bc:	2000      	movs	r0, #0
 80030be:	f8dc 3000 	ldr.w	r3, [ip]
 80030c2:	b299      	uxth	r1, r3
 80030c4:	fb02 6101 	mla	r1, r2, r1, r6
 80030c8:	0c1e      	lsrs	r6, r3, #16
 80030ca:	0c0b      	lsrs	r3, r1, #16
 80030cc:	fb02 3306 	mla	r3, r2, r6, r3
 80030d0:	b289      	uxth	r1, r1
 80030d2:	3001      	adds	r0, #1
 80030d4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80030d8:	4285      	cmp	r5, r0
 80030da:	f84c 1b04 	str.w	r1, [ip], #4
 80030de:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80030e2:	dcec      	bgt.n	80030be <__multadd+0x12>
 80030e4:	b30e      	cbz	r6, 800312a <__multadd+0x7e>
 80030e6:	68a3      	ldr	r3, [r4, #8]
 80030e8:	42ab      	cmp	r3, r5
 80030ea:	dc19      	bgt.n	8003120 <__multadd+0x74>
 80030ec:	6861      	ldr	r1, [r4, #4]
 80030ee:	4638      	mov	r0, r7
 80030f0:	3101      	adds	r1, #1
 80030f2:	f7ff ff79 	bl	8002fe8 <_Balloc>
 80030f6:	4680      	mov	r8, r0
 80030f8:	b928      	cbnz	r0, 8003106 <__multadd+0x5a>
 80030fa:	4602      	mov	r2, r0
 80030fc:	4b0c      	ldr	r3, [pc, #48]	; (8003130 <__multadd+0x84>)
 80030fe:	480d      	ldr	r0, [pc, #52]	; (8003134 <__multadd+0x88>)
 8003100:	21ba      	movs	r1, #186	; 0xba
 8003102:	f000 fcad 	bl	8003a60 <__assert_func>
 8003106:	6922      	ldr	r2, [r4, #16]
 8003108:	3202      	adds	r2, #2
 800310a:	f104 010c 	add.w	r1, r4, #12
 800310e:	0092      	lsls	r2, r2, #2
 8003110:	300c      	adds	r0, #12
 8003112:	f000 fc97 	bl	8003a44 <memcpy>
 8003116:	4621      	mov	r1, r4
 8003118:	4638      	mov	r0, r7
 800311a:	f7ff ffa5 	bl	8003068 <_Bfree>
 800311e:	4644      	mov	r4, r8
 8003120:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003124:	3501      	adds	r5, #1
 8003126:	615e      	str	r6, [r3, #20]
 8003128:	6125      	str	r5, [r4, #16]
 800312a:	4620      	mov	r0, r4
 800312c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003130:	08003e83 	.word	0x08003e83
 8003134:	08003ea5 	.word	0x08003ea5

08003138 <__hi0bits>:
 8003138:	0c03      	lsrs	r3, r0, #16
 800313a:	041b      	lsls	r3, r3, #16
 800313c:	b9d3      	cbnz	r3, 8003174 <__hi0bits+0x3c>
 800313e:	0400      	lsls	r0, r0, #16
 8003140:	2310      	movs	r3, #16
 8003142:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8003146:	bf04      	itt	eq
 8003148:	0200      	lsleq	r0, r0, #8
 800314a:	3308      	addeq	r3, #8
 800314c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003150:	bf04      	itt	eq
 8003152:	0100      	lsleq	r0, r0, #4
 8003154:	3304      	addeq	r3, #4
 8003156:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800315a:	bf04      	itt	eq
 800315c:	0080      	lsleq	r0, r0, #2
 800315e:	3302      	addeq	r3, #2
 8003160:	2800      	cmp	r0, #0
 8003162:	db05      	blt.n	8003170 <__hi0bits+0x38>
 8003164:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003168:	f103 0301 	add.w	r3, r3, #1
 800316c:	bf08      	it	eq
 800316e:	2320      	moveq	r3, #32
 8003170:	4618      	mov	r0, r3
 8003172:	4770      	bx	lr
 8003174:	2300      	movs	r3, #0
 8003176:	e7e4      	b.n	8003142 <__hi0bits+0xa>

08003178 <__lo0bits>:
 8003178:	6803      	ldr	r3, [r0, #0]
 800317a:	f013 0207 	ands.w	r2, r3, #7
 800317e:	d00c      	beq.n	800319a <__lo0bits+0x22>
 8003180:	07d9      	lsls	r1, r3, #31
 8003182:	d422      	bmi.n	80031ca <__lo0bits+0x52>
 8003184:	079a      	lsls	r2, r3, #30
 8003186:	bf49      	itett	mi
 8003188:	085b      	lsrmi	r3, r3, #1
 800318a:	089b      	lsrpl	r3, r3, #2
 800318c:	6003      	strmi	r3, [r0, #0]
 800318e:	2201      	movmi	r2, #1
 8003190:	bf5c      	itt	pl
 8003192:	6003      	strpl	r3, [r0, #0]
 8003194:	2202      	movpl	r2, #2
 8003196:	4610      	mov	r0, r2
 8003198:	4770      	bx	lr
 800319a:	b299      	uxth	r1, r3
 800319c:	b909      	cbnz	r1, 80031a2 <__lo0bits+0x2a>
 800319e:	0c1b      	lsrs	r3, r3, #16
 80031a0:	2210      	movs	r2, #16
 80031a2:	b2d9      	uxtb	r1, r3
 80031a4:	b909      	cbnz	r1, 80031aa <__lo0bits+0x32>
 80031a6:	3208      	adds	r2, #8
 80031a8:	0a1b      	lsrs	r3, r3, #8
 80031aa:	0719      	lsls	r1, r3, #28
 80031ac:	bf04      	itt	eq
 80031ae:	091b      	lsreq	r3, r3, #4
 80031b0:	3204      	addeq	r2, #4
 80031b2:	0799      	lsls	r1, r3, #30
 80031b4:	bf04      	itt	eq
 80031b6:	089b      	lsreq	r3, r3, #2
 80031b8:	3202      	addeq	r2, #2
 80031ba:	07d9      	lsls	r1, r3, #31
 80031bc:	d403      	bmi.n	80031c6 <__lo0bits+0x4e>
 80031be:	085b      	lsrs	r3, r3, #1
 80031c0:	f102 0201 	add.w	r2, r2, #1
 80031c4:	d003      	beq.n	80031ce <__lo0bits+0x56>
 80031c6:	6003      	str	r3, [r0, #0]
 80031c8:	e7e5      	b.n	8003196 <__lo0bits+0x1e>
 80031ca:	2200      	movs	r2, #0
 80031cc:	e7e3      	b.n	8003196 <__lo0bits+0x1e>
 80031ce:	2220      	movs	r2, #32
 80031d0:	e7e1      	b.n	8003196 <__lo0bits+0x1e>
	...

080031d4 <__i2b>:
 80031d4:	b510      	push	{r4, lr}
 80031d6:	460c      	mov	r4, r1
 80031d8:	2101      	movs	r1, #1
 80031da:	f7ff ff05 	bl	8002fe8 <_Balloc>
 80031de:	4602      	mov	r2, r0
 80031e0:	b928      	cbnz	r0, 80031ee <__i2b+0x1a>
 80031e2:	4b05      	ldr	r3, [pc, #20]	; (80031f8 <__i2b+0x24>)
 80031e4:	4805      	ldr	r0, [pc, #20]	; (80031fc <__i2b+0x28>)
 80031e6:	f240 1145 	movw	r1, #325	; 0x145
 80031ea:	f000 fc39 	bl	8003a60 <__assert_func>
 80031ee:	2301      	movs	r3, #1
 80031f0:	6144      	str	r4, [r0, #20]
 80031f2:	6103      	str	r3, [r0, #16]
 80031f4:	bd10      	pop	{r4, pc}
 80031f6:	bf00      	nop
 80031f8:	08003e83 	.word	0x08003e83
 80031fc:	08003ea5 	.word	0x08003ea5

08003200 <__multiply>:
 8003200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003204:	4691      	mov	r9, r2
 8003206:	690a      	ldr	r2, [r1, #16]
 8003208:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800320c:	429a      	cmp	r2, r3
 800320e:	bfb8      	it	lt
 8003210:	460b      	movlt	r3, r1
 8003212:	460c      	mov	r4, r1
 8003214:	bfbc      	itt	lt
 8003216:	464c      	movlt	r4, r9
 8003218:	4699      	movlt	r9, r3
 800321a:	6927      	ldr	r7, [r4, #16]
 800321c:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003220:	68a3      	ldr	r3, [r4, #8]
 8003222:	6861      	ldr	r1, [r4, #4]
 8003224:	eb07 060a 	add.w	r6, r7, sl
 8003228:	42b3      	cmp	r3, r6
 800322a:	b085      	sub	sp, #20
 800322c:	bfb8      	it	lt
 800322e:	3101      	addlt	r1, #1
 8003230:	f7ff feda 	bl	8002fe8 <_Balloc>
 8003234:	b930      	cbnz	r0, 8003244 <__multiply+0x44>
 8003236:	4602      	mov	r2, r0
 8003238:	4b44      	ldr	r3, [pc, #272]	; (800334c <__multiply+0x14c>)
 800323a:	4845      	ldr	r0, [pc, #276]	; (8003350 <__multiply+0x150>)
 800323c:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003240:	f000 fc0e 	bl	8003a60 <__assert_func>
 8003244:	f100 0514 	add.w	r5, r0, #20
 8003248:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800324c:	462b      	mov	r3, r5
 800324e:	2200      	movs	r2, #0
 8003250:	4543      	cmp	r3, r8
 8003252:	d321      	bcc.n	8003298 <__multiply+0x98>
 8003254:	f104 0314 	add.w	r3, r4, #20
 8003258:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800325c:	f109 0314 	add.w	r3, r9, #20
 8003260:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003264:	9202      	str	r2, [sp, #8]
 8003266:	1b3a      	subs	r2, r7, r4
 8003268:	3a15      	subs	r2, #21
 800326a:	f022 0203 	bic.w	r2, r2, #3
 800326e:	3204      	adds	r2, #4
 8003270:	f104 0115 	add.w	r1, r4, #21
 8003274:	428f      	cmp	r7, r1
 8003276:	bf38      	it	cc
 8003278:	2204      	movcc	r2, #4
 800327a:	9201      	str	r2, [sp, #4]
 800327c:	9a02      	ldr	r2, [sp, #8]
 800327e:	9303      	str	r3, [sp, #12]
 8003280:	429a      	cmp	r2, r3
 8003282:	d80c      	bhi.n	800329e <__multiply+0x9e>
 8003284:	2e00      	cmp	r6, #0
 8003286:	dd03      	ble.n	8003290 <__multiply+0x90>
 8003288:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800328c:	2b00      	cmp	r3, #0
 800328e:	d05b      	beq.n	8003348 <__multiply+0x148>
 8003290:	6106      	str	r6, [r0, #16]
 8003292:	b005      	add	sp, #20
 8003294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003298:	f843 2b04 	str.w	r2, [r3], #4
 800329c:	e7d8      	b.n	8003250 <__multiply+0x50>
 800329e:	f8b3 a000 	ldrh.w	sl, [r3]
 80032a2:	f1ba 0f00 	cmp.w	sl, #0
 80032a6:	d024      	beq.n	80032f2 <__multiply+0xf2>
 80032a8:	f104 0e14 	add.w	lr, r4, #20
 80032ac:	46a9      	mov	r9, r5
 80032ae:	f04f 0c00 	mov.w	ip, #0
 80032b2:	f85e 2b04 	ldr.w	r2, [lr], #4
 80032b6:	f8d9 1000 	ldr.w	r1, [r9]
 80032ba:	fa1f fb82 	uxth.w	fp, r2
 80032be:	b289      	uxth	r1, r1
 80032c0:	fb0a 110b 	mla	r1, sl, fp, r1
 80032c4:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80032c8:	f8d9 2000 	ldr.w	r2, [r9]
 80032cc:	4461      	add	r1, ip
 80032ce:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80032d2:	fb0a c20b 	mla	r2, sl, fp, ip
 80032d6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80032da:	b289      	uxth	r1, r1
 80032dc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80032e0:	4577      	cmp	r7, lr
 80032e2:	f849 1b04 	str.w	r1, [r9], #4
 80032e6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80032ea:	d8e2      	bhi.n	80032b2 <__multiply+0xb2>
 80032ec:	9a01      	ldr	r2, [sp, #4]
 80032ee:	f845 c002 	str.w	ip, [r5, r2]
 80032f2:	9a03      	ldr	r2, [sp, #12]
 80032f4:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80032f8:	3304      	adds	r3, #4
 80032fa:	f1b9 0f00 	cmp.w	r9, #0
 80032fe:	d021      	beq.n	8003344 <__multiply+0x144>
 8003300:	6829      	ldr	r1, [r5, #0]
 8003302:	f104 0c14 	add.w	ip, r4, #20
 8003306:	46ae      	mov	lr, r5
 8003308:	f04f 0a00 	mov.w	sl, #0
 800330c:	f8bc b000 	ldrh.w	fp, [ip]
 8003310:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003314:	fb09 220b 	mla	r2, r9, fp, r2
 8003318:	4452      	add	r2, sl
 800331a:	b289      	uxth	r1, r1
 800331c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003320:	f84e 1b04 	str.w	r1, [lr], #4
 8003324:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003328:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800332c:	f8be 1000 	ldrh.w	r1, [lr]
 8003330:	fb09 110a 	mla	r1, r9, sl, r1
 8003334:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8003338:	4567      	cmp	r7, ip
 800333a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800333e:	d8e5      	bhi.n	800330c <__multiply+0x10c>
 8003340:	9a01      	ldr	r2, [sp, #4]
 8003342:	50a9      	str	r1, [r5, r2]
 8003344:	3504      	adds	r5, #4
 8003346:	e799      	b.n	800327c <__multiply+0x7c>
 8003348:	3e01      	subs	r6, #1
 800334a:	e79b      	b.n	8003284 <__multiply+0x84>
 800334c:	08003e83 	.word	0x08003e83
 8003350:	08003ea5 	.word	0x08003ea5

08003354 <__pow5mult>:
 8003354:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003358:	4615      	mov	r5, r2
 800335a:	f012 0203 	ands.w	r2, r2, #3
 800335e:	4606      	mov	r6, r0
 8003360:	460f      	mov	r7, r1
 8003362:	d007      	beq.n	8003374 <__pow5mult+0x20>
 8003364:	4c25      	ldr	r4, [pc, #148]	; (80033fc <__pow5mult+0xa8>)
 8003366:	3a01      	subs	r2, #1
 8003368:	2300      	movs	r3, #0
 800336a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800336e:	f7ff fe9d 	bl	80030ac <__multadd>
 8003372:	4607      	mov	r7, r0
 8003374:	10ad      	asrs	r5, r5, #2
 8003376:	d03d      	beq.n	80033f4 <__pow5mult+0xa0>
 8003378:	69f4      	ldr	r4, [r6, #28]
 800337a:	b97c      	cbnz	r4, 800339c <__pow5mult+0x48>
 800337c:	2010      	movs	r0, #16
 800337e:	f7ff fcd1 	bl	8002d24 <malloc>
 8003382:	4602      	mov	r2, r0
 8003384:	61f0      	str	r0, [r6, #28]
 8003386:	b928      	cbnz	r0, 8003394 <__pow5mult+0x40>
 8003388:	4b1d      	ldr	r3, [pc, #116]	; (8003400 <__pow5mult+0xac>)
 800338a:	481e      	ldr	r0, [pc, #120]	; (8003404 <__pow5mult+0xb0>)
 800338c:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003390:	f000 fb66 	bl	8003a60 <__assert_func>
 8003394:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003398:	6004      	str	r4, [r0, #0]
 800339a:	60c4      	str	r4, [r0, #12]
 800339c:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80033a0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80033a4:	b94c      	cbnz	r4, 80033ba <__pow5mult+0x66>
 80033a6:	f240 2171 	movw	r1, #625	; 0x271
 80033aa:	4630      	mov	r0, r6
 80033ac:	f7ff ff12 	bl	80031d4 <__i2b>
 80033b0:	2300      	movs	r3, #0
 80033b2:	f8c8 0008 	str.w	r0, [r8, #8]
 80033b6:	4604      	mov	r4, r0
 80033b8:	6003      	str	r3, [r0, #0]
 80033ba:	f04f 0900 	mov.w	r9, #0
 80033be:	07eb      	lsls	r3, r5, #31
 80033c0:	d50a      	bpl.n	80033d8 <__pow5mult+0x84>
 80033c2:	4639      	mov	r1, r7
 80033c4:	4622      	mov	r2, r4
 80033c6:	4630      	mov	r0, r6
 80033c8:	f7ff ff1a 	bl	8003200 <__multiply>
 80033cc:	4639      	mov	r1, r7
 80033ce:	4680      	mov	r8, r0
 80033d0:	4630      	mov	r0, r6
 80033d2:	f7ff fe49 	bl	8003068 <_Bfree>
 80033d6:	4647      	mov	r7, r8
 80033d8:	106d      	asrs	r5, r5, #1
 80033da:	d00b      	beq.n	80033f4 <__pow5mult+0xa0>
 80033dc:	6820      	ldr	r0, [r4, #0]
 80033de:	b938      	cbnz	r0, 80033f0 <__pow5mult+0x9c>
 80033e0:	4622      	mov	r2, r4
 80033e2:	4621      	mov	r1, r4
 80033e4:	4630      	mov	r0, r6
 80033e6:	f7ff ff0b 	bl	8003200 <__multiply>
 80033ea:	6020      	str	r0, [r4, #0]
 80033ec:	f8c0 9000 	str.w	r9, [r0]
 80033f0:	4604      	mov	r4, r0
 80033f2:	e7e4      	b.n	80033be <__pow5mult+0x6a>
 80033f4:	4638      	mov	r0, r7
 80033f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80033fa:	bf00      	nop
 80033fc:	08003ff0 	.word	0x08003ff0
 8003400:	08003e14 	.word	0x08003e14
 8003404:	08003ea5 	.word	0x08003ea5

08003408 <__lshift>:
 8003408:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800340c:	460c      	mov	r4, r1
 800340e:	6849      	ldr	r1, [r1, #4]
 8003410:	6923      	ldr	r3, [r4, #16]
 8003412:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003416:	68a3      	ldr	r3, [r4, #8]
 8003418:	4607      	mov	r7, r0
 800341a:	4691      	mov	r9, r2
 800341c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003420:	f108 0601 	add.w	r6, r8, #1
 8003424:	42b3      	cmp	r3, r6
 8003426:	db0b      	blt.n	8003440 <__lshift+0x38>
 8003428:	4638      	mov	r0, r7
 800342a:	f7ff fddd 	bl	8002fe8 <_Balloc>
 800342e:	4605      	mov	r5, r0
 8003430:	b948      	cbnz	r0, 8003446 <__lshift+0x3e>
 8003432:	4602      	mov	r2, r0
 8003434:	4b28      	ldr	r3, [pc, #160]	; (80034d8 <__lshift+0xd0>)
 8003436:	4829      	ldr	r0, [pc, #164]	; (80034dc <__lshift+0xd4>)
 8003438:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800343c:	f000 fb10 	bl	8003a60 <__assert_func>
 8003440:	3101      	adds	r1, #1
 8003442:	005b      	lsls	r3, r3, #1
 8003444:	e7ee      	b.n	8003424 <__lshift+0x1c>
 8003446:	2300      	movs	r3, #0
 8003448:	f100 0114 	add.w	r1, r0, #20
 800344c:	f100 0210 	add.w	r2, r0, #16
 8003450:	4618      	mov	r0, r3
 8003452:	4553      	cmp	r3, sl
 8003454:	db33      	blt.n	80034be <__lshift+0xb6>
 8003456:	6920      	ldr	r0, [r4, #16]
 8003458:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800345c:	f104 0314 	add.w	r3, r4, #20
 8003460:	f019 091f 	ands.w	r9, r9, #31
 8003464:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003468:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800346c:	d02b      	beq.n	80034c6 <__lshift+0xbe>
 800346e:	f1c9 0e20 	rsb	lr, r9, #32
 8003472:	468a      	mov	sl, r1
 8003474:	2200      	movs	r2, #0
 8003476:	6818      	ldr	r0, [r3, #0]
 8003478:	fa00 f009 	lsl.w	r0, r0, r9
 800347c:	4310      	orrs	r0, r2
 800347e:	f84a 0b04 	str.w	r0, [sl], #4
 8003482:	f853 2b04 	ldr.w	r2, [r3], #4
 8003486:	459c      	cmp	ip, r3
 8003488:	fa22 f20e 	lsr.w	r2, r2, lr
 800348c:	d8f3      	bhi.n	8003476 <__lshift+0x6e>
 800348e:	ebac 0304 	sub.w	r3, ip, r4
 8003492:	3b15      	subs	r3, #21
 8003494:	f023 0303 	bic.w	r3, r3, #3
 8003498:	3304      	adds	r3, #4
 800349a:	f104 0015 	add.w	r0, r4, #21
 800349e:	4584      	cmp	ip, r0
 80034a0:	bf38      	it	cc
 80034a2:	2304      	movcc	r3, #4
 80034a4:	50ca      	str	r2, [r1, r3]
 80034a6:	b10a      	cbz	r2, 80034ac <__lshift+0xa4>
 80034a8:	f108 0602 	add.w	r6, r8, #2
 80034ac:	3e01      	subs	r6, #1
 80034ae:	4638      	mov	r0, r7
 80034b0:	612e      	str	r6, [r5, #16]
 80034b2:	4621      	mov	r1, r4
 80034b4:	f7ff fdd8 	bl	8003068 <_Bfree>
 80034b8:	4628      	mov	r0, r5
 80034ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80034be:	f842 0f04 	str.w	r0, [r2, #4]!
 80034c2:	3301      	adds	r3, #1
 80034c4:	e7c5      	b.n	8003452 <__lshift+0x4a>
 80034c6:	3904      	subs	r1, #4
 80034c8:	f853 2b04 	ldr.w	r2, [r3], #4
 80034cc:	f841 2f04 	str.w	r2, [r1, #4]!
 80034d0:	459c      	cmp	ip, r3
 80034d2:	d8f9      	bhi.n	80034c8 <__lshift+0xc0>
 80034d4:	e7ea      	b.n	80034ac <__lshift+0xa4>
 80034d6:	bf00      	nop
 80034d8:	08003e83 	.word	0x08003e83
 80034dc:	08003ea5 	.word	0x08003ea5

080034e0 <__mcmp>:
 80034e0:	b530      	push	{r4, r5, lr}
 80034e2:	6902      	ldr	r2, [r0, #16]
 80034e4:	690c      	ldr	r4, [r1, #16]
 80034e6:	1b12      	subs	r2, r2, r4
 80034e8:	d10e      	bne.n	8003508 <__mcmp+0x28>
 80034ea:	f100 0314 	add.w	r3, r0, #20
 80034ee:	3114      	adds	r1, #20
 80034f0:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80034f4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80034f8:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80034fc:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003500:	42a5      	cmp	r5, r4
 8003502:	d003      	beq.n	800350c <__mcmp+0x2c>
 8003504:	d305      	bcc.n	8003512 <__mcmp+0x32>
 8003506:	2201      	movs	r2, #1
 8003508:	4610      	mov	r0, r2
 800350a:	bd30      	pop	{r4, r5, pc}
 800350c:	4283      	cmp	r3, r0
 800350e:	d3f3      	bcc.n	80034f8 <__mcmp+0x18>
 8003510:	e7fa      	b.n	8003508 <__mcmp+0x28>
 8003512:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003516:	e7f7      	b.n	8003508 <__mcmp+0x28>

08003518 <__mdiff>:
 8003518:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800351c:	460c      	mov	r4, r1
 800351e:	4606      	mov	r6, r0
 8003520:	4611      	mov	r1, r2
 8003522:	4620      	mov	r0, r4
 8003524:	4690      	mov	r8, r2
 8003526:	f7ff ffdb 	bl	80034e0 <__mcmp>
 800352a:	1e05      	subs	r5, r0, #0
 800352c:	d110      	bne.n	8003550 <__mdiff+0x38>
 800352e:	4629      	mov	r1, r5
 8003530:	4630      	mov	r0, r6
 8003532:	f7ff fd59 	bl	8002fe8 <_Balloc>
 8003536:	b930      	cbnz	r0, 8003546 <__mdiff+0x2e>
 8003538:	4b3a      	ldr	r3, [pc, #232]	; (8003624 <__mdiff+0x10c>)
 800353a:	4602      	mov	r2, r0
 800353c:	f240 2137 	movw	r1, #567	; 0x237
 8003540:	4839      	ldr	r0, [pc, #228]	; (8003628 <__mdiff+0x110>)
 8003542:	f000 fa8d 	bl	8003a60 <__assert_func>
 8003546:	2301      	movs	r3, #1
 8003548:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800354c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003550:	bfa4      	itt	ge
 8003552:	4643      	movge	r3, r8
 8003554:	46a0      	movge	r8, r4
 8003556:	4630      	mov	r0, r6
 8003558:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800355c:	bfa6      	itte	ge
 800355e:	461c      	movge	r4, r3
 8003560:	2500      	movge	r5, #0
 8003562:	2501      	movlt	r5, #1
 8003564:	f7ff fd40 	bl	8002fe8 <_Balloc>
 8003568:	b920      	cbnz	r0, 8003574 <__mdiff+0x5c>
 800356a:	4b2e      	ldr	r3, [pc, #184]	; (8003624 <__mdiff+0x10c>)
 800356c:	4602      	mov	r2, r0
 800356e:	f240 2145 	movw	r1, #581	; 0x245
 8003572:	e7e5      	b.n	8003540 <__mdiff+0x28>
 8003574:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003578:	6926      	ldr	r6, [r4, #16]
 800357a:	60c5      	str	r5, [r0, #12]
 800357c:	f104 0914 	add.w	r9, r4, #20
 8003580:	f108 0514 	add.w	r5, r8, #20
 8003584:	f100 0e14 	add.w	lr, r0, #20
 8003588:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800358c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003590:	f108 0210 	add.w	r2, r8, #16
 8003594:	46f2      	mov	sl, lr
 8003596:	2100      	movs	r1, #0
 8003598:	f859 3b04 	ldr.w	r3, [r9], #4
 800359c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80035a0:	fa11 f88b 	uxtah	r8, r1, fp
 80035a4:	b299      	uxth	r1, r3
 80035a6:	0c1b      	lsrs	r3, r3, #16
 80035a8:	eba8 0801 	sub.w	r8, r8, r1
 80035ac:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80035b0:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80035b4:	fa1f f888 	uxth.w	r8, r8
 80035b8:	1419      	asrs	r1, r3, #16
 80035ba:	454e      	cmp	r6, r9
 80035bc:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80035c0:	f84a 3b04 	str.w	r3, [sl], #4
 80035c4:	d8e8      	bhi.n	8003598 <__mdiff+0x80>
 80035c6:	1b33      	subs	r3, r6, r4
 80035c8:	3b15      	subs	r3, #21
 80035ca:	f023 0303 	bic.w	r3, r3, #3
 80035ce:	3304      	adds	r3, #4
 80035d0:	3415      	adds	r4, #21
 80035d2:	42a6      	cmp	r6, r4
 80035d4:	bf38      	it	cc
 80035d6:	2304      	movcc	r3, #4
 80035d8:	441d      	add	r5, r3
 80035da:	4473      	add	r3, lr
 80035dc:	469e      	mov	lr, r3
 80035de:	462e      	mov	r6, r5
 80035e0:	4566      	cmp	r6, ip
 80035e2:	d30e      	bcc.n	8003602 <__mdiff+0xea>
 80035e4:	f10c 0203 	add.w	r2, ip, #3
 80035e8:	1b52      	subs	r2, r2, r5
 80035ea:	f022 0203 	bic.w	r2, r2, #3
 80035ee:	3d03      	subs	r5, #3
 80035f0:	45ac      	cmp	ip, r5
 80035f2:	bf38      	it	cc
 80035f4:	2200      	movcc	r2, #0
 80035f6:	4413      	add	r3, r2
 80035f8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80035fc:	b17a      	cbz	r2, 800361e <__mdiff+0x106>
 80035fe:	6107      	str	r7, [r0, #16]
 8003600:	e7a4      	b.n	800354c <__mdiff+0x34>
 8003602:	f856 8b04 	ldr.w	r8, [r6], #4
 8003606:	fa11 f288 	uxtah	r2, r1, r8
 800360a:	1414      	asrs	r4, r2, #16
 800360c:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003610:	b292      	uxth	r2, r2
 8003612:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003616:	f84e 2b04 	str.w	r2, [lr], #4
 800361a:	1421      	asrs	r1, r4, #16
 800361c:	e7e0      	b.n	80035e0 <__mdiff+0xc8>
 800361e:	3f01      	subs	r7, #1
 8003620:	e7ea      	b.n	80035f8 <__mdiff+0xe0>
 8003622:	bf00      	nop
 8003624:	08003e83 	.word	0x08003e83
 8003628:	08003ea5 	.word	0x08003ea5

0800362c <__d2b>:
 800362c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003630:	460f      	mov	r7, r1
 8003632:	2101      	movs	r1, #1
 8003634:	ec59 8b10 	vmov	r8, r9, d0
 8003638:	4616      	mov	r6, r2
 800363a:	f7ff fcd5 	bl	8002fe8 <_Balloc>
 800363e:	4604      	mov	r4, r0
 8003640:	b930      	cbnz	r0, 8003650 <__d2b+0x24>
 8003642:	4602      	mov	r2, r0
 8003644:	4b24      	ldr	r3, [pc, #144]	; (80036d8 <__d2b+0xac>)
 8003646:	4825      	ldr	r0, [pc, #148]	; (80036dc <__d2b+0xb0>)
 8003648:	f240 310f 	movw	r1, #783	; 0x30f
 800364c:	f000 fa08 	bl	8003a60 <__assert_func>
 8003650:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003654:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003658:	bb2d      	cbnz	r5, 80036a6 <__d2b+0x7a>
 800365a:	9301      	str	r3, [sp, #4]
 800365c:	f1b8 0300 	subs.w	r3, r8, #0
 8003660:	d026      	beq.n	80036b0 <__d2b+0x84>
 8003662:	4668      	mov	r0, sp
 8003664:	9300      	str	r3, [sp, #0]
 8003666:	f7ff fd87 	bl	8003178 <__lo0bits>
 800366a:	e9dd 1200 	ldrd	r1, r2, [sp]
 800366e:	b1e8      	cbz	r0, 80036ac <__d2b+0x80>
 8003670:	f1c0 0320 	rsb	r3, r0, #32
 8003674:	fa02 f303 	lsl.w	r3, r2, r3
 8003678:	430b      	orrs	r3, r1
 800367a:	40c2      	lsrs	r2, r0
 800367c:	6163      	str	r3, [r4, #20]
 800367e:	9201      	str	r2, [sp, #4]
 8003680:	9b01      	ldr	r3, [sp, #4]
 8003682:	61a3      	str	r3, [r4, #24]
 8003684:	2b00      	cmp	r3, #0
 8003686:	bf14      	ite	ne
 8003688:	2202      	movne	r2, #2
 800368a:	2201      	moveq	r2, #1
 800368c:	6122      	str	r2, [r4, #16]
 800368e:	b1bd      	cbz	r5, 80036c0 <__d2b+0x94>
 8003690:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003694:	4405      	add	r5, r0
 8003696:	603d      	str	r5, [r7, #0]
 8003698:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800369c:	6030      	str	r0, [r6, #0]
 800369e:	4620      	mov	r0, r4
 80036a0:	b003      	add	sp, #12
 80036a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036a6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80036aa:	e7d6      	b.n	800365a <__d2b+0x2e>
 80036ac:	6161      	str	r1, [r4, #20]
 80036ae:	e7e7      	b.n	8003680 <__d2b+0x54>
 80036b0:	a801      	add	r0, sp, #4
 80036b2:	f7ff fd61 	bl	8003178 <__lo0bits>
 80036b6:	9b01      	ldr	r3, [sp, #4]
 80036b8:	6163      	str	r3, [r4, #20]
 80036ba:	3020      	adds	r0, #32
 80036bc:	2201      	movs	r2, #1
 80036be:	e7e5      	b.n	800368c <__d2b+0x60>
 80036c0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80036c4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80036c8:	6038      	str	r0, [r7, #0]
 80036ca:	6918      	ldr	r0, [r3, #16]
 80036cc:	f7ff fd34 	bl	8003138 <__hi0bits>
 80036d0:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80036d4:	e7e2      	b.n	800369c <__d2b+0x70>
 80036d6:	bf00      	nop
 80036d8:	08003e83 	.word	0x08003e83
 80036dc:	08003ea5 	.word	0x08003ea5

080036e0 <__sread>:
 80036e0:	b510      	push	{r4, lr}
 80036e2:	460c      	mov	r4, r1
 80036e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80036e8:	f000 f978 	bl	80039dc <_read_r>
 80036ec:	2800      	cmp	r0, #0
 80036ee:	bfab      	itete	ge
 80036f0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80036f2:	89a3      	ldrhlt	r3, [r4, #12]
 80036f4:	181b      	addge	r3, r3, r0
 80036f6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80036fa:	bfac      	ite	ge
 80036fc:	6563      	strge	r3, [r4, #84]	; 0x54
 80036fe:	81a3      	strhlt	r3, [r4, #12]
 8003700:	bd10      	pop	{r4, pc}

08003702 <__swrite>:
 8003702:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003706:	461f      	mov	r7, r3
 8003708:	898b      	ldrh	r3, [r1, #12]
 800370a:	05db      	lsls	r3, r3, #23
 800370c:	4605      	mov	r5, r0
 800370e:	460c      	mov	r4, r1
 8003710:	4616      	mov	r6, r2
 8003712:	d505      	bpl.n	8003720 <__swrite+0x1e>
 8003714:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003718:	2302      	movs	r3, #2
 800371a:	2200      	movs	r2, #0
 800371c:	f000 f94c 	bl	80039b8 <_lseek_r>
 8003720:	89a3      	ldrh	r3, [r4, #12]
 8003722:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003726:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800372a:	81a3      	strh	r3, [r4, #12]
 800372c:	4632      	mov	r2, r6
 800372e:	463b      	mov	r3, r7
 8003730:	4628      	mov	r0, r5
 8003732:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003736:	f000 b973 	b.w	8003a20 <_write_r>

0800373a <__sseek>:
 800373a:	b510      	push	{r4, lr}
 800373c:	460c      	mov	r4, r1
 800373e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003742:	f000 f939 	bl	80039b8 <_lseek_r>
 8003746:	1c43      	adds	r3, r0, #1
 8003748:	89a3      	ldrh	r3, [r4, #12]
 800374a:	bf15      	itete	ne
 800374c:	6560      	strne	r0, [r4, #84]	; 0x54
 800374e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003752:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003756:	81a3      	strheq	r3, [r4, #12]
 8003758:	bf18      	it	ne
 800375a:	81a3      	strhne	r3, [r4, #12]
 800375c:	bd10      	pop	{r4, pc}

0800375e <__sclose>:
 800375e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003762:	f000 b8f7 	b.w	8003954 <_close_r>

08003766 <__swbuf_r>:
 8003766:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003768:	460e      	mov	r6, r1
 800376a:	4614      	mov	r4, r2
 800376c:	4605      	mov	r5, r0
 800376e:	b118      	cbz	r0, 8003778 <__swbuf_r+0x12>
 8003770:	6a03      	ldr	r3, [r0, #32]
 8003772:	b90b      	cbnz	r3, 8003778 <__swbuf_r+0x12>
 8003774:	f7fe fa3a 	bl	8001bec <__sinit>
 8003778:	69a3      	ldr	r3, [r4, #24]
 800377a:	60a3      	str	r3, [r4, #8]
 800377c:	89a3      	ldrh	r3, [r4, #12]
 800377e:	071a      	lsls	r2, r3, #28
 8003780:	d525      	bpl.n	80037ce <__swbuf_r+0x68>
 8003782:	6923      	ldr	r3, [r4, #16]
 8003784:	b31b      	cbz	r3, 80037ce <__swbuf_r+0x68>
 8003786:	6823      	ldr	r3, [r4, #0]
 8003788:	6922      	ldr	r2, [r4, #16]
 800378a:	1a98      	subs	r0, r3, r2
 800378c:	6963      	ldr	r3, [r4, #20]
 800378e:	b2f6      	uxtb	r6, r6
 8003790:	4283      	cmp	r3, r0
 8003792:	4637      	mov	r7, r6
 8003794:	dc04      	bgt.n	80037a0 <__swbuf_r+0x3a>
 8003796:	4621      	mov	r1, r4
 8003798:	4628      	mov	r0, r5
 800379a:	f7ff fbf1 	bl	8002f80 <_fflush_r>
 800379e:	b9e0      	cbnz	r0, 80037da <__swbuf_r+0x74>
 80037a0:	68a3      	ldr	r3, [r4, #8]
 80037a2:	3b01      	subs	r3, #1
 80037a4:	60a3      	str	r3, [r4, #8]
 80037a6:	6823      	ldr	r3, [r4, #0]
 80037a8:	1c5a      	adds	r2, r3, #1
 80037aa:	6022      	str	r2, [r4, #0]
 80037ac:	701e      	strb	r6, [r3, #0]
 80037ae:	6962      	ldr	r2, [r4, #20]
 80037b0:	1c43      	adds	r3, r0, #1
 80037b2:	429a      	cmp	r2, r3
 80037b4:	d004      	beq.n	80037c0 <__swbuf_r+0x5a>
 80037b6:	89a3      	ldrh	r3, [r4, #12]
 80037b8:	07db      	lsls	r3, r3, #31
 80037ba:	d506      	bpl.n	80037ca <__swbuf_r+0x64>
 80037bc:	2e0a      	cmp	r6, #10
 80037be:	d104      	bne.n	80037ca <__swbuf_r+0x64>
 80037c0:	4621      	mov	r1, r4
 80037c2:	4628      	mov	r0, r5
 80037c4:	f7ff fbdc 	bl	8002f80 <_fflush_r>
 80037c8:	b938      	cbnz	r0, 80037da <__swbuf_r+0x74>
 80037ca:	4638      	mov	r0, r7
 80037cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80037ce:	4621      	mov	r1, r4
 80037d0:	4628      	mov	r0, r5
 80037d2:	f000 f805 	bl	80037e0 <__swsetup_r>
 80037d6:	2800      	cmp	r0, #0
 80037d8:	d0d5      	beq.n	8003786 <__swbuf_r+0x20>
 80037da:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80037de:	e7f4      	b.n	80037ca <__swbuf_r+0x64>

080037e0 <__swsetup_r>:
 80037e0:	b538      	push	{r3, r4, r5, lr}
 80037e2:	4b2a      	ldr	r3, [pc, #168]	; (800388c <__swsetup_r+0xac>)
 80037e4:	4605      	mov	r5, r0
 80037e6:	6818      	ldr	r0, [r3, #0]
 80037e8:	460c      	mov	r4, r1
 80037ea:	b118      	cbz	r0, 80037f4 <__swsetup_r+0x14>
 80037ec:	6a03      	ldr	r3, [r0, #32]
 80037ee:	b90b      	cbnz	r3, 80037f4 <__swsetup_r+0x14>
 80037f0:	f7fe f9fc 	bl	8001bec <__sinit>
 80037f4:	89a3      	ldrh	r3, [r4, #12]
 80037f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80037fa:	0718      	lsls	r0, r3, #28
 80037fc:	d422      	bmi.n	8003844 <__swsetup_r+0x64>
 80037fe:	06d9      	lsls	r1, r3, #27
 8003800:	d407      	bmi.n	8003812 <__swsetup_r+0x32>
 8003802:	2309      	movs	r3, #9
 8003804:	602b      	str	r3, [r5, #0]
 8003806:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800380a:	81a3      	strh	r3, [r4, #12]
 800380c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003810:	e034      	b.n	800387c <__swsetup_r+0x9c>
 8003812:	0758      	lsls	r0, r3, #29
 8003814:	d512      	bpl.n	800383c <__swsetup_r+0x5c>
 8003816:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003818:	b141      	cbz	r1, 800382c <__swsetup_r+0x4c>
 800381a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800381e:	4299      	cmp	r1, r3
 8003820:	d002      	beq.n	8003828 <__swsetup_r+0x48>
 8003822:	4628      	mov	r0, r5
 8003824:	f000 f950 	bl	8003ac8 <_free_r>
 8003828:	2300      	movs	r3, #0
 800382a:	6363      	str	r3, [r4, #52]	; 0x34
 800382c:	89a3      	ldrh	r3, [r4, #12]
 800382e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003832:	81a3      	strh	r3, [r4, #12]
 8003834:	2300      	movs	r3, #0
 8003836:	6063      	str	r3, [r4, #4]
 8003838:	6923      	ldr	r3, [r4, #16]
 800383a:	6023      	str	r3, [r4, #0]
 800383c:	89a3      	ldrh	r3, [r4, #12]
 800383e:	f043 0308 	orr.w	r3, r3, #8
 8003842:	81a3      	strh	r3, [r4, #12]
 8003844:	6923      	ldr	r3, [r4, #16]
 8003846:	b94b      	cbnz	r3, 800385c <__swsetup_r+0x7c>
 8003848:	89a3      	ldrh	r3, [r4, #12]
 800384a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800384e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003852:	d003      	beq.n	800385c <__swsetup_r+0x7c>
 8003854:	4621      	mov	r1, r4
 8003856:	4628      	mov	r0, r5
 8003858:	f000 f840 	bl	80038dc <__smakebuf_r>
 800385c:	89a0      	ldrh	r0, [r4, #12]
 800385e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003862:	f010 0301 	ands.w	r3, r0, #1
 8003866:	d00a      	beq.n	800387e <__swsetup_r+0x9e>
 8003868:	2300      	movs	r3, #0
 800386a:	60a3      	str	r3, [r4, #8]
 800386c:	6963      	ldr	r3, [r4, #20]
 800386e:	425b      	negs	r3, r3
 8003870:	61a3      	str	r3, [r4, #24]
 8003872:	6923      	ldr	r3, [r4, #16]
 8003874:	b943      	cbnz	r3, 8003888 <__swsetup_r+0xa8>
 8003876:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800387a:	d1c4      	bne.n	8003806 <__swsetup_r+0x26>
 800387c:	bd38      	pop	{r3, r4, r5, pc}
 800387e:	0781      	lsls	r1, r0, #30
 8003880:	bf58      	it	pl
 8003882:	6963      	ldrpl	r3, [r4, #20]
 8003884:	60a3      	str	r3, [r4, #8]
 8003886:	e7f4      	b.n	8003872 <__swsetup_r+0x92>
 8003888:	2000      	movs	r0, #0
 800388a:	e7f7      	b.n	800387c <__swsetup_r+0x9c>
 800388c:	20000058 	.word	0x20000058

08003890 <__swhatbuf_r>:
 8003890:	b570      	push	{r4, r5, r6, lr}
 8003892:	460c      	mov	r4, r1
 8003894:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003898:	2900      	cmp	r1, #0
 800389a:	b096      	sub	sp, #88	; 0x58
 800389c:	4615      	mov	r5, r2
 800389e:	461e      	mov	r6, r3
 80038a0:	da0d      	bge.n	80038be <__swhatbuf_r+0x2e>
 80038a2:	89a3      	ldrh	r3, [r4, #12]
 80038a4:	f013 0f80 	tst.w	r3, #128	; 0x80
 80038a8:	f04f 0100 	mov.w	r1, #0
 80038ac:	bf0c      	ite	eq
 80038ae:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80038b2:	2340      	movne	r3, #64	; 0x40
 80038b4:	2000      	movs	r0, #0
 80038b6:	6031      	str	r1, [r6, #0]
 80038b8:	602b      	str	r3, [r5, #0]
 80038ba:	b016      	add	sp, #88	; 0x58
 80038bc:	bd70      	pop	{r4, r5, r6, pc}
 80038be:	466a      	mov	r2, sp
 80038c0:	f000 f858 	bl	8003974 <_fstat_r>
 80038c4:	2800      	cmp	r0, #0
 80038c6:	dbec      	blt.n	80038a2 <__swhatbuf_r+0x12>
 80038c8:	9901      	ldr	r1, [sp, #4]
 80038ca:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80038ce:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80038d2:	4259      	negs	r1, r3
 80038d4:	4159      	adcs	r1, r3
 80038d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80038da:	e7eb      	b.n	80038b4 <__swhatbuf_r+0x24>

080038dc <__smakebuf_r>:
 80038dc:	898b      	ldrh	r3, [r1, #12]
 80038de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80038e0:	079d      	lsls	r5, r3, #30
 80038e2:	4606      	mov	r6, r0
 80038e4:	460c      	mov	r4, r1
 80038e6:	d507      	bpl.n	80038f8 <__smakebuf_r+0x1c>
 80038e8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80038ec:	6023      	str	r3, [r4, #0]
 80038ee:	6123      	str	r3, [r4, #16]
 80038f0:	2301      	movs	r3, #1
 80038f2:	6163      	str	r3, [r4, #20]
 80038f4:	b002      	add	sp, #8
 80038f6:	bd70      	pop	{r4, r5, r6, pc}
 80038f8:	ab01      	add	r3, sp, #4
 80038fa:	466a      	mov	r2, sp
 80038fc:	f7ff ffc8 	bl	8003890 <__swhatbuf_r>
 8003900:	9900      	ldr	r1, [sp, #0]
 8003902:	4605      	mov	r5, r0
 8003904:	4630      	mov	r0, r6
 8003906:	f7ff fa35 	bl	8002d74 <_malloc_r>
 800390a:	b948      	cbnz	r0, 8003920 <__smakebuf_r+0x44>
 800390c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003910:	059a      	lsls	r2, r3, #22
 8003912:	d4ef      	bmi.n	80038f4 <__smakebuf_r+0x18>
 8003914:	f023 0303 	bic.w	r3, r3, #3
 8003918:	f043 0302 	orr.w	r3, r3, #2
 800391c:	81a3      	strh	r3, [r4, #12]
 800391e:	e7e3      	b.n	80038e8 <__smakebuf_r+0xc>
 8003920:	89a3      	ldrh	r3, [r4, #12]
 8003922:	6020      	str	r0, [r4, #0]
 8003924:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003928:	81a3      	strh	r3, [r4, #12]
 800392a:	9b00      	ldr	r3, [sp, #0]
 800392c:	6163      	str	r3, [r4, #20]
 800392e:	9b01      	ldr	r3, [sp, #4]
 8003930:	6120      	str	r0, [r4, #16]
 8003932:	b15b      	cbz	r3, 800394c <__smakebuf_r+0x70>
 8003934:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003938:	4630      	mov	r0, r6
 800393a:	f000 f82d 	bl	8003998 <_isatty_r>
 800393e:	b128      	cbz	r0, 800394c <__smakebuf_r+0x70>
 8003940:	89a3      	ldrh	r3, [r4, #12]
 8003942:	f023 0303 	bic.w	r3, r3, #3
 8003946:	f043 0301 	orr.w	r3, r3, #1
 800394a:	81a3      	strh	r3, [r4, #12]
 800394c:	89a3      	ldrh	r3, [r4, #12]
 800394e:	431d      	orrs	r5, r3
 8003950:	81a5      	strh	r5, [r4, #12]
 8003952:	e7cf      	b.n	80038f4 <__smakebuf_r+0x18>

08003954 <_close_r>:
 8003954:	b538      	push	{r3, r4, r5, lr}
 8003956:	4d06      	ldr	r5, [pc, #24]	; (8003970 <_close_r+0x1c>)
 8003958:	2300      	movs	r3, #0
 800395a:	4604      	mov	r4, r0
 800395c:	4608      	mov	r0, r1
 800395e:	602b      	str	r3, [r5, #0]
 8003960:	f7fd fbbe 	bl	80010e0 <_close>
 8003964:	1c43      	adds	r3, r0, #1
 8003966:	d102      	bne.n	800396e <_close_r+0x1a>
 8003968:	682b      	ldr	r3, [r5, #0]
 800396a:	b103      	cbz	r3, 800396e <_close_r+0x1a>
 800396c:	6023      	str	r3, [r4, #0]
 800396e:	bd38      	pop	{r3, r4, r5, pc}
 8003970:	20000330 	.word	0x20000330

08003974 <_fstat_r>:
 8003974:	b538      	push	{r3, r4, r5, lr}
 8003976:	4d07      	ldr	r5, [pc, #28]	; (8003994 <_fstat_r+0x20>)
 8003978:	2300      	movs	r3, #0
 800397a:	4604      	mov	r4, r0
 800397c:	4608      	mov	r0, r1
 800397e:	4611      	mov	r1, r2
 8003980:	602b      	str	r3, [r5, #0]
 8003982:	f7fd fbb9 	bl	80010f8 <_fstat>
 8003986:	1c43      	adds	r3, r0, #1
 8003988:	d102      	bne.n	8003990 <_fstat_r+0x1c>
 800398a:	682b      	ldr	r3, [r5, #0]
 800398c:	b103      	cbz	r3, 8003990 <_fstat_r+0x1c>
 800398e:	6023      	str	r3, [r4, #0]
 8003990:	bd38      	pop	{r3, r4, r5, pc}
 8003992:	bf00      	nop
 8003994:	20000330 	.word	0x20000330

08003998 <_isatty_r>:
 8003998:	b538      	push	{r3, r4, r5, lr}
 800399a:	4d06      	ldr	r5, [pc, #24]	; (80039b4 <_isatty_r+0x1c>)
 800399c:	2300      	movs	r3, #0
 800399e:	4604      	mov	r4, r0
 80039a0:	4608      	mov	r0, r1
 80039a2:	602b      	str	r3, [r5, #0]
 80039a4:	f7fd fbb8 	bl	8001118 <_isatty>
 80039a8:	1c43      	adds	r3, r0, #1
 80039aa:	d102      	bne.n	80039b2 <_isatty_r+0x1a>
 80039ac:	682b      	ldr	r3, [r5, #0]
 80039ae:	b103      	cbz	r3, 80039b2 <_isatty_r+0x1a>
 80039b0:	6023      	str	r3, [r4, #0]
 80039b2:	bd38      	pop	{r3, r4, r5, pc}
 80039b4:	20000330 	.word	0x20000330

080039b8 <_lseek_r>:
 80039b8:	b538      	push	{r3, r4, r5, lr}
 80039ba:	4d07      	ldr	r5, [pc, #28]	; (80039d8 <_lseek_r+0x20>)
 80039bc:	4604      	mov	r4, r0
 80039be:	4608      	mov	r0, r1
 80039c0:	4611      	mov	r1, r2
 80039c2:	2200      	movs	r2, #0
 80039c4:	602a      	str	r2, [r5, #0]
 80039c6:	461a      	mov	r2, r3
 80039c8:	f7fd fbb1 	bl	800112e <_lseek>
 80039cc:	1c43      	adds	r3, r0, #1
 80039ce:	d102      	bne.n	80039d6 <_lseek_r+0x1e>
 80039d0:	682b      	ldr	r3, [r5, #0]
 80039d2:	b103      	cbz	r3, 80039d6 <_lseek_r+0x1e>
 80039d4:	6023      	str	r3, [r4, #0]
 80039d6:	bd38      	pop	{r3, r4, r5, pc}
 80039d8:	20000330 	.word	0x20000330

080039dc <_read_r>:
 80039dc:	b538      	push	{r3, r4, r5, lr}
 80039de:	4d07      	ldr	r5, [pc, #28]	; (80039fc <_read_r+0x20>)
 80039e0:	4604      	mov	r4, r0
 80039e2:	4608      	mov	r0, r1
 80039e4:	4611      	mov	r1, r2
 80039e6:	2200      	movs	r2, #0
 80039e8:	602a      	str	r2, [r5, #0]
 80039ea:	461a      	mov	r2, r3
 80039ec:	f7fd fb5b 	bl	80010a6 <_read>
 80039f0:	1c43      	adds	r3, r0, #1
 80039f2:	d102      	bne.n	80039fa <_read_r+0x1e>
 80039f4:	682b      	ldr	r3, [r5, #0]
 80039f6:	b103      	cbz	r3, 80039fa <_read_r+0x1e>
 80039f8:	6023      	str	r3, [r4, #0]
 80039fa:	bd38      	pop	{r3, r4, r5, pc}
 80039fc:	20000330 	.word	0x20000330

08003a00 <_sbrk_r>:
 8003a00:	b538      	push	{r3, r4, r5, lr}
 8003a02:	4d06      	ldr	r5, [pc, #24]	; (8003a1c <_sbrk_r+0x1c>)
 8003a04:	2300      	movs	r3, #0
 8003a06:	4604      	mov	r4, r0
 8003a08:	4608      	mov	r0, r1
 8003a0a:	602b      	str	r3, [r5, #0]
 8003a0c:	f7fd fb9c 	bl	8001148 <_sbrk>
 8003a10:	1c43      	adds	r3, r0, #1
 8003a12:	d102      	bne.n	8003a1a <_sbrk_r+0x1a>
 8003a14:	682b      	ldr	r3, [r5, #0]
 8003a16:	b103      	cbz	r3, 8003a1a <_sbrk_r+0x1a>
 8003a18:	6023      	str	r3, [r4, #0]
 8003a1a:	bd38      	pop	{r3, r4, r5, pc}
 8003a1c:	20000330 	.word	0x20000330

08003a20 <_write_r>:
 8003a20:	b538      	push	{r3, r4, r5, lr}
 8003a22:	4d07      	ldr	r5, [pc, #28]	; (8003a40 <_write_r+0x20>)
 8003a24:	4604      	mov	r4, r0
 8003a26:	4608      	mov	r0, r1
 8003a28:	4611      	mov	r1, r2
 8003a2a:	2200      	movs	r2, #0
 8003a2c:	602a      	str	r2, [r5, #0]
 8003a2e:	461a      	mov	r2, r3
 8003a30:	f7fd f9f8 	bl	8000e24 <_write>
 8003a34:	1c43      	adds	r3, r0, #1
 8003a36:	d102      	bne.n	8003a3e <_write_r+0x1e>
 8003a38:	682b      	ldr	r3, [r5, #0]
 8003a3a:	b103      	cbz	r3, 8003a3e <_write_r+0x1e>
 8003a3c:	6023      	str	r3, [r4, #0]
 8003a3e:	bd38      	pop	{r3, r4, r5, pc}
 8003a40:	20000330 	.word	0x20000330

08003a44 <memcpy>:
 8003a44:	440a      	add	r2, r1
 8003a46:	4291      	cmp	r1, r2
 8003a48:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8003a4c:	d100      	bne.n	8003a50 <memcpy+0xc>
 8003a4e:	4770      	bx	lr
 8003a50:	b510      	push	{r4, lr}
 8003a52:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003a56:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003a5a:	4291      	cmp	r1, r2
 8003a5c:	d1f9      	bne.n	8003a52 <memcpy+0xe>
 8003a5e:	bd10      	pop	{r4, pc}

08003a60 <__assert_func>:
 8003a60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003a62:	4614      	mov	r4, r2
 8003a64:	461a      	mov	r2, r3
 8003a66:	4b09      	ldr	r3, [pc, #36]	; (8003a8c <__assert_func+0x2c>)
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	4605      	mov	r5, r0
 8003a6c:	68d8      	ldr	r0, [r3, #12]
 8003a6e:	b14c      	cbz	r4, 8003a84 <__assert_func+0x24>
 8003a70:	4b07      	ldr	r3, [pc, #28]	; (8003a90 <__assert_func+0x30>)
 8003a72:	9100      	str	r1, [sp, #0]
 8003a74:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003a78:	4906      	ldr	r1, [pc, #24]	; (8003a94 <__assert_func+0x34>)
 8003a7a:	462b      	mov	r3, r5
 8003a7c:	f000 f882 	bl	8003b84 <fiprintf>
 8003a80:	f000 f89f 	bl	8003bc2 <abort>
 8003a84:	4b04      	ldr	r3, [pc, #16]	; (8003a98 <__assert_func+0x38>)
 8003a86:	461c      	mov	r4, r3
 8003a88:	e7f3      	b.n	8003a72 <__assert_func+0x12>
 8003a8a:	bf00      	nop
 8003a8c:	20000058 	.word	0x20000058
 8003a90:	08004107 	.word	0x08004107
 8003a94:	08004114 	.word	0x08004114
 8003a98:	08004142 	.word	0x08004142

08003a9c <_calloc_r>:
 8003a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003a9e:	fba1 2402 	umull	r2, r4, r1, r2
 8003aa2:	b94c      	cbnz	r4, 8003ab8 <_calloc_r+0x1c>
 8003aa4:	4611      	mov	r1, r2
 8003aa6:	9201      	str	r2, [sp, #4]
 8003aa8:	f7ff f964 	bl	8002d74 <_malloc_r>
 8003aac:	9a01      	ldr	r2, [sp, #4]
 8003aae:	4605      	mov	r5, r0
 8003ab0:	b930      	cbnz	r0, 8003ac0 <_calloc_r+0x24>
 8003ab2:	4628      	mov	r0, r5
 8003ab4:	b003      	add	sp, #12
 8003ab6:	bd30      	pop	{r4, r5, pc}
 8003ab8:	220c      	movs	r2, #12
 8003aba:	6002      	str	r2, [r0, #0]
 8003abc:	2500      	movs	r5, #0
 8003abe:	e7f8      	b.n	8003ab2 <_calloc_r+0x16>
 8003ac0:	4621      	mov	r1, r4
 8003ac2:	f7fe f937 	bl	8001d34 <memset>
 8003ac6:	e7f4      	b.n	8003ab2 <_calloc_r+0x16>

08003ac8 <_free_r>:
 8003ac8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003aca:	2900      	cmp	r1, #0
 8003acc:	d044      	beq.n	8003b58 <_free_r+0x90>
 8003ace:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003ad2:	9001      	str	r0, [sp, #4]
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	f1a1 0404 	sub.w	r4, r1, #4
 8003ada:	bfb8      	it	lt
 8003adc:	18e4      	addlt	r4, r4, r3
 8003ade:	f7ff fa77 	bl	8002fd0 <__malloc_lock>
 8003ae2:	4a1e      	ldr	r2, [pc, #120]	; (8003b5c <_free_r+0x94>)
 8003ae4:	9801      	ldr	r0, [sp, #4]
 8003ae6:	6813      	ldr	r3, [r2, #0]
 8003ae8:	b933      	cbnz	r3, 8003af8 <_free_r+0x30>
 8003aea:	6063      	str	r3, [r4, #4]
 8003aec:	6014      	str	r4, [r2, #0]
 8003aee:	b003      	add	sp, #12
 8003af0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003af4:	f7ff ba72 	b.w	8002fdc <__malloc_unlock>
 8003af8:	42a3      	cmp	r3, r4
 8003afa:	d908      	bls.n	8003b0e <_free_r+0x46>
 8003afc:	6825      	ldr	r5, [r4, #0]
 8003afe:	1961      	adds	r1, r4, r5
 8003b00:	428b      	cmp	r3, r1
 8003b02:	bf01      	itttt	eq
 8003b04:	6819      	ldreq	r1, [r3, #0]
 8003b06:	685b      	ldreq	r3, [r3, #4]
 8003b08:	1949      	addeq	r1, r1, r5
 8003b0a:	6021      	streq	r1, [r4, #0]
 8003b0c:	e7ed      	b.n	8003aea <_free_r+0x22>
 8003b0e:	461a      	mov	r2, r3
 8003b10:	685b      	ldr	r3, [r3, #4]
 8003b12:	b10b      	cbz	r3, 8003b18 <_free_r+0x50>
 8003b14:	42a3      	cmp	r3, r4
 8003b16:	d9fa      	bls.n	8003b0e <_free_r+0x46>
 8003b18:	6811      	ldr	r1, [r2, #0]
 8003b1a:	1855      	adds	r5, r2, r1
 8003b1c:	42a5      	cmp	r5, r4
 8003b1e:	d10b      	bne.n	8003b38 <_free_r+0x70>
 8003b20:	6824      	ldr	r4, [r4, #0]
 8003b22:	4421      	add	r1, r4
 8003b24:	1854      	adds	r4, r2, r1
 8003b26:	42a3      	cmp	r3, r4
 8003b28:	6011      	str	r1, [r2, #0]
 8003b2a:	d1e0      	bne.n	8003aee <_free_r+0x26>
 8003b2c:	681c      	ldr	r4, [r3, #0]
 8003b2e:	685b      	ldr	r3, [r3, #4]
 8003b30:	6053      	str	r3, [r2, #4]
 8003b32:	440c      	add	r4, r1
 8003b34:	6014      	str	r4, [r2, #0]
 8003b36:	e7da      	b.n	8003aee <_free_r+0x26>
 8003b38:	d902      	bls.n	8003b40 <_free_r+0x78>
 8003b3a:	230c      	movs	r3, #12
 8003b3c:	6003      	str	r3, [r0, #0]
 8003b3e:	e7d6      	b.n	8003aee <_free_r+0x26>
 8003b40:	6825      	ldr	r5, [r4, #0]
 8003b42:	1961      	adds	r1, r4, r5
 8003b44:	428b      	cmp	r3, r1
 8003b46:	bf04      	itt	eq
 8003b48:	6819      	ldreq	r1, [r3, #0]
 8003b4a:	685b      	ldreq	r3, [r3, #4]
 8003b4c:	6063      	str	r3, [r4, #4]
 8003b4e:	bf04      	itt	eq
 8003b50:	1949      	addeq	r1, r1, r5
 8003b52:	6021      	streq	r1, [r4, #0]
 8003b54:	6054      	str	r4, [r2, #4]
 8003b56:	e7ca      	b.n	8003aee <_free_r+0x26>
 8003b58:	b003      	add	sp, #12
 8003b5a:	bd30      	pop	{r4, r5, pc}
 8003b5c:	20000328 	.word	0x20000328

08003b60 <__ascii_mbtowc>:
 8003b60:	b082      	sub	sp, #8
 8003b62:	b901      	cbnz	r1, 8003b66 <__ascii_mbtowc+0x6>
 8003b64:	a901      	add	r1, sp, #4
 8003b66:	b142      	cbz	r2, 8003b7a <__ascii_mbtowc+0x1a>
 8003b68:	b14b      	cbz	r3, 8003b7e <__ascii_mbtowc+0x1e>
 8003b6a:	7813      	ldrb	r3, [r2, #0]
 8003b6c:	600b      	str	r3, [r1, #0]
 8003b6e:	7812      	ldrb	r2, [r2, #0]
 8003b70:	1e10      	subs	r0, r2, #0
 8003b72:	bf18      	it	ne
 8003b74:	2001      	movne	r0, #1
 8003b76:	b002      	add	sp, #8
 8003b78:	4770      	bx	lr
 8003b7a:	4610      	mov	r0, r2
 8003b7c:	e7fb      	b.n	8003b76 <__ascii_mbtowc+0x16>
 8003b7e:	f06f 0001 	mvn.w	r0, #1
 8003b82:	e7f8      	b.n	8003b76 <__ascii_mbtowc+0x16>

08003b84 <fiprintf>:
 8003b84:	b40e      	push	{r1, r2, r3}
 8003b86:	b503      	push	{r0, r1, lr}
 8003b88:	4601      	mov	r1, r0
 8003b8a:	ab03      	add	r3, sp, #12
 8003b8c:	4805      	ldr	r0, [pc, #20]	; (8003ba4 <fiprintf+0x20>)
 8003b8e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b92:	6800      	ldr	r0, [r0, #0]
 8003b94:	9301      	str	r3, [sp, #4]
 8003b96:	f7fe ffab 	bl	8002af0 <_vfiprintf_r>
 8003b9a:	b002      	add	sp, #8
 8003b9c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ba0:	b003      	add	sp, #12
 8003ba2:	4770      	bx	lr
 8003ba4:	20000058 	.word	0x20000058

08003ba8 <__ascii_wctomb>:
 8003ba8:	b149      	cbz	r1, 8003bbe <__ascii_wctomb+0x16>
 8003baa:	2aff      	cmp	r2, #255	; 0xff
 8003bac:	bf85      	ittet	hi
 8003bae:	238a      	movhi	r3, #138	; 0x8a
 8003bb0:	6003      	strhi	r3, [r0, #0]
 8003bb2:	700a      	strbls	r2, [r1, #0]
 8003bb4:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8003bb8:	bf98      	it	ls
 8003bba:	2001      	movls	r0, #1
 8003bbc:	4770      	bx	lr
 8003bbe:	4608      	mov	r0, r1
 8003bc0:	4770      	bx	lr

08003bc2 <abort>:
 8003bc2:	b508      	push	{r3, lr}
 8003bc4:	2006      	movs	r0, #6
 8003bc6:	f000 f82b 	bl	8003c20 <raise>
 8003bca:	2001      	movs	r0, #1
 8003bcc:	f7fd fa61 	bl	8001092 <_exit>

08003bd0 <_raise_r>:
 8003bd0:	291f      	cmp	r1, #31
 8003bd2:	b538      	push	{r3, r4, r5, lr}
 8003bd4:	4604      	mov	r4, r0
 8003bd6:	460d      	mov	r5, r1
 8003bd8:	d904      	bls.n	8003be4 <_raise_r+0x14>
 8003bda:	2316      	movs	r3, #22
 8003bdc:	6003      	str	r3, [r0, #0]
 8003bde:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003be2:	bd38      	pop	{r3, r4, r5, pc}
 8003be4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003be6:	b112      	cbz	r2, 8003bee <_raise_r+0x1e>
 8003be8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003bec:	b94b      	cbnz	r3, 8003c02 <_raise_r+0x32>
 8003bee:	4620      	mov	r0, r4
 8003bf0:	f000 f830 	bl	8003c54 <_getpid_r>
 8003bf4:	462a      	mov	r2, r5
 8003bf6:	4601      	mov	r1, r0
 8003bf8:	4620      	mov	r0, r4
 8003bfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003bfe:	f000 b817 	b.w	8003c30 <_kill_r>
 8003c02:	2b01      	cmp	r3, #1
 8003c04:	d00a      	beq.n	8003c1c <_raise_r+0x4c>
 8003c06:	1c59      	adds	r1, r3, #1
 8003c08:	d103      	bne.n	8003c12 <_raise_r+0x42>
 8003c0a:	2316      	movs	r3, #22
 8003c0c:	6003      	str	r3, [r0, #0]
 8003c0e:	2001      	movs	r0, #1
 8003c10:	e7e7      	b.n	8003be2 <_raise_r+0x12>
 8003c12:	2400      	movs	r4, #0
 8003c14:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8003c18:	4628      	mov	r0, r5
 8003c1a:	4798      	blx	r3
 8003c1c:	2000      	movs	r0, #0
 8003c1e:	e7e0      	b.n	8003be2 <_raise_r+0x12>

08003c20 <raise>:
 8003c20:	4b02      	ldr	r3, [pc, #8]	; (8003c2c <raise+0xc>)
 8003c22:	4601      	mov	r1, r0
 8003c24:	6818      	ldr	r0, [r3, #0]
 8003c26:	f7ff bfd3 	b.w	8003bd0 <_raise_r>
 8003c2a:	bf00      	nop
 8003c2c:	20000058 	.word	0x20000058

08003c30 <_kill_r>:
 8003c30:	b538      	push	{r3, r4, r5, lr}
 8003c32:	4d07      	ldr	r5, [pc, #28]	; (8003c50 <_kill_r+0x20>)
 8003c34:	2300      	movs	r3, #0
 8003c36:	4604      	mov	r4, r0
 8003c38:	4608      	mov	r0, r1
 8003c3a:	4611      	mov	r1, r2
 8003c3c:	602b      	str	r3, [r5, #0]
 8003c3e:	f7fd fa18 	bl	8001072 <_kill>
 8003c42:	1c43      	adds	r3, r0, #1
 8003c44:	d102      	bne.n	8003c4c <_kill_r+0x1c>
 8003c46:	682b      	ldr	r3, [r5, #0]
 8003c48:	b103      	cbz	r3, 8003c4c <_kill_r+0x1c>
 8003c4a:	6023      	str	r3, [r4, #0]
 8003c4c:	bd38      	pop	{r3, r4, r5, pc}
 8003c4e:	bf00      	nop
 8003c50:	20000330 	.word	0x20000330

08003c54 <_getpid_r>:
 8003c54:	f7fd ba05 	b.w	8001062 <_getpid>

08003c58 <_init>:
 8003c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c5a:	bf00      	nop
 8003c5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c5e:	bc08      	pop	{r3}
 8003c60:	469e      	mov	lr, r3
 8003c62:	4770      	bx	lr

08003c64 <_fini>:
 8003c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c66:	bf00      	nop
 8003c68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c6a:	bc08      	pop	{r3}
 8003c6c:	469e      	mov	lr, r3
 8003c6e:	4770      	bx	lr
