
smart_stove_monitor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000415c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006ec  080042f0  080042f0  000142f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080049dc  080049dc  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  080049dc  080049dc  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080049dc  080049dc  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080049dc  080049dc  000149dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080049e0  080049e0  000149e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  080049e4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000201c8  2**0
                  CONTENTS
 10 .bss          0000016c  200001c8  200001c8  000201c8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000334  20000334  000201c8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
 14 .debug_info   000023a1  00000000  00000000  0002023b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000a65  00000000  00000000  000225dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000240  00000000  00000000  00023048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000187  00000000  00000000  00023288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0000c4d8  00000000  00000000  0002340f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000031c2  00000000  00000000  0002f8e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0003c506  00000000  00000000  00032aa9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000018f8  00000000  00000000  0006efb0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006c  00000000  00000000  000708a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001c8 	.word	0x200001c8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080042d4 	.word	0x080042d4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001cc 	.word	0x200001cc
 80001cc:	080042d4 	.word	0x080042d4

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <ADC_init>:
#include <stdint.h>
#include <stdio.h>


// ADC initialization
void ADC_init(void) {
 8000ba8:	b480      	push	{r7}
 8000baa:	af00      	add	r7, sp, #0

    // Enable ADC1 clock
    RCC -> APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000bac:	4b0f      	ldr	r3, [pc, #60]	; (8000bec <ADC_init+0x44>)
 8000bae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000bb0:	4a0e      	ldr	r2, [pc, #56]	; (8000bec <ADC_init+0x44>)
 8000bb2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000bb6:	6453      	str	r3, [r2, #68]	; 0x44

    // Set regular channel sequence length to 1 conversion since we only have 1 sensor
    ADC1 -> SQR1 &= ~ADC_SQR1_L;
 8000bb8:	4b0d      	ldr	r3, [pc, #52]	; (8000bf0 <ADC_init+0x48>)
 8000bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000bbc:	4a0c      	ldr	r2, [pc, #48]	; (8000bf0 <ADC_init+0x48>)
 8000bbe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000bc2:	62d3      	str	r3, [r2, #44]	; 0x2c

    // Set ADC1's 1st conversion in regular sequence to ch4 (mapped to PA4)
    ADC1 -> SQR3 = 4;
 8000bc4:	4b0a      	ldr	r3, [pc, #40]	; (8000bf0 <ADC_init+0x48>)
 8000bc6:	2204      	movs	r2, #4
 8000bc8:	635a      	str	r2, [r3, #52]	; 0x34

    // Set ch4 sample time to be 84 cycles
    ADC1 -> SMPR2 |= ADC_SMPR2_SMP4_2;
 8000bca:	4b09      	ldr	r3, [pc, #36]	; (8000bf0 <ADC_init+0x48>)
 8000bcc:	691b      	ldr	r3, [r3, #16]
 8000bce:	4a08      	ldr	r2, [pc, #32]	; (8000bf0 <ADC_init+0x48>)
 8000bd0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000bd4:	6113      	str	r3, [r2, #16]

    // Enable ADC1
    ADC1 -> CR2 |= ADC_CR2_ADON;
 8000bd6:	4b06      	ldr	r3, [pc, #24]	; (8000bf0 <ADC_init+0x48>)
 8000bd8:	689b      	ldr	r3, [r3, #8]
 8000bda:	4a05      	ldr	r2, [pc, #20]	; (8000bf0 <ADC_init+0x48>)
 8000bdc:	f043 0301 	orr.w	r3, r3, #1
 8000be0:	6093      	str	r3, [r2, #8]
}
 8000be2:	bf00      	nop
 8000be4:	46bd      	mov	sp, r7
 8000be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bea:	4770      	bx	lr
 8000bec:	40023800 	.word	0x40023800
 8000bf0:	40012000 	.word	0x40012000

08000bf4 <start_ADC_conversion>:

// Start ADC Conversion
void start_ADC_conversion(void) {
 8000bf4:	b480      	push	{r7}
 8000bf6:	af00      	add	r7, sp, #0

    // Continuous conversion mode
    ADC1 -> CR2 |= ADC_CR2_CONT;
 8000bf8:	4b08      	ldr	r3, [pc, #32]	; (8000c1c <start_ADC_conversion+0x28>)
 8000bfa:	689b      	ldr	r3, [r3, #8]
 8000bfc:	4a07      	ldr	r2, [pc, #28]	; (8000c1c <start_ADC_conversion+0x28>)
 8000bfe:	f043 0302 	orr.w	r3, r3, #2
 8000c02:	6093      	str	r3, [r2, #8]

    // Start conversion of regular channels
    ADC1 -> CR2 |=  ADC_CR2_SWSTART;
 8000c04:	4b05      	ldr	r3, [pc, #20]	; (8000c1c <start_ADC_conversion+0x28>)
 8000c06:	689b      	ldr	r3, [r3, #8]
 8000c08:	4a04      	ldr	r2, [pc, #16]	; (8000c1c <start_ADC_conversion+0x28>)
 8000c0a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000c0e:	6093      	str	r3, [r2, #8]

}
 8000c10:	bf00      	nop
 8000c12:	46bd      	mov	sp, r7
 8000c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c18:	4770      	bx	lr
 8000c1a:	bf00      	nop
 8000c1c:	40012000 	.word	0x40012000

08000c20 <ADC_IRQHandler>:
    // Enable ADC interrupt in NVIC
    NVIC_EnableIRQ(ADC_IRQn);
}

// ADC interrupt handler
void ADC_IRQHandler(void) {
 8000c20:	b580      	push	{r7, lr}
 8000c22:	b082      	sub	sp, #8
 8000c24:	af00      	add	r7, sp, #0

    // Check if AWD flag is set
    if (ADC1 -> SR & ADC_SR_AWD) {
 8000c26:	4b1f      	ldr	r3, [pc, #124]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	f003 0301 	and.w	r3, r3, #1
 8000c2e:	2b00      	cmp	r3, #0
 8000c30:	d027      	beq.n	8000c82 <ADC_IRQHandler+0x62>

    	// For debug purpose
    	//printf("SR value before clearing AWD flag: ADC1->SR = %lu\n", ADC1->SR);

        // Clear the flag before handling the event
        ADC1 -> SR &= ~ADC_SR_AWD;
 8000c32:	4b1c      	ldr	r3, [pc, #112]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c34:	681b      	ldr	r3, [r3, #0]
 8000c36:	4a1b      	ldr	r2, [pc, #108]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c38:	f023 0301 	bic.w	r3, r3, #1
 8000c3c:	6013      	str	r3, [r2, #0]
        // For debug purpose
        //printf("SR value after clearing AWD flag: ADC1->SR = %lu\n", ADC1->SR);

        // If ADC value is outside the threshold: turn on the buzzer & LED
        // Otherwise, ensure buzzer & LED are off state
        uint16_t adc_value = read_ADC();
 8000c3e:	f000 f835 	bl	8000cac <read_ADC>
 8000c42:	4603      	mov	r3, r0
 8000c44:	80fb      	strh	r3, [r7, #6]
        if (adc_value > 1109 || adc_value < 0) {
 8000c46:	88fb      	ldrh	r3, [r7, #6]
 8000c48:	f240 4255 	movw	r2, #1109	; 0x455
 8000c4c:	4293      	cmp	r3, r2
 8000c4e:	d90c      	bls.n	8000c6a <ADC_IRQHandler+0x4a>

        	// Turn on the buzzer connected to PA5
        	GPIOA -> ODR |= GPIO_ODR_ODR_5;
 8000c50:	4b15      	ldr	r3, [pc, #84]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c52:	695b      	ldr	r3, [r3, #20]
 8000c54:	4a14      	ldr	r2, [pc, #80]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c56:	f043 0320 	orr.w	r3, r3, #32
 8000c5a:	6153      	str	r3, [r2, #20]

        	// Turn on the LED connected to PA6
        	GPIOA -> ODR |= GPIO_ODR_ODR_6;
 8000c5c:	4b12      	ldr	r3, [pc, #72]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c5e:	695b      	ldr	r3, [r3, #20]
 8000c60:	4a11      	ldr	r2, [pc, #68]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c66:	6153      	str	r3, [r2, #20]
 8000c68:	e00b      	b.n	8000c82 <ADC_IRQHandler+0x62>
        }
        else {

        	// Turn off the buzzer connected to PA5
        	GPIOA -> ODR &= GPIO_ODR_ODR_5;
 8000c6a:	4b0f      	ldr	r3, [pc, #60]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c6c:	695b      	ldr	r3, [r3, #20]
 8000c6e:	4a0e      	ldr	r2, [pc, #56]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c70:	f003 0320 	and.w	r3, r3, #32
 8000c74:	6153      	str	r3, [r2, #20]

        	// Turn off the LED connected to PA6
        	GPIOA -> ODR &= GPIO_ODR_ODR_6;
 8000c76:	4b0c      	ldr	r3, [pc, #48]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c78:	695b      	ldr	r3, [r3, #20]
 8000c7a:	4a0b      	ldr	r2, [pc, #44]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000c80:	6153      	str	r3, [r2, #20]
        // For debug purpose
        //printf("ADC value when interrupt is triggered. ADC Value: %lu\n", ADC1->DR);
    }

    // Check if the EOC interrupt flag is set
    if (ADC1->SR & ADC_SR_EOC) {
 8000c82:	4b08      	ldr	r3, [pc, #32]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c84:	681b      	ldr	r3, [r3, #0]
 8000c86:	f003 0302 	and.w	r3, r3, #2
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	d005      	beq.n	8000c9a <ADC_IRQHandler+0x7a>

        // Clear the EOC interrupt flag
        ADC1->SR &= ~ADC_SR_EOC;
 8000c8e:	4b05      	ldr	r3, [pc, #20]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c90:	681b      	ldr	r3, [r3, #0]
 8000c92:	4a04      	ldr	r2, [pc, #16]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c94:	f023 0302 	bic.w	r3, r3, #2
 8000c98:	6013      	str	r3, [r2, #0]

        // No specific handling
    }
}
 8000c9a:	bf00      	nop
 8000c9c:	3708      	adds	r7, #8
 8000c9e:	46bd      	mov	sp, r7
 8000ca0:	bd80      	pop	{r7, pc}
 8000ca2:	bf00      	nop
 8000ca4:	40012000 	.word	0x40012000
 8000ca8:	40020000 	.word	0x40020000

08000cac <read_ADC>:


// Read ADC value
uint16_t read_ADC(void) {
 8000cac:	b480      	push	{r7}
 8000cae:	af00      	add	r7, sp, #0

    // Keep looping till conversion completes on regular channel
    while (!(ADC1->SR & ADC_SR_EOC));
 8000cb0:	bf00      	nop
 8000cb2:	4b07      	ldr	r3, [pc, #28]	; (8000cd0 <read_ADC+0x24>)
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	f003 0302 	and.w	r3, r3, #2
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d0f9      	beq.n	8000cb2 <read_ADC+0x6>

    // Return ADC value
    return ADC1->DR;
 8000cbe:	4b04      	ldr	r3, [pc, #16]	; (8000cd0 <read_ADC+0x24>)
 8000cc0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000cc2:	b29b      	uxth	r3, r3

}
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop
 8000cd0:	40012000 	.word	0x40012000

08000cd4 <read_temp>:



// Read temperature
int read_temp(void) {
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	b084      	sub	sp, #16
 8000cd8:	af00      	add	r7, sp, #0
    uint16_t adc_value = read_ADC();
 8000cda:	f7ff ffe7 	bl	8000cac <read_ADC>
 8000cde:	4603      	mov	r3, r0
 8000ce0:	81fb      	strh	r3, [r7, #14]
    int voltage_mv = adc_value * 3000 / 4095;
 8000ce2:	89fb      	ldrh	r3, [r7, #14]
 8000ce4:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000ce8:	fb02 f303 	mul.w	r3, r2, r3
 8000cec:	4a0b      	ldr	r2, [pc, #44]	; (8000d1c <read_temp+0x48>)
 8000cee:	fb82 1203 	smull	r1, r2, r2, r3
 8000cf2:	441a      	add	r2, r3
 8000cf4:	12d2      	asrs	r2, r2, #11
 8000cf6:	17db      	asrs	r3, r3, #31
 8000cf8:	1ad3      	subs	r3, r2, r3
 8000cfa:	60bb      	str	r3, [r7, #8]
    int temp_celsius = (voltage_mv - 500) / 10;
 8000cfc:	68bb      	ldr	r3, [r7, #8]
 8000cfe:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8000d02:	4a07      	ldr	r2, [pc, #28]	; (8000d20 <read_temp+0x4c>)
 8000d04:	fb82 1203 	smull	r1, r2, r2, r3
 8000d08:	1092      	asrs	r2, r2, #2
 8000d0a:	17db      	asrs	r3, r3, #31
 8000d0c:	1ad3      	subs	r3, r2, r3
 8000d0e:	607b      	str	r3, [r7, #4]
    return temp_celsius;
 8000d10:	687b      	ldr	r3, [r7, #4]
}
 8000d12:	4618      	mov	r0, r3
 8000d14:	3710      	adds	r7, #16
 8000d16:	46bd      	mov	sp, r7
 8000d18:	bd80      	pop	{r7, pc}
 8000d1a:	bf00      	nop
 8000d1c:	80080081 	.word	0x80080081
 8000d20:	66666667 	.word	0x66666667

08000d24 <GPIO_init>:
#include "gpio.h"



// GPIO initialization
void GPIO_init(void) {
 8000d24:	b480      	push	{r7}
 8000d26:	af00      	add	r7, sp, #0

    // Enable clock for GPIOA
    RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000d28:	4b3b      	ldr	r3, [pc, #236]	; (8000e18 <GPIO_init+0xf4>)
 8000d2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d2c:	4a3a      	ldr	r2, [pc, #232]	; (8000e18 <GPIO_init+0xf4>)
 8000d2e:	f043 0301 	orr.w	r3, r3, #1
 8000d32:	6313      	str	r3, [r2, #48]	; 0x30

    // Set PA0 as input for motion sensor: bits 1:0 of MODER set to 00
    GPIOA -> MODER &= ~(GPIO_MODER_MODER0);
 8000d34:	4b39      	ldr	r3, [pc, #228]	; (8000e1c <GPIO_init+0xf8>)
 8000d36:	681b      	ldr	r3, [r3, #0]
 8000d38:	4a38      	ldr	r2, [pc, #224]	; (8000e1c <GPIO_init+0xf8>)
 8000d3a:	f023 0303 	bic.w	r3, r3, #3
 8000d3e:	6013      	str	r3, [r2, #0]

    // Set PA1 as output for LED: bits 3:2 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER1_0;
 8000d40:	4b36      	ldr	r3, [pc, #216]	; (8000e1c <GPIO_init+0xf8>)
 8000d42:	681b      	ldr	r3, [r3, #0]
 8000d44:	4a35      	ldr	r2, [pc, #212]	; (8000e1c <GPIO_init+0xf8>)
 8000d46:	f043 0304 	orr.w	r3, r3, #4
 8000d4a:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER1_1);
 8000d4c:	4b33      	ldr	r3, [pc, #204]	; (8000e1c <GPIO_init+0xf8>)
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	4a32      	ldr	r2, [pc, #200]	; (8000e1c <GPIO_init+0xf8>)
 8000d52:	f023 0308 	bic.w	r3, r3, #8
 8000d56:	6013      	str	r3, [r2, #0]

    // Set PA4 as analog input for temp sensor: bits 9:8 set to 11
    GPIOA -> MODER |= GPIO_MODER_MODER4;
 8000d58:	4b30      	ldr	r3, [pc, #192]	; (8000e1c <GPIO_init+0xf8>)
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	4a2f      	ldr	r2, [pc, #188]	; (8000e1c <GPIO_init+0xf8>)
 8000d5e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000d62:	6013      	str	r3, [r2, #0]

    // Set PA5 as output for buzzer: bits 11:10 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER5_0;
 8000d64:	4b2d      	ldr	r3, [pc, #180]	; (8000e1c <GPIO_init+0xf8>)
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	4a2c      	ldr	r2, [pc, #176]	; (8000e1c <GPIO_init+0xf8>)
 8000d6a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000d6e:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER5_1);
 8000d70:	4b2a      	ldr	r3, [pc, #168]	; (8000e1c <GPIO_init+0xf8>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	4a29      	ldr	r2, [pc, #164]	; (8000e1c <GPIO_init+0xf8>)
 8000d76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000d7a:	6013      	str	r3, [r2, #0]

    // Set PA6 as output for debug LED: bits 13:12 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER6_0;
 8000d7c:	4b27      	ldr	r3, [pc, #156]	; (8000e1c <GPIO_init+0xf8>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	4a26      	ldr	r2, [pc, #152]	; (8000e1c <GPIO_init+0xf8>)
 8000d82:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000d86:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER6_1);
 8000d88:	4b24      	ldr	r3, [pc, #144]	; (8000e1c <GPIO_init+0xf8>)
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	4a23      	ldr	r2, [pc, #140]	; (8000e1c <GPIO_init+0xf8>)
 8000d8e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000d92:	6013      	str	r3, [r2, #0]

    //-----------------------------I2C CONFIG--------------------------------

    // Enable clock for I2C1
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000d94:	4b20      	ldr	r3, [pc, #128]	; (8000e18 <GPIO_init+0xf4>)
 8000d96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d98:	4a1f      	ldr	r2, [pc, #124]	; (8000e18 <GPIO_init+0xf4>)
 8000d9a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000d9e:	6413      	str	r3, [r2, #64]	; 0x40

    // Enable clock for GPIOB
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000da0:	4b1d      	ldr	r3, [pc, #116]	; (8000e18 <GPIO_init+0xf4>)
 8000da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000da4:	4a1c      	ldr	r2, [pc, #112]	; (8000e18 <GPIO_init+0xf4>)
 8000da6:	f043 0302 	orr.w	r3, r3, #2
 8000daa:	6313      	str	r3, [r2, #48]	; 0x30

    // Set PB6 & PB7 to alternate function (AF) Mode
    GPIOB -> MODER &= ~(GPIO_MODER_MODER6);
 8000dac:	4b1c      	ldr	r3, [pc, #112]	; (8000e20 <GPIO_init+0xfc>)
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	4a1b      	ldr	r2, [pc, #108]	; (8000e20 <GPIO_init+0xfc>)
 8000db2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000db6:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER |= GPIO_MODER_MODER6_1;
 8000db8:	4b19      	ldr	r3, [pc, #100]	; (8000e20 <GPIO_init+0xfc>)
 8000dba:	681b      	ldr	r3, [r3, #0]
 8000dbc:	4a18      	ldr	r2, [pc, #96]	; (8000e20 <GPIO_init+0xfc>)
 8000dbe:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000dc2:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER &= ~(GPIO_MODER_MODER7);
 8000dc4:	4b16      	ldr	r3, [pc, #88]	; (8000e20 <GPIO_init+0xfc>)
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	4a15      	ldr	r2, [pc, #84]	; (8000e20 <GPIO_init+0xfc>)
 8000dca:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000dce:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER |= GPIO_MODER_MODER7_1;
 8000dd0:	4b13      	ldr	r3, [pc, #76]	; (8000e20 <GPIO_init+0xfc>)
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	4a12      	ldr	r2, [pc, #72]	; (8000e20 <GPIO_init+0xfc>)
 8000dd6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000dda:	6013      	str	r3, [r2, #0]

    // Set PB6 to AF4 (SCL) and PB7 to AF4 (SDA)
    GPIOB -> AFR[0] |= (4 << 24)| (4 << 28);
 8000ddc:	4b10      	ldr	r3, [pc, #64]	; (8000e20 <GPIO_init+0xfc>)
 8000dde:	6a1b      	ldr	r3, [r3, #32]
 8000de0:	4a0f      	ldr	r2, [pc, #60]	; (8000e20 <GPIO_init+0xfc>)
 8000de2:	f043 4388 	orr.w	r3, r3, #1140850688	; 0x44000000
 8000de6:	6213      	str	r3, [r2, #32]

    // Set PB6 & PB7 output type to be open-drain
    GPIOB->OTYPER |= (GPIO_OTYPER_OT_6 | GPIO_OTYPER_OT_7);
 8000de8:	4b0d      	ldr	r3, [pc, #52]	; (8000e20 <GPIO_init+0xfc>)
 8000dea:	685b      	ldr	r3, [r3, #4]
 8000dec:	4a0c      	ldr	r2, [pc, #48]	; (8000e20 <GPIO_init+0xfc>)
 8000dee:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8000df2:	6053      	str	r3, [r2, #4]

    // Enable pull-up resistors for SCL & SDA lines
    GPIOB -> PUPDR &= ~(GPIO_PUPDR_PUPDR6 | GPIO_PUPDR_PUPDR7);
 8000df4:	4b0a      	ldr	r3, [pc, #40]	; (8000e20 <GPIO_init+0xfc>)
 8000df6:	68db      	ldr	r3, [r3, #12]
 8000df8:	4a09      	ldr	r2, [pc, #36]	; (8000e20 <GPIO_init+0xfc>)
 8000dfa:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8000dfe:	60d3      	str	r3, [r2, #12]
    GPIOB -> PUPDR |= GPIO_PUPDR_PUPDR6_0 | GPIO_PUPDR_PUPDR7_0;
 8000e00:	4b07      	ldr	r3, [pc, #28]	; (8000e20 <GPIO_init+0xfc>)
 8000e02:	68db      	ldr	r3, [r3, #12]
 8000e04:	4a06      	ldr	r2, [pc, #24]	; (8000e20 <GPIO_init+0xfc>)
 8000e06:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
 8000e0a:	60d3      	str	r3, [r2, #12]


}
 8000e0c:	bf00      	nop
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e14:	4770      	bx	lr
 8000e16:	bf00      	nop
 8000e18:	40023800 	.word	0x40023800
 8000e1c:	40020000 	.word	0x40020000
 8000e20:	40020400 	.word	0x40020400

08000e24 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000e24:	b480      	push	{r7}
 8000e26:	b083      	sub	sp, #12
 8000e28:	af00      	add	r7, sp, #0
 8000e2a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e2c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e30:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000e34:	f003 0301 	and.w	r3, r3, #1
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	d014      	beq.n	8000e66 <ITM_SendChar+0x42>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000e3c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e40:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000e44:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d00c      	beq.n	8000e66 <ITM_SendChar+0x42>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000e4c:	e001      	b.n	8000e52 <ITM_SendChar+0x2e>
  \brief   No Operation
  \details No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
 8000e4e:	bf00      	nop
}
 8000e50:	bf00      	nop
 8000e52:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	2b00      	cmp	r3, #0
 8000e5a:	d0f8      	beq.n	8000e4e <ITM_SendChar+0x2a>
    {
      __NOP();
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000e5c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e60:	687a      	ldr	r2, [r7, #4]
 8000e62:	b2d2      	uxtb	r2, r2
 8000e64:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000e66:	687b      	ldr	r3, [r7, #4]
}
 8000e68:	4618      	mov	r0, r3
 8000e6a:	370c      	adds	r7, #12
 8000e6c:	46bd      	mov	sp, r7
 8000e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e72:	4770      	bx	lr

08000e74 <timer_delay_ms>:
#include <stdio.h>



// ms delay using timer
void timer_delay_ms(uint32_t delay_ms) {
 8000e74:	b480      	push	{r7}
 8000e76:	b083      	sub	sp, #12
 8000e78:	af00      	add	r7, sp, #0
 8000e7a:	6078      	str	r0, [r7, #4]
    // Enable TIM2 clock
    RCC -> APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000e7c:	4b1a      	ldr	r3, [pc, #104]	; (8000ee8 <timer_delay_ms+0x74>)
 8000e7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e80:	4a19      	ldr	r2, [pc, #100]	; (8000ee8 <timer_delay_ms+0x74>)
 8000e82:	f043 0301 	orr.w	r3, r3, #1
 8000e86:	6413      	str	r3, [r2, #64]	; 0x40

    // Set 1kHz (from 16MHz source) to achieve 1ms for each count
    TIM2 -> PSC = (16000000 / 1000) - 1;
 8000e88:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e8c:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8000e90:	851a      	strh	r2, [r3, #40]	; 0x28

    // Load the desired delay
    TIM2 -> ARR = delay_ms;
 8000e92:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e96:	687b      	ldr	r3, [r7, #4]
 8000e98:	62d3      	str	r3, [r2, #44]	; 0x2c

    // Start counting from 0
    TIM2 -> CNT = 0;
 8000e9a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	625a      	str	r2, [r3, #36]	; 0x24

    // Enable the counter: bit 0 of CR1 is set
    TIM2 -> CR1 |= TIM_CR1_CEN;
 8000ea2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ea6:	881b      	ldrh	r3, [r3, #0]
 8000ea8:	b29b      	uxth	r3, r3
 8000eaa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000eae:	f043 0301 	orr.w	r3, r3, #1
 8000eb2:	b29b      	uxth	r3, r3
 8000eb4:	8013      	strh	r3, [r2, #0]

    // Keep looping while Update Interrupt Flag (UIF) is not set in Status Register (SR)
    while (!(TIM2 -> SR & TIM_SR_UIF)) {}
 8000eb6:	bf00      	nop
 8000eb8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ebc:	8a1b      	ldrh	r3, [r3, #16]
 8000ebe:	b29b      	uxth	r3, r3
 8000ec0:	f003 0301 	and.w	r3, r3, #1
 8000ec4:	2b00      	cmp	r3, #0
 8000ec6:	d0f7      	beq.n	8000eb8 <timer_delay_ms+0x44>

    // Clear UIF after it is set
    TIM2 -> SR &= ~(TIM_SR_UIF);
 8000ec8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ecc:	8a1b      	ldrh	r3, [r3, #16]
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000ed4:	f023 0301 	bic.w	r3, r3, #1
 8000ed8:	b29b      	uxth	r3, r3
 8000eda:	8213      	strh	r3, [r2, #16]
}
 8000edc:	bf00      	nop
 8000ede:	370c      	adds	r7, #12
 8000ee0:	46bd      	mov	sp, r7
 8000ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee6:	4770      	bx	lr
 8000ee8:	40023800 	.word	0x40023800

08000eec <_write>:




// Redirect printf to ITM
int _write(int file, char *ptr, int len) {
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b086      	sub	sp, #24
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	60f8      	str	r0, [r7, #12]
 8000ef4:	60b9      	str	r1, [r7, #8]
 8000ef6:	607a      	str	r2, [r7, #4]

    for (int i = 0; i < len; i++) {
 8000ef8:	2300      	movs	r3, #0
 8000efa:	617b      	str	r3, [r7, #20]
 8000efc:	e009      	b.n	8000f12 <_write+0x26>

        ITM_SendChar(*ptr++);
 8000efe:	68bb      	ldr	r3, [r7, #8]
 8000f00:	1c5a      	adds	r2, r3, #1
 8000f02:	60ba      	str	r2, [r7, #8]
 8000f04:	781b      	ldrb	r3, [r3, #0]
 8000f06:	4618      	mov	r0, r3
 8000f08:	f7ff ff8c 	bl	8000e24 <ITM_SendChar>
    for (int i = 0; i < len; i++) {
 8000f0c:	697b      	ldr	r3, [r7, #20]
 8000f0e:	3301      	adds	r3, #1
 8000f10:	617b      	str	r3, [r7, #20]
 8000f12:	697a      	ldr	r2, [r7, #20]
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	429a      	cmp	r2, r3
 8000f18:	dbf1      	blt.n	8000efe <_write+0x12>
    }

    return len;
 8000f1a:	687b      	ldr	r3, [r7, #4]
}
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	3718      	adds	r7, #24
 8000f20:	46bd      	mov	sp, r7
 8000f22:	bd80      	pop	{r7, pc}

08000f24 <format_temp_str>:




void format_temp_str(int temp, char *str) {
 8000f24:	b580      	push	{r7, lr}
 8000f26:	b082      	sub	sp, #8
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	6078      	str	r0, [r7, #4]
 8000f2c:	6039      	str	r1, [r7, #0]
    sprintf(str, " %d C", temp);
 8000f2e:	687a      	ldr	r2, [r7, #4]
 8000f30:	4903      	ldr	r1, [pc, #12]	; (8000f40 <format_temp_str+0x1c>)
 8000f32:	6838      	ldr	r0, [r7, #0]
 8000f34:	f000 ff42 	bl	8001dbc <siprintf>
}
 8000f38:	bf00      	nop
 8000f3a:	3708      	adds	r7, #8
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bd80      	pop	{r7, pc}
 8000f40:	080042f0 	.word	0x080042f0

08000f44 <I2C_init>:
#include <stdint.h>
#include <stdio.h>
#define TIMEOUT 100000


void I2C_init(void) {
 8000f44:	b480      	push	{r7}
 8000f46:	af00      	add	r7, sp, #0

    // Reset I2C1
    RCC->APB1RSTR |= RCC_APB1RSTR_I2C1RST;
 8000f48:	4b14      	ldr	r3, [pc, #80]	; (8000f9c <I2C_init+0x58>)
 8000f4a:	6a1b      	ldr	r3, [r3, #32]
 8000f4c:	4a13      	ldr	r2, [pc, #76]	; (8000f9c <I2C_init+0x58>)
 8000f4e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000f52:	6213      	str	r3, [r2, #32]
    RCC->APB1RSTR &= ~RCC_APB1RSTR_I2C1RST;
 8000f54:	4b11      	ldr	r3, [pc, #68]	; (8000f9c <I2C_init+0x58>)
 8000f56:	6a1b      	ldr	r3, [r3, #32]
 8000f58:	4a10      	ldr	r2, [pc, #64]	; (8000f9c <I2C_init+0x58>)
 8000f5a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8000f5e:	6213      	str	r3, [r2, #32]

    // Set the peripheral clock frequency to be the default 16 MHz
    I2C1 -> CR2 = 16;
 8000f60:	4b0f      	ldr	r3, [pc, #60]	; (8000fa0 <I2C_init+0x5c>)
 8000f62:	2210      	movs	r2, #16
 8000f64:	809a      	strh	r2, [r3, #4]

    // Set SCL frequency to be 100 kHz (Sm mode)
    I2C1 -> CCR = 80;
 8000f66:	4b0e      	ldr	r3, [pc, #56]	; (8000fa0 <I2C_init+0x5c>)
 8000f68:	2250      	movs	r2, #80	; 0x50
 8000f6a:	839a      	strh	r2, [r3, #28]

    // Set max rise time
    I2C1 -> TRISE = 17;
 8000f6c:	4b0c      	ldr	r3, [pc, #48]	; (8000fa0 <I2C_init+0x5c>)
 8000f6e:	2211      	movs	r2, #17
 8000f70:	841a      	strh	r2, [r3, #32]

    // Enable ACK
    I2C1->CR1 |= I2C_CR1_ACK;
 8000f72:	4b0b      	ldr	r3, [pc, #44]	; (8000fa0 <I2C_init+0x5c>)
 8000f74:	881b      	ldrh	r3, [r3, #0]
 8000f76:	b29b      	uxth	r3, r3
 8000f78:	4a09      	ldr	r2, [pc, #36]	; (8000fa0 <I2C_init+0x5c>)
 8000f7a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000f7e:	b29b      	uxth	r3, r3
 8000f80:	8013      	strh	r3, [r2, #0]

    // Enable I2C1
    I2C1->CR1 |= I2C_CR1_PE;
 8000f82:	4b07      	ldr	r3, [pc, #28]	; (8000fa0 <I2C_init+0x5c>)
 8000f84:	881b      	ldrh	r3, [r3, #0]
 8000f86:	b29b      	uxth	r3, r3
 8000f88:	4a05      	ldr	r2, [pc, #20]	; (8000fa0 <I2C_init+0x5c>)
 8000f8a:	f043 0301 	orr.w	r3, r3, #1
 8000f8e:	b29b      	uxth	r3, r3
 8000f90:	8013      	strh	r3, [r2, #0]

}
 8000f92:	bf00      	nop
 8000f94:	46bd      	mov	sp, r7
 8000f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f9a:	4770      	bx	lr
 8000f9c:	40023800 	.word	0x40023800
 8000fa0:	40005400 	.word	0x40005400

08000fa4 <I2C_start>:


// I2C start condition
void I2C_start(void){
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b082      	sub	sp, #8
 8000fa8:	af00      	add	r7, sp, #0

	// Generate a start condition
	I2C1 -> CR1 |= I2C_CR1_START;
 8000faa:	4b12      	ldr	r3, [pc, #72]	; (8000ff4 <I2C_start+0x50>)
 8000fac:	881b      	ldrh	r3, [r3, #0]
 8000fae:	b29b      	uxth	r3, r3
 8000fb0:	4a10      	ldr	r2, [pc, #64]	; (8000ff4 <I2C_start+0x50>)
 8000fb2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000fb6:	b29b      	uxth	r3, r3
 8000fb8:	8013      	strh	r3, [r2, #0]

	// Keep looping till the SB flag is set (i.e. start condition generated)
	uint32_t SB_timeout = TIMEOUT;
 8000fba:	4b0f      	ldr	r3, [pc, #60]	; (8000ff8 <I2C_start+0x54>)
 8000fbc:	607b      	str	r3, [r7, #4]
	while(!(I2C1 -> SR1 & I2C_SR1_SB)){
 8000fbe:	e009      	b.n	8000fd4 <I2C_start+0x30>
		if(--SB_timeout == 0){
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	3b01      	subs	r3, #1
 8000fc4:	607b      	str	r3, [r7, #4]
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d103      	bne.n	8000fd4 <I2C_start+0x30>
			printf("Timeout waiting for SB flag to be set in start condition. \n");
 8000fcc:	480b      	ldr	r0, [pc, #44]	; (8000ffc <I2C_start+0x58>)
 8000fce:	f001 f83d 	bl	800204c <puts>
			return;
 8000fd2:	e00b      	b.n	8000fec <I2C_start+0x48>
	while(!(I2C1 -> SR1 & I2C_SR1_SB)){
 8000fd4:	4b07      	ldr	r3, [pc, #28]	; (8000ff4 <I2C_start+0x50>)
 8000fd6:	8a9b      	ldrh	r3, [r3, #20]
 8000fd8:	b29b      	uxth	r3, r3
 8000fda:	f003 0301 	and.w	r3, r3, #1
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	d0ee      	beq.n	8000fc0 <I2C_start+0x1c>
		}
	}

	// Clear SB flag by reading SR1
	(void)I2C1->SR1;
 8000fe2:	4b04      	ldr	r3, [pc, #16]	; (8000ff4 <I2C_start+0x50>)
 8000fe4:	8a9b      	ldrh	r3, [r3, #20]
	printf("Start condition generated. \n");
 8000fe6:	4806      	ldr	r0, [pc, #24]	; (8001000 <I2C_start+0x5c>)
 8000fe8:	f001 f830 	bl	800204c <puts>

}
 8000fec:	3708      	adds	r7, #8
 8000fee:	46bd      	mov	sp, r7
 8000ff0:	bd80      	pop	{r7, pc}
 8000ff2:	bf00      	nop
 8000ff4:	40005400 	.word	0x40005400
 8000ff8:	000186a0 	.word	0x000186a0
 8000ffc:	080042f8 	.word	0x080042f8
 8001000:	08004334 	.word	0x08004334

08001004 <I2C_stop>:

// I2C stop condition
void I2C_stop(void){
 8001004:	b580      	push	{r7, lr}
 8001006:	af00      	add	r7, sp, #0

	// Generate a stop condition
	I2C1 -> CR1 |= I2C_CR1_STOP;
 8001008:	4b06      	ldr	r3, [pc, #24]	; (8001024 <I2C_stop+0x20>)
 800100a:	881b      	ldrh	r3, [r3, #0]
 800100c:	b29b      	uxth	r3, r3
 800100e:	4a05      	ldr	r2, [pc, #20]	; (8001024 <I2C_stop+0x20>)
 8001010:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001014:	b29b      	uxth	r3, r3
 8001016:	8013      	strh	r3, [r2, #0]
	printf("Stop condition generated. \n");
 8001018:	4803      	ldr	r0, [pc, #12]	; (8001028 <I2C_stop+0x24>)
 800101a:	f001 f817 	bl	800204c <puts>

}
 800101e:	bf00      	nop
 8001020:	bd80      	pop	{r7, pc}
 8001022:	bf00      	nop
 8001024:	40005400 	.word	0x40005400
 8001028:	08004350 	.word	0x08004350

0800102c <I2C_write_address>:

// I2C 7-bit address transmission
void I2C_write_address(uint8_t address){
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	4603      	mov	r3, r0
 8001034:	71fb      	strb	r3, [r7, #7]

	uint8_t slave_addr = address << 1;
 8001036:	79fb      	ldrb	r3, [r7, #7]
 8001038:	005b      	lsls	r3, r3, #1
 800103a:	72fb      	strb	r3, [r7, #11]
	slave_addr &= ~(1); // master write to slave: lsb = 0
 800103c:	7afb      	ldrb	r3, [r7, #11]
 800103e:	f023 0301 	bic.w	r3, r3, #1
 8001042:	72fb      	strb	r3, [r7, #11]

	// Write DR register with the slave address
	I2C1 -> DR = slave_addr;
 8001044:	4b10      	ldr	r3, [pc, #64]	; (8001088 <I2C_write_address+0x5c>)
 8001046:	7afa      	ldrb	r2, [r7, #11]
 8001048:	b292      	uxth	r2, r2
 800104a:	821a      	strh	r2, [r3, #16]

	uint32_t ADDR_timeout = TIMEOUT;
 800104c:	4b0f      	ldr	r3, [pc, #60]	; (800108c <I2C_write_address+0x60>)
 800104e:	60fb      	str	r3, [r7, #12]

	// Keep looping till ADDR flag is set (i.e. address sent)
	while(!(I2C1 -> SR1 & I2C_SR1_ADDR)) {
 8001050:	e009      	b.n	8001066 <I2C_write_address+0x3a>

		if (--ADDR_timeout == 0){
 8001052:	68fb      	ldr	r3, [r7, #12]
 8001054:	3b01      	subs	r3, #1
 8001056:	60fb      	str	r3, [r7, #12]
 8001058:	68fb      	ldr	r3, [r7, #12]
 800105a:	2b00      	cmp	r3, #0
 800105c:	d103      	bne.n	8001066 <I2C_write_address+0x3a>
			printf("Timeout waiting for ADDR flag to be set in address transmission. \n");
 800105e:	480c      	ldr	r0, [pc, #48]	; (8001090 <I2C_write_address+0x64>)
 8001060:	f000 fff4 	bl	800204c <puts>
			return;
 8001064:	e00d      	b.n	8001082 <I2C_write_address+0x56>
	while(!(I2C1 -> SR1 & I2C_SR1_ADDR)) {
 8001066:	4b08      	ldr	r3, [pc, #32]	; (8001088 <I2C_write_address+0x5c>)
 8001068:	8a9b      	ldrh	r3, [r3, #20]
 800106a:	b29b      	uxth	r3, r3
 800106c:	f003 0302 	and.w	r3, r3, #2
 8001070:	2b00      	cmp	r3, #0
 8001072:	d0ee      	beq.n	8001052 <I2C_write_address+0x26>
			}
		}

	// Clear ADDR flag by reading SR1 and SR2
	(void)I2C1->SR1;
 8001074:	4b04      	ldr	r3, [pc, #16]	; (8001088 <I2C_write_address+0x5c>)
 8001076:	8a9b      	ldrh	r3, [r3, #20]
	(void)I2C1->SR2;
 8001078:	4b03      	ldr	r3, [pc, #12]	; (8001088 <I2C_write_address+0x5c>)
 800107a:	8b1b      	ldrh	r3, [r3, #24]

	printf("I2C address sent\n");
 800107c:	4805      	ldr	r0, [pc, #20]	; (8001094 <I2C_write_address+0x68>)
 800107e:	f000 ffe5 	bl	800204c <puts>

}
 8001082:	3710      	adds	r7, #16
 8001084:	46bd      	mov	sp, r7
 8001086:	bd80      	pop	{r7, pc}
 8001088:	40005400 	.word	0x40005400
 800108c:	000186a0 	.word	0x000186a0
 8001090:	0800436c 	.word	0x0800436c
 8001094:	080043b0 	.word	0x080043b0

08001098 <I2C_write_data>:


// I2C data transmission
void I2C_write_data(uint8_t data){
 8001098:	b580      	push	{r7, lr}
 800109a:	b084      	sub	sp, #16
 800109c:	af00      	add	r7, sp, #0
 800109e:	4603      	mov	r3, r0
 80010a0:	71fb      	strb	r3, [r7, #7]

	uint32_t TXE_timeout = TIMEOUT;
 80010a2:	4b1a      	ldr	r3, [pc, #104]	; (800110c <I2C_write_data+0x74>)
 80010a4:	60fb      	str	r3, [r7, #12]
	// Keep looping till TXE flag is set (i.e. data register is empty)
	while(!(I2C1 -> SR1 & I2C_SR1_TXE)){
 80010a6:	e009      	b.n	80010bc <I2C_write_data+0x24>

		if(--TXE_timeout == 0){
 80010a8:	68fb      	ldr	r3, [r7, #12]
 80010aa:	3b01      	subs	r3, #1
 80010ac:	60fb      	str	r3, [r7, #12]
 80010ae:	68fb      	ldr	r3, [r7, #12]
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d103      	bne.n	80010bc <I2C_write_data+0x24>
			printf("Timeout waiting for TXE flag to be set in data transmission. \n");
 80010b4:	4816      	ldr	r0, [pc, #88]	; (8001110 <I2C_write_data+0x78>)
 80010b6:	f000 ffc9 	bl	800204c <puts>
			return;
 80010ba:	e023      	b.n	8001104 <I2C_write_data+0x6c>
	while(!(I2C1 -> SR1 & I2C_SR1_TXE)){
 80010bc:	4b15      	ldr	r3, [pc, #84]	; (8001114 <I2C_write_data+0x7c>)
 80010be:	8a9b      	ldrh	r3, [r3, #20]
 80010c0:	b29b      	uxth	r3, r3
 80010c2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d0ee      	beq.n	80010a8 <I2C_write_data+0x10>
		}
	}

	// Write data (TXE flag is cleared by writing DR register)
	I2C1 -> DR = data;
 80010ca:	4b12      	ldr	r3, [pc, #72]	; (8001114 <I2C_write_data+0x7c>)
 80010cc:	79fa      	ldrb	r2, [r7, #7]
 80010ce:	b292      	uxth	r2, r2
 80010d0:	821a      	strh	r2, [r3, #16]

	uint32_t BTF_timeout = TIMEOUT;
 80010d2:	4b0e      	ldr	r3, [pc, #56]	; (800110c <I2C_write_data+0x74>)
 80010d4:	60bb      	str	r3, [r7, #8]
	// Keep looping till BTF flag is set (i.e. byte transfer is finished)
	while(!(I2C1 -> SR1 & I2C_SR1_BTF)){
 80010d6:	e009      	b.n	80010ec <I2C_write_data+0x54>

		if (--BTF_timeout == 0){
 80010d8:	68bb      	ldr	r3, [r7, #8]
 80010da:	3b01      	subs	r3, #1
 80010dc:	60bb      	str	r3, [r7, #8]
 80010de:	68bb      	ldr	r3, [r7, #8]
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	d103      	bne.n	80010ec <I2C_write_data+0x54>
			printf("Timeout waiting for BEF flag to be set in data transmission. \n");
 80010e4:	480c      	ldr	r0, [pc, #48]	; (8001118 <I2C_write_data+0x80>)
 80010e6:	f000 ffb1 	bl	800204c <puts>
			return;
 80010ea:	e00b      	b.n	8001104 <I2C_write_data+0x6c>
	while(!(I2C1 -> SR1 & I2C_SR1_BTF)){
 80010ec:	4b09      	ldr	r3, [pc, #36]	; (8001114 <I2C_write_data+0x7c>)
 80010ee:	8a9b      	ldrh	r3, [r3, #20]
 80010f0:	b29b      	uxth	r3, r3
 80010f2:	f003 0304 	and.w	r3, r3, #4
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d0ee      	beq.n	80010d8 <I2C_write_data+0x40>
		}
	}

	printf("I2C data sent: 0x%02X\n", data);
 80010fa:	79fb      	ldrb	r3, [r7, #7]
 80010fc:	4619      	mov	r1, r3
 80010fe:	4807      	ldr	r0, [pc, #28]	; (800111c <I2C_write_data+0x84>)
 8001100:	f000 ff3e 	bl	8001f80 <iprintf>

}
 8001104:	3710      	adds	r7, #16
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	000186a0 	.word	0x000186a0
 8001110:	080043c4 	.word	0x080043c4
 8001114:	40005400 	.word	0x40005400
 8001118:	08004404 	.word	0x08004404
 800111c:	08004444 	.word	0x08004444

08001120 <main>:
#include "i2c.h"
#include "adc.h"
#include "helper.h"
#include "oled.h"

int main(void) {
 8001120:	b580      	push	{r7, lr}
 8001122:	b088      	sub	sp, #32
 8001124:	af00      	add	r7, sp, #0
    // System initialization
    GPIO_init();
 8001126:	f7ff fdfd 	bl	8000d24 <GPIO_init>
    I2C_init();
 800112a:	f7ff ff0b 	bl	8000f44 <I2C_init>
    ADC_init();
 800112e:	f7ff fd3b 	bl	8000ba8 <ADC_init>
    OLED_init();
 8001132:	f000 f85f 	bl	80011f4 <OLED_init>
    start_ADC_conversion();
 8001136:	f7ff fd5d 	bl	8000bf4 <start_ADC_conversion>
    OLED_clear(); // Clear the display at the start
 800113a:	f000 f89b 	bl	8001274 <OLED_clear>

    const char* msg = "Smart Stove Monitor:)";
 800113e:	4b14      	ldr	r3, [pc, #80]	; (8001190 <main+0x70>)
 8001140:	61fb      	str	r3, [r7, #28]
    const char* temp_msg = "Current Temperature:";
 8001142:	4b14      	ldr	r3, [pc, #80]	; (8001194 <main+0x74>)
 8001144:	61bb      	str	r3, [r7, #24]
	//OLED_clear(); // Clear the display before printing new data
	OLED_set_cursor(0, 0);
 8001146:	2100      	movs	r1, #0
 8001148:	2000      	movs	r0, #0
 800114a:	f000 f8a8 	bl	800129e <OLED_set_cursor>
	OLED_print_str(msg);
 800114e:	69f8      	ldr	r0, [r7, #28]
 8001150:	f000 f8cc 	bl	80012ec <OLED_print_str>
	OLED_set_cursor(0, 2);
 8001154:	2102      	movs	r1, #2
 8001156:	2000      	movs	r0, #0
 8001158:	f000 f8a1 	bl	800129e <OLED_set_cursor>
	OLED_print_str(temp_msg);
 800115c:	69b8      	ldr	r0, [r7, #24]
 800115e:	f000 f8c5 	bl	80012ec <OLED_print_str>

    while (1) {

    	int temp = read_temp();
 8001162:	f7ff fdb7 	bl	8000cd4 <read_temp>
 8001166:	6178      	str	r0, [r7, #20]
    	char temp_str[16];
    	format_temp_str(temp, temp_str);
 8001168:	1d3b      	adds	r3, r7, #4
 800116a:	4619      	mov	r1, r3
 800116c:	6978      	ldr	r0, [r7, #20]
 800116e:	f7ff fed9 	bl	8000f24 <format_temp_str>
    	OLED_set_cursor(45, 5);
 8001172:	2105      	movs	r1, #5
 8001174:	202d      	movs	r0, #45	; 0x2d
 8001176:	f000 f892 	bl	800129e <OLED_set_cursor>
    	OLED_clear();
 800117a:	f000 f87b 	bl	8001274 <OLED_clear>
    	OLED_print_str(temp_str);
 800117e:	1d3b      	adds	r3, r7, #4
 8001180:	4618      	mov	r0, r3
 8001182:	f000 f8b3 	bl	80012ec <OLED_print_str>

    	timer_delay_ms(5000);
 8001186:	f241 3088 	movw	r0, #5000	; 0x1388
 800118a:	f7ff fe73 	bl	8000e74 <timer_delay_ms>
    while (1) {
 800118e:	e7e8      	b.n	8001162 <main+0x42>
 8001190:	0800445c 	.word	0x0800445c
 8001194:	08004474 	.word	0x08004474

08001198 <OLED_send_cmd>:

#define OLED_WIDTH 128
#define OLED_HEIGHT 64


void OLED_send_cmd(uint8_t cmd) {
 8001198:	b580      	push	{r7, lr}
 800119a:	b082      	sub	sp, #8
 800119c:	af00      	add	r7, sp, #0
 800119e:	4603      	mov	r3, r0
 80011a0:	71fb      	strb	r3, [r7, #7]
    I2C_start();
 80011a2:	f7ff feff 	bl	8000fa4 <I2C_start>
    I2C_write_address(OLED_ADDRESS);
 80011a6:	203c      	movs	r0, #60	; 0x3c
 80011a8:	f7ff ff40 	bl	800102c <I2C_write_address>
    I2C_write_data(OLED_CMD_BYTE);
 80011ac:	2000      	movs	r0, #0
 80011ae:	f7ff ff73 	bl	8001098 <I2C_write_data>
    I2C_write_data(cmd);
 80011b2:	79fb      	ldrb	r3, [r7, #7]
 80011b4:	4618      	mov	r0, r3
 80011b6:	f7ff ff6f 	bl	8001098 <I2C_write_data>
    I2C_stop();
 80011ba:	f7ff ff23 	bl	8001004 <I2C_stop>
}
 80011be:	bf00      	nop
 80011c0:	3708      	adds	r7, #8
 80011c2:	46bd      	mov	sp, r7
 80011c4:	bd80      	pop	{r7, pc}

080011c6 <OLED_send_data>:

void OLED_send_data(uint8_t data) {
 80011c6:	b580      	push	{r7, lr}
 80011c8:	b082      	sub	sp, #8
 80011ca:	af00      	add	r7, sp, #0
 80011cc:	4603      	mov	r3, r0
 80011ce:	71fb      	strb	r3, [r7, #7]
    I2C_start();
 80011d0:	f7ff fee8 	bl	8000fa4 <I2C_start>
    I2C_write_address(OLED_ADDRESS);
 80011d4:	203c      	movs	r0, #60	; 0x3c
 80011d6:	f7ff ff29 	bl	800102c <I2C_write_address>
    I2C_write_data(OLED_DATA_BYTE);
 80011da:	2040      	movs	r0, #64	; 0x40
 80011dc:	f7ff ff5c 	bl	8001098 <I2C_write_data>
    I2C_write_data(data);
 80011e0:	79fb      	ldrb	r3, [r7, #7]
 80011e2:	4618      	mov	r0, r3
 80011e4:	f7ff ff58 	bl	8001098 <I2C_write_data>
    I2C_stop();
 80011e8:	f7ff ff0c 	bl	8001004 <I2C_stop>
}
 80011ec:	bf00      	nop
 80011ee:	3708      	adds	r7, #8
 80011f0:	46bd      	mov	sp, r7
 80011f2:	bd80      	pop	{r7, pc}

080011f4 <OLED_init>:

void OLED_init(void) {
 80011f4:	b580      	push	{r7, lr}
 80011f6:	af00      	add	r7, sp, #0

    timer_delay_ms(100); // Ensure pwr is stable
 80011f8:	2064      	movs	r0, #100	; 0x64
 80011fa:	f7ff fe3b 	bl	8000e74 <timer_delay_ms>
    OLED_send_cmd(OLED_DISPLAY_OFF);
 80011fe:	20ae      	movs	r0, #174	; 0xae
 8001200:	f7ff ffca 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_MUX_RATIO);
 8001204:	20a8      	movs	r0, #168	; 0xa8
 8001206:	f7ff ffc7 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_MUX_RATIO_DEFAULT); // 1:64
 800120a:	203f      	movs	r0, #63	; 0x3f
 800120c:	f7ff ffc4 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_DISPLAY_OFFSET);
 8001210:	20d3      	movs	r0, #211	; 0xd3
 8001212:	f7ff ffc1 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_DISPLAY_OFFSET_DEFAULT); // No offset
 8001216:	2000      	movs	r0, #0
 8001218:	f7ff ffbe 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_DISPLAY_START_LINE_DEFAULT); // Start line 0
 800121c:	2040      	movs	r0, #64	; 0x40
 800121e:	f7ff ffbb 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_SEGMENT_REMAP_REMAPPED_MODE);
 8001222:	20a1      	movs	r0, #161	; 0xa1
 8001224:	f7ff ffb8 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_COM_OUTPUT_SCAN_DIRECTION_REMAPPED_MODE);
 8001228:	20c8      	movs	r0, #200	; 0xc8
 800122a:	f7ff ffb5 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_COM_PINS_HW_CONFIG);
 800122e:	20da      	movs	r0, #218	; 0xda
 8001230:	f7ff ffb2 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_COM_PINS_HW_CONFIG_SEQUENTIAL);
 8001234:	2012      	movs	r0, #18
 8001236:	f7ff ffaf 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_CONTRAST_CTRL);
 800123a:	2081      	movs	r0, #129	; 0x81
 800123c:	f7ff ffac 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_CONTRAST_CTRL_DEFAULT);
 8001240:	207f      	movs	r0, #127	; 0x7f
 8001242:	f7ff ffa9 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_ENTIRE_DISPLAY_ON);
 8001246:	20a4      	movs	r0, #164	; 0xa4
 8001248:	f7ff ffa6 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_NORMAL_DISPLAY);
 800124c:	20a6      	movs	r0, #166	; 0xa6
 800124e:	f7ff ffa3 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_OSC_FREQ);
 8001252:	20d5      	movs	r0, #213	; 0xd5
 8001254:	f7ff ffa0 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_OSC_FREQ_DEFAULT);
 8001258:	2080      	movs	r0, #128	; 0x80
 800125a:	f7ff ff9d 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_CHARGE_PUMP);
 800125e:	208d      	movs	r0, #141	; 0x8d
 8001260:	f7ff ff9a 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_ENABLE_CHARGE_PUMP);
 8001264:	2014      	movs	r0, #20
 8001266:	f7ff ff97 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_DISPLAY_ON);
 800126a:	20af      	movs	r0, #175	; 0xaf
 800126c:	f7ff ff94 	bl	8001198 <OLED_send_cmd>

}
 8001270:	bf00      	nop
 8001272:	bd80      	pop	{r7, pc}

08001274 <OLED_clear>:

void OLED_clear(void) {
 8001274:	b580      	push	{r7, lr}
 8001276:	b082      	sub	sp, #8
 8001278:	af00      	add	r7, sp, #0
    for (uint16_t i = 0; i < OLED_WIDTH * OLED_HEIGHT / 8; i++) {
 800127a:	2300      	movs	r3, #0
 800127c:	80fb      	strh	r3, [r7, #6]
 800127e:	e005      	b.n	800128c <OLED_clear+0x18>
        OLED_send_data(0x00);
 8001280:	2000      	movs	r0, #0
 8001282:	f7ff ffa0 	bl	80011c6 <OLED_send_data>
    for (uint16_t i = 0; i < OLED_WIDTH * OLED_HEIGHT / 8; i++) {
 8001286:	88fb      	ldrh	r3, [r7, #6]
 8001288:	3301      	adds	r3, #1
 800128a:	80fb      	strh	r3, [r7, #6]
 800128c:	88fb      	ldrh	r3, [r7, #6]
 800128e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001292:	d3f5      	bcc.n	8001280 <OLED_clear+0xc>
    }
}
 8001294:	bf00      	nop
 8001296:	bf00      	nop
 8001298:	3708      	adds	r7, #8
 800129a:	46bd      	mov	sp, r7
 800129c:	bd80      	pop	{r7, pc}

0800129e <OLED_set_cursor>:



void OLED_set_cursor(uint8_t x, uint8_t y) {
 800129e:	b580      	push	{r7, lr}
 80012a0:	b082      	sub	sp, #8
 80012a2:	af00      	add	r7, sp, #0
 80012a4:	4603      	mov	r3, r0
 80012a6:	460a      	mov	r2, r1
 80012a8:	71fb      	strb	r3, [r7, #7]
 80012aa:	4613      	mov	r3, r2
 80012ac:	71bb      	strb	r3, [r7, #6]
    OLED_send_cmd(0xB0 + y);
 80012ae:	79bb      	ldrb	r3, [r7, #6]
 80012b0:	3b50      	subs	r3, #80	; 0x50
 80012b2:	b2db      	uxtb	r3, r3
 80012b4:	4618      	mov	r0, r3
 80012b6:	f7ff ff6f 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(((x & 0xF0) >> 4) | 0x10);
 80012ba:	79fb      	ldrb	r3, [r7, #7]
 80012bc:	091b      	lsrs	r3, r3, #4
 80012be:	b2db      	uxtb	r3, r3
 80012c0:	f043 0310 	orr.w	r3, r3, #16
 80012c4:	b2db      	uxtb	r3, r3
 80012c6:	4618      	mov	r0, r3
 80012c8:	f7ff ff66 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd((x & 0x0F) | 0x01);
 80012cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012d0:	f003 030e 	and.w	r3, r3, #14
 80012d4:	b25b      	sxtb	r3, r3
 80012d6:	f043 0301 	orr.w	r3, r3, #1
 80012da:	b25b      	sxtb	r3, r3
 80012dc:	b2db      	uxtb	r3, r3
 80012de:	4618      	mov	r0, r3
 80012e0:	f7ff ff5a 	bl	8001198 <OLED_send_cmd>
}
 80012e4:	bf00      	nop
 80012e6:	3708      	adds	r7, #8
 80012e8:	46bd      	mov	sp, r7
 80012ea:	bd80      	pop	{r7, pc}

080012ec <OLED_print_str>:



void OLED_print_str(const char* str) {
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b084      	sub	sp, #16
 80012f0:	af00      	add	r7, sp, #0
 80012f2:	6078      	str	r0, [r7, #4]
    while (*str) {
 80012f4:	e01d      	b.n	8001332 <OLED_print_str+0x46>
        for (uint8_t i = 0; i < 5; i++) { // Assuming 5x7 font
 80012f6:	2300      	movs	r3, #0
 80012f8:	73fb      	strb	r3, [r7, #15]
 80012fa:	e011      	b.n	8001320 <OLED_print_str+0x34>
            OLED_send_data(font[*str - 32][i]);
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	781b      	ldrb	r3, [r3, #0]
 8001300:	f1a3 0220 	sub.w	r2, r3, #32
 8001304:	7bf9      	ldrb	r1, [r7, #15]
 8001306:	480f      	ldr	r0, [pc, #60]	; (8001344 <OLED_print_str+0x58>)
 8001308:	4613      	mov	r3, r2
 800130a:	009b      	lsls	r3, r3, #2
 800130c:	4413      	add	r3, r2
 800130e:	4403      	add	r3, r0
 8001310:	440b      	add	r3, r1
 8001312:	781b      	ldrb	r3, [r3, #0]
 8001314:	4618      	mov	r0, r3
 8001316:	f7ff ff56 	bl	80011c6 <OLED_send_data>
        for (uint8_t i = 0; i < 5; i++) { // Assuming 5x7 font
 800131a:	7bfb      	ldrb	r3, [r7, #15]
 800131c:	3301      	adds	r3, #1
 800131e:	73fb      	strb	r3, [r7, #15]
 8001320:	7bfb      	ldrb	r3, [r7, #15]
 8001322:	2b04      	cmp	r3, #4
 8001324:	d9ea      	bls.n	80012fc <OLED_print_str+0x10>
        }
        OLED_send_data(0x00); // Space between characters
 8001326:	2000      	movs	r0, #0
 8001328:	f7ff ff4d 	bl	80011c6 <OLED_send_data>
        str++;
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	3301      	adds	r3, #1
 8001330:	607b      	str	r3, [r7, #4]
    while (*str) {
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	781b      	ldrb	r3, [r3, #0]
 8001336:	2b00      	cmp	r3, #0
 8001338:	d1dd      	bne.n	80012f6 <OLED_print_str+0xa>
    }
}
 800133a:	bf00      	nop
 800133c:	bf00      	nop
 800133e:	3710      	adds	r7, #16
 8001340:	46bd      	mov	sp, r7
 8001342:	bd80      	pop	{r7, pc}
 8001344:	0800448c 	.word	0x0800448c

08001348 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001348:	b480      	push	{r7}
 800134a:	af00      	add	r7, sp, #0
  return 1;
 800134c:	2301      	movs	r3, #1
}
 800134e:	4618      	mov	r0, r3
 8001350:	46bd      	mov	sp, r7
 8001352:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001356:	4770      	bx	lr

08001358 <_kill>:

int _kill(int pid, int sig)
{
 8001358:	b580      	push	{r7, lr}
 800135a:	b082      	sub	sp, #8
 800135c:	af00      	add	r7, sp, #0
 800135e:	6078      	str	r0, [r7, #4]
 8001360:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001362:	f000 fe87 	bl	8002074 <__errno>
 8001366:	4603      	mov	r3, r0
 8001368:	2216      	movs	r2, #22
 800136a:	601a      	str	r2, [r3, #0]
  return -1;
 800136c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8001370:	4618      	mov	r0, r3
 8001372:	3708      	adds	r7, #8
 8001374:	46bd      	mov	sp, r7
 8001376:	bd80      	pop	{r7, pc}

08001378 <_exit>:

void _exit (int status)
{
 8001378:	b580      	push	{r7, lr}
 800137a:	b082      	sub	sp, #8
 800137c:	af00      	add	r7, sp, #0
 800137e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001380:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001384:	6878      	ldr	r0, [r7, #4]
 8001386:	f7ff ffe7 	bl	8001358 <_kill>
  while (1) {}    /* Make sure we hang here */
 800138a:	e7fe      	b.n	800138a <_exit+0x12>

0800138c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800138c:	b580      	push	{r7, lr}
 800138e:	b086      	sub	sp, #24
 8001390:	af00      	add	r7, sp, #0
 8001392:	60f8      	str	r0, [r7, #12]
 8001394:	60b9      	str	r1, [r7, #8]
 8001396:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001398:	2300      	movs	r3, #0
 800139a:	617b      	str	r3, [r7, #20]
 800139c:	e00a      	b.n	80013b4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800139e:	f3af 8000 	nop.w
 80013a2:	4601      	mov	r1, r0
 80013a4:	68bb      	ldr	r3, [r7, #8]
 80013a6:	1c5a      	adds	r2, r3, #1
 80013a8:	60ba      	str	r2, [r7, #8]
 80013aa:	b2ca      	uxtb	r2, r1
 80013ac:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013ae:	697b      	ldr	r3, [r7, #20]
 80013b0:	3301      	adds	r3, #1
 80013b2:	617b      	str	r3, [r7, #20]
 80013b4:	697a      	ldr	r2, [r7, #20]
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	429a      	cmp	r2, r3
 80013ba:	dbf0      	blt.n	800139e <_read+0x12>
  }

  return len;
 80013bc:	687b      	ldr	r3, [r7, #4]
}
 80013be:	4618      	mov	r0, r3
 80013c0:	3718      	adds	r7, #24
 80013c2:	46bd      	mov	sp, r7
 80013c4:	bd80      	pop	{r7, pc}

080013c6 <_close>:
  }
  return len;
}

int _close(int file)
{
 80013c6:	b480      	push	{r7}
 80013c8:	b083      	sub	sp, #12
 80013ca:	af00      	add	r7, sp, #0
 80013cc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80013ce:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80013d2:	4618      	mov	r0, r3
 80013d4:	370c      	adds	r7, #12
 80013d6:	46bd      	mov	sp, r7
 80013d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013dc:	4770      	bx	lr

080013de <_fstat>:


int _fstat(int file, struct stat *st)
{
 80013de:	b480      	push	{r7}
 80013e0:	b083      	sub	sp, #12
 80013e2:	af00      	add	r7, sp, #0
 80013e4:	6078      	str	r0, [r7, #4]
 80013e6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80013e8:	683b      	ldr	r3, [r7, #0]
 80013ea:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80013ee:	605a      	str	r2, [r3, #4]
  return 0;
 80013f0:	2300      	movs	r3, #0
}
 80013f2:	4618      	mov	r0, r3
 80013f4:	370c      	adds	r7, #12
 80013f6:	46bd      	mov	sp, r7
 80013f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fc:	4770      	bx	lr

080013fe <_isatty>:

int _isatty(int file)
{
 80013fe:	b480      	push	{r7}
 8001400:	b083      	sub	sp, #12
 8001402:	af00      	add	r7, sp, #0
 8001404:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001406:	2301      	movs	r3, #1
}
 8001408:	4618      	mov	r0, r3
 800140a:	370c      	adds	r7, #12
 800140c:	46bd      	mov	sp, r7
 800140e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001412:	4770      	bx	lr

08001414 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001414:	b480      	push	{r7}
 8001416:	b085      	sub	sp, #20
 8001418:	af00      	add	r7, sp, #0
 800141a:	60f8      	str	r0, [r7, #12]
 800141c:	60b9      	str	r1, [r7, #8]
 800141e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001420:	2300      	movs	r3, #0
}
 8001422:	4618      	mov	r0, r3
 8001424:	3714      	adds	r7, #20
 8001426:	46bd      	mov	sp, r7
 8001428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800142c:	4770      	bx	lr
	...

08001430 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001430:	b580      	push	{r7, lr}
 8001432:	b086      	sub	sp, #24
 8001434:	af00      	add	r7, sp, #0
 8001436:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001438:	4a14      	ldr	r2, [pc, #80]	; (800148c <_sbrk+0x5c>)
 800143a:	4b15      	ldr	r3, [pc, #84]	; (8001490 <_sbrk+0x60>)
 800143c:	1ad3      	subs	r3, r2, r3
 800143e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001440:	697b      	ldr	r3, [r7, #20]
 8001442:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001444:	4b13      	ldr	r3, [pc, #76]	; (8001494 <_sbrk+0x64>)
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	2b00      	cmp	r3, #0
 800144a:	d102      	bne.n	8001452 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800144c:	4b11      	ldr	r3, [pc, #68]	; (8001494 <_sbrk+0x64>)
 800144e:	4a12      	ldr	r2, [pc, #72]	; (8001498 <_sbrk+0x68>)
 8001450:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001452:	4b10      	ldr	r3, [pc, #64]	; (8001494 <_sbrk+0x64>)
 8001454:	681a      	ldr	r2, [r3, #0]
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	4413      	add	r3, r2
 800145a:	693a      	ldr	r2, [r7, #16]
 800145c:	429a      	cmp	r2, r3
 800145e:	d207      	bcs.n	8001470 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001460:	f000 fe08 	bl	8002074 <__errno>
 8001464:	4603      	mov	r3, r0
 8001466:	220c      	movs	r2, #12
 8001468:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800146a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800146e:	e009      	b.n	8001484 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001470:	4b08      	ldr	r3, [pc, #32]	; (8001494 <_sbrk+0x64>)
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001476:	4b07      	ldr	r3, [pc, #28]	; (8001494 <_sbrk+0x64>)
 8001478:	681a      	ldr	r2, [r3, #0]
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	4413      	add	r3, r2
 800147e:	4a05      	ldr	r2, [pc, #20]	; (8001494 <_sbrk+0x64>)
 8001480:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001482:	68fb      	ldr	r3, [r7, #12]
}
 8001484:	4618      	mov	r0, r3
 8001486:	3718      	adds	r7, #24
 8001488:	46bd      	mov	sp, r7
 800148a:	bd80      	pop	{r7, pc}
 800148c:	20020000 	.word	0x20020000
 8001490:	00000400 	.word	0x00000400
 8001494:	200001e4 	.word	0x200001e4
 8001498:	20000338 	.word	0x20000338

0800149c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800149c:	480d      	ldr	r0, [pc, #52]	; (80014d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800149e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80014a0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80014a4:	480c      	ldr	r0, [pc, #48]	; (80014d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80014a6:	490d      	ldr	r1, [pc, #52]	; (80014dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80014a8:	4a0d      	ldr	r2, [pc, #52]	; (80014e0 <LoopForever+0xe>)
  movs r3, #0
 80014aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80014ac:	e002      	b.n	80014b4 <LoopCopyDataInit>

080014ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80014ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80014b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80014b2:	3304      	adds	r3, #4

080014b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80014b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80014b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80014b8:	d3f9      	bcc.n	80014ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80014ba:	4a0a      	ldr	r2, [pc, #40]	; (80014e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80014bc:	4c0a      	ldr	r4, [pc, #40]	; (80014e8 <LoopForever+0x16>)
  movs r3, #0
 80014be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80014c0:	e001      	b.n	80014c6 <LoopFillZerobss>

080014c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80014c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80014c4:	3204      	adds	r2, #4

080014c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80014c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80014c8:	d3fb      	bcc.n	80014c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80014ca:	f000 fdd9 	bl	8002080 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80014ce:	f7ff fe27 	bl	8001120 <main>

080014d2 <LoopForever>:

LoopForever:
  b LoopForever
 80014d2:	e7fe      	b.n	80014d2 <LoopForever>
  ldr   r0, =_estack
 80014d4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80014d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80014dc:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80014e0:	080049e4 	.word	0x080049e4
  ldr r2, =_sbss
 80014e4:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80014e8:	20000334 	.word	0x20000334

080014ec <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80014ec:	e7fe      	b.n	80014ec <BusFault_Handler>

080014ee <__cvt>:
 80014ee:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80014f2:	ec55 4b10 	vmov	r4, r5, d0
 80014f6:	2d00      	cmp	r5, #0
 80014f8:	460e      	mov	r6, r1
 80014fa:	4619      	mov	r1, r3
 80014fc:	462b      	mov	r3, r5
 80014fe:	bfbb      	ittet	lt
 8001500:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001504:	461d      	movlt	r5, r3
 8001506:	2300      	movge	r3, #0
 8001508:	232d      	movlt	r3, #45	; 0x2d
 800150a:	700b      	strb	r3, [r1, #0]
 800150c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800150e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001512:	4691      	mov	r9, r2
 8001514:	f023 0820 	bic.w	r8, r3, #32
 8001518:	bfbc      	itt	lt
 800151a:	4622      	movlt	r2, r4
 800151c:	4614      	movlt	r4, r2
 800151e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001522:	d005      	beq.n	8001530 <__cvt+0x42>
 8001524:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001528:	d100      	bne.n	800152c <__cvt+0x3e>
 800152a:	3601      	adds	r6, #1
 800152c:	2102      	movs	r1, #2
 800152e:	e000      	b.n	8001532 <__cvt+0x44>
 8001530:	2103      	movs	r1, #3
 8001532:	ab03      	add	r3, sp, #12
 8001534:	9301      	str	r3, [sp, #4]
 8001536:	ab02      	add	r3, sp, #8
 8001538:	9300      	str	r3, [sp, #0]
 800153a:	ec45 4b10 	vmov	d0, r4, r5
 800153e:	4653      	mov	r3, sl
 8001540:	4632      	mov	r2, r6
 8001542:	f000 fe4d 	bl	80021e0 <_dtoa_r>
 8001546:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800154a:	4607      	mov	r7, r0
 800154c:	d102      	bne.n	8001554 <__cvt+0x66>
 800154e:	f019 0f01 	tst.w	r9, #1
 8001552:	d022      	beq.n	800159a <__cvt+0xac>
 8001554:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001558:	eb07 0906 	add.w	r9, r7, r6
 800155c:	d110      	bne.n	8001580 <__cvt+0x92>
 800155e:	783b      	ldrb	r3, [r7, #0]
 8001560:	2b30      	cmp	r3, #48	; 0x30
 8001562:	d10a      	bne.n	800157a <__cvt+0x8c>
 8001564:	2200      	movs	r2, #0
 8001566:	2300      	movs	r3, #0
 8001568:	4620      	mov	r0, r4
 800156a:	4629      	mov	r1, r5
 800156c:	f7ff faac 	bl	8000ac8 <__aeabi_dcmpeq>
 8001570:	b918      	cbnz	r0, 800157a <__cvt+0x8c>
 8001572:	f1c6 0601 	rsb	r6, r6, #1
 8001576:	f8ca 6000 	str.w	r6, [sl]
 800157a:	f8da 3000 	ldr.w	r3, [sl]
 800157e:	4499      	add	r9, r3
 8001580:	2200      	movs	r2, #0
 8001582:	2300      	movs	r3, #0
 8001584:	4620      	mov	r0, r4
 8001586:	4629      	mov	r1, r5
 8001588:	f7ff fa9e 	bl	8000ac8 <__aeabi_dcmpeq>
 800158c:	b108      	cbz	r0, 8001592 <__cvt+0xa4>
 800158e:	f8cd 900c 	str.w	r9, [sp, #12]
 8001592:	2230      	movs	r2, #48	; 0x30
 8001594:	9b03      	ldr	r3, [sp, #12]
 8001596:	454b      	cmp	r3, r9
 8001598:	d307      	bcc.n	80015aa <__cvt+0xbc>
 800159a:	9b03      	ldr	r3, [sp, #12]
 800159c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800159e:	1bdb      	subs	r3, r3, r7
 80015a0:	4638      	mov	r0, r7
 80015a2:	6013      	str	r3, [r2, #0]
 80015a4:	b004      	add	sp, #16
 80015a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80015aa:	1c59      	adds	r1, r3, #1
 80015ac:	9103      	str	r1, [sp, #12]
 80015ae:	701a      	strb	r2, [r3, #0]
 80015b0:	e7f0      	b.n	8001594 <__cvt+0xa6>

080015b2 <__exponent>:
 80015b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015b4:	4603      	mov	r3, r0
 80015b6:	2900      	cmp	r1, #0
 80015b8:	bfb8      	it	lt
 80015ba:	4249      	neglt	r1, r1
 80015bc:	f803 2b02 	strb.w	r2, [r3], #2
 80015c0:	bfb4      	ite	lt
 80015c2:	222d      	movlt	r2, #45	; 0x2d
 80015c4:	222b      	movge	r2, #43	; 0x2b
 80015c6:	2909      	cmp	r1, #9
 80015c8:	7042      	strb	r2, [r0, #1]
 80015ca:	dd2a      	ble.n	8001622 <__exponent+0x70>
 80015cc:	f10d 0207 	add.w	r2, sp, #7
 80015d0:	4617      	mov	r7, r2
 80015d2:	260a      	movs	r6, #10
 80015d4:	4694      	mov	ip, r2
 80015d6:	fb91 f5f6 	sdiv	r5, r1, r6
 80015da:	fb06 1415 	mls	r4, r6, r5, r1
 80015de:	3430      	adds	r4, #48	; 0x30
 80015e0:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80015e4:	460c      	mov	r4, r1
 80015e6:	2c63      	cmp	r4, #99	; 0x63
 80015e8:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80015ec:	4629      	mov	r1, r5
 80015ee:	dcf1      	bgt.n	80015d4 <__exponent+0x22>
 80015f0:	3130      	adds	r1, #48	; 0x30
 80015f2:	f1ac 0402 	sub.w	r4, ip, #2
 80015f6:	f802 1c01 	strb.w	r1, [r2, #-1]
 80015fa:	1c41      	adds	r1, r0, #1
 80015fc:	4622      	mov	r2, r4
 80015fe:	42ba      	cmp	r2, r7
 8001600:	d30a      	bcc.n	8001618 <__exponent+0x66>
 8001602:	f10d 0209 	add.w	r2, sp, #9
 8001606:	eba2 020c 	sub.w	r2, r2, ip
 800160a:	42bc      	cmp	r4, r7
 800160c:	bf88      	it	hi
 800160e:	2200      	movhi	r2, #0
 8001610:	4413      	add	r3, r2
 8001612:	1a18      	subs	r0, r3, r0
 8001614:	b003      	add	sp, #12
 8001616:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001618:	f812 5b01 	ldrb.w	r5, [r2], #1
 800161c:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001620:	e7ed      	b.n	80015fe <__exponent+0x4c>
 8001622:	2330      	movs	r3, #48	; 0x30
 8001624:	3130      	adds	r1, #48	; 0x30
 8001626:	7083      	strb	r3, [r0, #2]
 8001628:	70c1      	strb	r1, [r0, #3]
 800162a:	1d03      	adds	r3, r0, #4
 800162c:	e7f1      	b.n	8001612 <__exponent+0x60>
	...

08001630 <_printf_float>:
 8001630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001634:	ed2d 8b02 	vpush	{d8}
 8001638:	b08d      	sub	sp, #52	; 0x34
 800163a:	460c      	mov	r4, r1
 800163c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001640:	4616      	mov	r6, r2
 8001642:	461f      	mov	r7, r3
 8001644:	4605      	mov	r5, r0
 8001646:	f000 fd11 	bl	800206c <_localeconv_r>
 800164a:	f8d0 a000 	ldr.w	sl, [r0]
 800164e:	4650      	mov	r0, sl
 8001650:	f7fe fe0e 	bl	8000270 <strlen>
 8001654:	2300      	movs	r3, #0
 8001656:	930a      	str	r3, [sp, #40]	; 0x28
 8001658:	6823      	ldr	r3, [r4, #0]
 800165a:	9305      	str	r3, [sp, #20]
 800165c:	f8d8 3000 	ldr.w	r3, [r8]
 8001660:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001664:	3307      	adds	r3, #7
 8001666:	f023 0307 	bic.w	r3, r3, #7
 800166a:	f103 0208 	add.w	r2, r3, #8
 800166e:	f8c8 2000 	str.w	r2, [r8]
 8001672:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001676:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800167a:	9307      	str	r3, [sp, #28]
 800167c:	f8cd 8018 	str.w	r8, [sp, #24]
 8001680:	ee08 0a10 	vmov	s16, r0
 8001684:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001688:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800168c:	4b9e      	ldr	r3, [pc, #632]	; (8001908 <_printf_float+0x2d8>)
 800168e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001692:	f7ff fa4b 	bl	8000b2c <__aeabi_dcmpun>
 8001696:	bb88      	cbnz	r0, 80016fc <_printf_float+0xcc>
 8001698:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800169c:	4b9a      	ldr	r3, [pc, #616]	; (8001908 <_printf_float+0x2d8>)
 800169e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80016a2:	f7ff fa25 	bl	8000af0 <__aeabi_dcmple>
 80016a6:	bb48      	cbnz	r0, 80016fc <_printf_float+0xcc>
 80016a8:	2200      	movs	r2, #0
 80016aa:	2300      	movs	r3, #0
 80016ac:	4640      	mov	r0, r8
 80016ae:	4649      	mov	r1, r9
 80016b0:	f7ff fa14 	bl	8000adc <__aeabi_dcmplt>
 80016b4:	b110      	cbz	r0, 80016bc <_printf_float+0x8c>
 80016b6:	232d      	movs	r3, #45	; 0x2d
 80016b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016bc:	4a93      	ldr	r2, [pc, #588]	; (800190c <_printf_float+0x2dc>)
 80016be:	4b94      	ldr	r3, [pc, #592]	; (8001910 <_printf_float+0x2e0>)
 80016c0:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80016c4:	bf94      	ite	ls
 80016c6:	4690      	movls	r8, r2
 80016c8:	4698      	movhi	r8, r3
 80016ca:	2303      	movs	r3, #3
 80016cc:	6123      	str	r3, [r4, #16]
 80016ce:	9b05      	ldr	r3, [sp, #20]
 80016d0:	f023 0304 	bic.w	r3, r3, #4
 80016d4:	6023      	str	r3, [r4, #0]
 80016d6:	f04f 0900 	mov.w	r9, #0
 80016da:	9700      	str	r7, [sp, #0]
 80016dc:	4633      	mov	r3, r6
 80016de:	aa0b      	add	r2, sp, #44	; 0x2c
 80016e0:	4621      	mov	r1, r4
 80016e2:	4628      	mov	r0, r5
 80016e4:	f000 f9da 	bl	8001a9c <_printf_common>
 80016e8:	3001      	adds	r0, #1
 80016ea:	f040 8090 	bne.w	800180e <_printf_float+0x1de>
 80016ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80016f2:	b00d      	add	sp, #52	; 0x34
 80016f4:	ecbd 8b02 	vpop	{d8}
 80016f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016fc:	4642      	mov	r2, r8
 80016fe:	464b      	mov	r3, r9
 8001700:	4640      	mov	r0, r8
 8001702:	4649      	mov	r1, r9
 8001704:	f7ff fa12 	bl	8000b2c <__aeabi_dcmpun>
 8001708:	b140      	cbz	r0, 800171c <_printf_float+0xec>
 800170a:	464b      	mov	r3, r9
 800170c:	2b00      	cmp	r3, #0
 800170e:	bfbc      	itt	lt
 8001710:	232d      	movlt	r3, #45	; 0x2d
 8001712:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001716:	4a7f      	ldr	r2, [pc, #508]	; (8001914 <_printf_float+0x2e4>)
 8001718:	4b7f      	ldr	r3, [pc, #508]	; (8001918 <_printf_float+0x2e8>)
 800171a:	e7d1      	b.n	80016c0 <_printf_float+0x90>
 800171c:	6863      	ldr	r3, [r4, #4]
 800171e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001722:	9206      	str	r2, [sp, #24]
 8001724:	1c5a      	adds	r2, r3, #1
 8001726:	d13f      	bne.n	80017a8 <_printf_float+0x178>
 8001728:	2306      	movs	r3, #6
 800172a:	6063      	str	r3, [r4, #4]
 800172c:	9b05      	ldr	r3, [sp, #20]
 800172e:	6861      	ldr	r1, [r4, #4]
 8001730:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001734:	2300      	movs	r3, #0
 8001736:	9303      	str	r3, [sp, #12]
 8001738:	ab0a      	add	r3, sp, #40	; 0x28
 800173a:	e9cd b301 	strd	fp, r3, [sp, #4]
 800173e:	ab09      	add	r3, sp, #36	; 0x24
 8001740:	ec49 8b10 	vmov	d0, r8, r9
 8001744:	9300      	str	r3, [sp, #0]
 8001746:	6022      	str	r2, [r4, #0]
 8001748:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800174c:	4628      	mov	r0, r5
 800174e:	f7ff fece 	bl	80014ee <__cvt>
 8001752:	9b06      	ldr	r3, [sp, #24]
 8001754:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001756:	2b47      	cmp	r3, #71	; 0x47
 8001758:	4680      	mov	r8, r0
 800175a:	d108      	bne.n	800176e <_printf_float+0x13e>
 800175c:	1cc8      	adds	r0, r1, #3
 800175e:	db02      	blt.n	8001766 <_printf_float+0x136>
 8001760:	6863      	ldr	r3, [r4, #4]
 8001762:	4299      	cmp	r1, r3
 8001764:	dd41      	ble.n	80017ea <_printf_float+0x1ba>
 8001766:	f1ab 0302 	sub.w	r3, fp, #2
 800176a:	fa5f fb83 	uxtb.w	fp, r3
 800176e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001772:	d820      	bhi.n	80017b6 <_printf_float+0x186>
 8001774:	3901      	subs	r1, #1
 8001776:	465a      	mov	r2, fp
 8001778:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800177c:	9109      	str	r1, [sp, #36]	; 0x24
 800177e:	f7ff ff18 	bl	80015b2 <__exponent>
 8001782:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001784:	1813      	adds	r3, r2, r0
 8001786:	2a01      	cmp	r2, #1
 8001788:	4681      	mov	r9, r0
 800178a:	6123      	str	r3, [r4, #16]
 800178c:	dc02      	bgt.n	8001794 <_printf_float+0x164>
 800178e:	6822      	ldr	r2, [r4, #0]
 8001790:	07d2      	lsls	r2, r2, #31
 8001792:	d501      	bpl.n	8001798 <_printf_float+0x168>
 8001794:	3301      	adds	r3, #1
 8001796:	6123      	str	r3, [r4, #16]
 8001798:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800179c:	2b00      	cmp	r3, #0
 800179e:	d09c      	beq.n	80016da <_printf_float+0xaa>
 80017a0:	232d      	movs	r3, #45	; 0x2d
 80017a2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80017a6:	e798      	b.n	80016da <_printf_float+0xaa>
 80017a8:	9a06      	ldr	r2, [sp, #24]
 80017aa:	2a47      	cmp	r2, #71	; 0x47
 80017ac:	d1be      	bne.n	800172c <_printf_float+0xfc>
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	d1bc      	bne.n	800172c <_printf_float+0xfc>
 80017b2:	2301      	movs	r3, #1
 80017b4:	e7b9      	b.n	800172a <_printf_float+0xfa>
 80017b6:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80017ba:	d118      	bne.n	80017ee <_printf_float+0x1be>
 80017bc:	2900      	cmp	r1, #0
 80017be:	6863      	ldr	r3, [r4, #4]
 80017c0:	dd0b      	ble.n	80017da <_printf_float+0x1aa>
 80017c2:	6121      	str	r1, [r4, #16]
 80017c4:	b913      	cbnz	r3, 80017cc <_printf_float+0x19c>
 80017c6:	6822      	ldr	r2, [r4, #0]
 80017c8:	07d0      	lsls	r0, r2, #31
 80017ca:	d502      	bpl.n	80017d2 <_printf_float+0x1a2>
 80017cc:	3301      	adds	r3, #1
 80017ce:	440b      	add	r3, r1
 80017d0:	6123      	str	r3, [r4, #16]
 80017d2:	65a1      	str	r1, [r4, #88]	; 0x58
 80017d4:	f04f 0900 	mov.w	r9, #0
 80017d8:	e7de      	b.n	8001798 <_printf_float+0x168>
 80017da:	b913      	cbnz	r3, 80017e2 <_printf_float+0x1b2>
 80017dc:	6822      	ldr	r2, [r4, #0]
 80017de:	07d2      	lsls	r2, r2, #31
 80017e0:	d501      	bpl.n	80017e6 <_printf_float+0x1b6>
 80017e2:	3302      	adds	r3, #2
 80017e4:	e7f4      	b.n	80017d0 <_printf_float+0x1a0>
 80017e6:	2301      	movs	r3, #1
 80017e8:	e7f2      	b.n	80017d0 <_printf_float+0x1a0>
 80017ea:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80017ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80017f0:	4299      	cmp	r1, r3
 80017f2:	db05      	blt.n	8001800 <_printf_float+0x1d0>
 80017f4:	6823      	ldr	r3, [r4, #0]
 80017f6:	6121      	str	r1, [r4, #16]
 80017f8:	07d8      	lsls	r0, r3, #31
 80017fa:	d5ea      	bpl.n	80017d2 <_printf_float+0x1a2>
 80017fc:	1c4b      	adds	r3, r1, #1
 80017fe:	e7e7      	b.n	80017d0 <_printf_float+0x1a0>
 8001800:	2900      	cmp	r1, #0
 8001802:	bfd4      	ite	le
 8001804:	f1c1 0202 	rsble	r2, r1, #2
 8001808:	2201      	movgt	r2, #1
 800180a:	4413      	add	r3, r2
 800180c:	e7e0      	b.n	80017d0 <_printf_float+0x1a0>
 800180e:	6823      	ldr	r3, [r4, #0]
 8001810:	055a      	lsls	r2, r3, #21
 8001812:	d407      	bmi.n	8001824 <_printf_float+0x1f4>
 8001814:	6923      	ldr	r3, [r4, #16]
 8001816:	4642      	mov	r2, r8
 8001818:	4631      	mov	r1, r6
 800181a:	4628      	mov	r0, r5
 800181c:	47b8      	blx	r7
 800181e:	3001      	adds	r0, #1
 8001820:	d12c      	bne.n	800187c <_printf_float+0x24c>
 8001822:	e764      	b.n	80016ee <_printf_float+0xbe>
 8001824:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001828:	f240 80e0 	bls.w	80019ec <_printf_float+0x3bc>
 800182c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001830:	2200      	movs	r2, #0
 8001832:	2300      	movs	r3, #0
 8001834:	f7ff f948 	bl	8000ac8 <__aeabi_dcmpeq>
 8001838:	2800      	cmp	r0, #0
 800183a:	d034      	beq.n	80018a6 <_printf_float+0x276>
 800183c:	4a37      	ldr	r2, [pc, #220]	; (800191c <_printf_float+0x2ec>)
 800183e:	2301      	movs	r3, #1
 8001840:	4631      	mov	r1, r6
 8001842:	4628      	mov	r0, r5
 8001844:	47b8      	blx	r7
 8001846:	3001      	adds	r0, #1
 8001848:	f43f af51 	beq.w	80016ee <_printf_float+0xbe>
 800184c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001850:	429a      	cmp	r2, r3
 8001852:	db02      	blt.n	800185a <_printf_float+0x22a>
 8001854:	6823      	ldr	r3, [r4, #0]
 8001856:	07d8      	lsls	r0, r3, #31
 8001858:	d510      	bpl.n	800187c <_printf_float+0x24c>
 800185a:	ee18 3a10 	vmov	r3, s16
 800185e:	4652      	mov	r2, sl
 8001860:	4631      	mov	r1, r6
 8001862:	4628      	mov	r0, r5
 8001864:	47b8      	blx	r7
 8001866:	3001      	adds	r0, #1
 8001868:	f43f af41 	beq.w	80016ee <_printf_float+0xbe>
 800186c:	f04f 0800 	mov.w	r8, #0
 8001870:	f104 091a 	add.w	r9, r4, #26
 8001874:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001876:	3b01      	subs	r3, #1
 8001878:	4543      	cmp	r3, r8
 800187a:	dc09      	bgt.n	8001890 <_printf_float+0x260>
 800187c:	6823      	ldr	r3, [r4, #0]
 800187e:	079b      	lsls	r3, r3, #30
 8001880:	f100 8107 	bmi.w	8001a92 <_printf_float+0x462>
 8001884:	68e0      	ldr	r0, [r4, #12]
 8001886:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001888:	4298      	cmp	r0, r3
 800188a:	bfb8      	it	lt
 800188c:	4618      	movlt	r0, r3
 800188e:	e730      	b.n	80016f2 <_printf_float+0xc2>
 8001890:	2301      	movs	r3, #1
 8001892:	464a      	mov	r2, r9
 8001894:	4631      	mov	r1, r6
 8001896:	4628      	mov	r0, r5
 8001898:	47b8      	blx	r7
 800189a:	3001      	adds	r0, #1
 800189c:	f43f af27 	beq.w	80016ee <_printf_float+0xbe>
 80018a0:	f108 0801 	add.w	r8, r8, #1
 80018a4:	e7e6      	b.n	8001874 <_printf_float+0x244>
 80018a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80018a8:	2b00      	cmp	r3, #0
 80018aa:	dc39      	bgt.n	8001920 <_printf_float+0x2f0>
 80018ac:	4a1b      	ldr	r2, [pc, #108]	; (800191c <_printf_float+0x2ec>)
 80018ae:	2301      	movs	r3, #1
 80018b0:	4631      	mov	r1, r6
 80018b2:	4628      	mov	r0, r5
 80018b4:	47b8      	blx	r7
 80018b6:	3001      	adds	r0, #1
 80018b8:	f43f af19 	beq.w	80016ee <_printf_float+0xbe>
 80018bc:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80018c0:	4313      	orrs	r3, r2
 80018c2:	d102      	bne.n	80018ca <_printf_float+0x29a>
 80018c4:	6823      	ldr	r3, [r4, #0]
 80018c6:	07d9      	lsls	r1, r3, #31
 80018c8:	d5d8      	bpl.n	800187c <_printf_float+0x24c>
 80018ca:	ee18 3a10 	vmov	r3, s16
 80018ce:	4652      	mov	r2, sl
 80018d0:	4631      	mov	r1, r6
 80018d2:	4628      	mov	r0, r5
 80018d4:	47b8      	blx	r7
 80018d6:	3001      	adds	r0, #1
 80018d8:	f43f af09 	beq.w	80016ee <_printf_float+0xbe>
 80018dc:	f04f 0900 	mov.w	r9, #0
 80018e0:	f104 0a1a 	add.w	sl, r4, #26
 80018e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80018e6:	425b      	negs	r3, r3
 80018e8:	454b      	cmp	r3, r9
 80018ea:	dc01      	bgt.n	80018f0 <_printf_float+0x2c0>
 80018ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018ee:	e792      	b.n	8001816 <_printf_float+0x1e6>
 80018f0:	2301      	movs	r3, #1
 80018f2:	4652      	mov	r2, sl
 80018f4:	4631      	mov	r1, r6
 80018f6:	4628      	mov	r0, r5
 80018f8:	47b8      	blx	r7
 80018fa:	3001      	adds	r0, #1
 80018fc:	f43f aef7 	beq.w	80016ee <_printf_float+0xbe>
 8001900:	f109 0901 	add.w	r9, r9, #1
 8001904:	e7ee      	b.n	80018e4 <_printf_float+0x2b4>
 8001906:	bf00      	nop
 8001908:	7fefffff 	.word	0x7fefffff
 800190c:	0800466c 	.word	0x0800466c
 8001910:	08004670 	.word	0x08004670
 8001914:	08004674 	.word	0x08004674
 8001918:	08004678 	.word	0x08004678
 800191c:	0800467c 	.word	0x0800467c
 8001920:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001922:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001924:	429a      	cmp	r2, r3
 8001926:	bfa8      	it	ge
 8001928:	461a      	movge	r2, r3
 800192a:	2a00      	cmp	r2, #0
 800192c:	4691      	mov	r9, r2
 800192e:	dc37      	bgt.n	80019a0 <_printf_float+0x370>
 8001930:	f04f 0b00 	mov.w	fp, #0
 8001934:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001938:	f104 021a 	add.w	r2, r4, #26
 800193c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800193e:	9305      	str	r3, [sp, #20]
 8001940:	eba3 0309 	sub.w	r3, r3, r9
 8001944:	455b      	cmp	r3, fp
 8001946:	dc33      	bgt.n	80019b0 <_printf_float+0x380>
 8001948:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800194c:	429a      	cmp	r2, r3
 800194e:	db3b      	blt.n	80019c8 <_printf_float+0x398>
 8001950:	6823      	ldr	r3, [r4, #0]
 8001952:	07da      	lsls	r2, r3, #31
 8001954:	d438      	bmi.n	80019c8 <_printf_float+0x398>
 8001956:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800195a:	eba2 0903 	sub.w	r9, r2, r3
 800195e:	9b05      	ldr	r3, [sp, #20]
 8001960:	1ad2      	subs	r2, r2, r3
 8001962:	4591      	cmp	r9, r2
 8001964:	bfa8      	it	ge
 8001966:	4691      	movge	r9, r2
 8001968:	f1b9 0f00 	cmp.w	r9, #0
 800196c:	dc35      	bgt.n	80019da <_printf_float+0x3aa>
 800196e:	f04f 0800 	mov.w	r8, #0
 8001972:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001976:	f104 0a1a 	add.w	sl, r4, #26
 800197a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800197e:	1a9b      	subs	r3, r3, r2
 8001980:	eba3 0309 	sub.w	r3, r3, r9
 8001984:	4543      	cmp	r3, r8
 8001986:	f77f af79 	ble.w	800187c <_printf_float+0x24c>
 800198a:	2301      	movs	r3, #1
 800198c:	4652      	mov	r2, sl
 800198e:	4631      	mov	r1, r6
 8001990:	4628      	mov	r0, r5
 8001992:	47b8      	blx	r7
 8001994:	3001      	adds	r0, #1
 8001996:	f43f aeaa 	beq.w	80016ee <_printf_float+0xbe>
 800199a:	f108 0801 	add.w	r8, r8, #1
 800199e:	e7ec      	b.n	800197a <_printf_float+0x34a>
 80019a0:	4613      	mov	r3, r2
 80019a2:	4631      	mov	r1, r6
 80019a4:	4642      	mov	r2, r8
 80019a6:	4628      	mov	r0, r5
 80019a8:	47b8      	blx	r7
 80019aa:	3001      	adds	r0, #1
 80019ac:	d1c0      	bne.n	8001930 <_printf_float+0x300>
 80019ae:	e69e      	b.n	80016ee <_printf_float+0xbe>
 80019b0:	2301      	movs	r3, #1
 80019b2:	4631      	mov	r1, r6
 80019b4:	4628      	mov	r0, r5
 80019b6:	9205      	str	r2, [sp, #20]
 80019b8:	47b8      	blx	r7
 80019ba:	3001      	adds	r0, #1
 80019bc:	f43f ae97 	beq.w	80016ee <_printf_float+0xbe>
 80019c0:	9a05      	ldr	r2, [sp, #20]
 80019c2:	f10b 0b01 	add.w	fp, fp, #1
 80019c6:	e7b9      	b.n	800193c <_printf_float+0x30c>
 80019c8:	ee18 3a10 	vmov	r3, s16
 80019cc:	4652      	mov	r2, sl
 80019ce:	4631      	mov	r1, r6
 80019d0:	4628      	mov	r0, r5
 80019d2:	47b8      	blx	r7
 80019d4:	3001      	adds	r0, #1
 80019d6:	d1be      	bne.n	8001956 <_printf_float+0x326>
 80019d8:	e689      	b.n	80016ee <_printf_float+0xbe>
 80019da:	9a05      	ldr	r2, [sp, #20]
 80019dc:	464b      	mov	r3, r9
 80019de:	4442      	add	r2, r8
 80019e0:	4631      	mov	r1, r6
 80019e2:	4628      	mov	r0, r5
 80019e4:	47b8      	blx	r7
 80019e6:	3001      	adds	r0, #1
 80019e8:	d1c1      	bne.n	800196e <_printf_float+0x33e>
 80019ea:	e680      	b.n	80016ee <_printf_float+0xbe>
 80019ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80019ee:	2a01      	cmp	r2, #1
 80019f0:	dc01      	bgt.n	80019f6 <_printf_float+0x3c6>
 80019f2:	07db      	lsls	r3, r3, #31
 80019f4:	d53a      	bpl.n	8001a6c <_printf_float+0x43c>
 80019f6:	2301      	movs	r3, #1
 80019f8:	4642      	mov	r2, r8
 80019fa:	4631      	mov	r1, r6
 80019fc:	4628      	mov	r0, r5
 80019fe:	47b8      	blx	r7
 8001a00:	3001      	adds	r0, #1
 8001a02:	f43f ae74 	beq.w	80016ee <_printf_float+0xbe>
 8001a06:	ee18 3a10 	vmov	r3, s16
 8001a0a:	4652      	mov	r2, sl
 8001a0c:	4631      	mov	r1, r6
 8001a0e:	4628      	mov	r0, r5
 8001a10:	47b8      	blx	r7
 8001a12:	3001      	adds	r0, #1
 8001a14:	f43f ae6b 	beq.w	80016ee <_printf_float+0xbe>
 8001a18:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	2300      	movs	r3, #0
 8001a20:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001a24:	f7ff f850 	bl	8000ac8 <__aeabi_dcmpeq>
 8001a28:	b9d8      	cbnz	r0, 8001a62 <_printf_float+0x432>
 8001a2a:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 8001a2e:	f108 0201 	add.w	r2, r8, #1
 8001a32:	4631      	mov	r1, r6
 8001a34:	4628      	mov	r0, r5
 8001a36:	47b8      	blx	r7
 8001a38:	3001      	adds	r0, #1
 8001a3a:	d10e      	bne.n	8001a5a <_printf_float+0x42a>
 8001a3c:	e657      	b.n	80016ee <_printf_float+0xbe>
 8001a3e:	2301      	movs	r3, #1
 8001a40:	4652      	mov	r2, sl
 8001a42:	4631      	mov	r1, r6
 8001a44:	4628      	mov	r0, r5
 8001a46:	47b8      	blx	r7
 8001a48:	3001      	adds	r0, #1
 8001a4a:	f43f ae50 	beq.w	80016ee <_printf_float+0xbe>
 8001a4e:	f108 0801 	add.w	r8, r8, #1
 8001a52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001a54:	3b01      	subs	r3, #1
 8001a56:	4543      	cmp	r3, r8
 8001a58:	dcf1      	bgt.n	8001a3e <_printf_float+0x40e>
 8001a5a:	464b      	mov	r3, r9
 8001a5c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001a60:	e6da      	b.n	8001818 <_printf_float+0x1e8>
 8001a62:	f04f 0800 	mov.w	r8, #0
 8001a66:	f104 0a1a 	add.w	sl, r4, #26
 8001a6a:	e7f2      	b.n	8001a52 <_printf_float+0x422>
 8001a6c:	2301      	movs	r3, #1
 8001a6e:	4642      	mov	r2, r8
 8001a70:	e7df      	b.n	8001a32 <_printf_float+0x402>
 8001a72:	2301      	movs	r3, #1
 8001a74:	464a      	mov	r2, r9
 8001a76:	4631      	mov	r1, r6
 8001a78:	4628      	mov	r0, r5
 8001a7a:	47b8      	blx	r7
 8001a7c:	3001      	adds	r0, #1
 8001a7e:	f43f ae36 	beq.w	80016ee <_printf_float+0xbe>
 8001a82:	f108 0801 	add.w	r8, r8, #1
 8001a86:	68e3      	ldr	r3, [r4, #12]
 8001a88:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001a8a:	1a5b      	subs	r3, r3, r1
 8001a8c:	4543      	cmp	r3, r8
 8001a8e:	dcf0      	bgt.n	8001a72 <_printf_float+0x442>
 8001a90:	e6f8      	b.n	8001884 <_printf_float+0x254>
 8001a92:	f04f 0800 	mov.w	r8, #0
 8001a96:	f104 0919 	add.w	r9, r4, #25
 8001a9a:	e7f4      	b.n	8001a86 <_printf_float+0x456>

08001a9c <_printf_common>:
 8001a9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001aa0:	4616      	mov	r6, r2
 8001aa2:	4699      	mov	r9, r3
 8001aa4:	688a      	ldr	r2, [r1, #8]
 8001aa6:	690b      	ldr	r3, [r1, #16]
 8001aa8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001aac:	4293      	cmp	r3, r2
 8001aae:	bfb8      	it	lt
 8001ab0:	4613      	movlt	r3, r2
 8001ab2:	6033      	str	r3, [r6, #0]
 8001ab4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001ab8:	4607      	mov	r7, r0
 8001aba:	460c      	mov	r4, r1
 8001abc:	b10a      	cbz	r2, 8001ac2 <_printf_common+0x26>
 8001abe:	3301      	adds	r3, #1
 8001ac0:	6033      	str	r3, [r6, #0]
 8001ac2:	6823      	ldr	r3, [r4, #0]
 8001ac4:	0699      	lsls	r1, r3, #26
 8001ac6:	bf42      	ittt	mi
 8001ac8:	6833      	ldrmi	r3, [r6, #0]
 8001aca:	3302      	addmi	r3, #2
 8001acc:	6033      	strmi	r3, [r6, #0]
 8001ace:	6825      	ldr	r5, [r4, #0]
 8001ad0:	f015 0506 	ands.w	r5, r5, #6
 8001ad4:	d106      	bne.n	8001ae4 <_printf_common+0x48>
 8001ad6:	f104 0a19 	add.w	sl, r4, #25
 8001ada:	68e3      	ldr	r3, [r4, #12]
 8001adc:	6832      	ldr	r2, [r6, #0]
 8001ade:	1a9b      	subs	r3, r3, r2
 8001ae0:	42ab      	cmp	r3, r5
 8001ae2:	dc26      	bgt.n	8001b32 <_printf_common+0x96>
 8001ae4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001ae8:	1e13      	subs	r3, r2, #0
 8001aea:	6822      	ldr	r2, [r4, #0]
 8001aec:	bf18      	it	ne
 8001aee:	2301      	movne	r3, #1
 8001af0:	0692      	lsls	r2, r2, #26
 8001af2:	d42b      	bmi.n	8001b4c <_printf_common+0xb0>
 8001af4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001af8:	4649      	mov	r1, r9
 8001afa:	4638      	mov	r0, r7
 8001afc:	47c0      	blx	r8
 8001afe:	3001      	adds	r0, #1
 8001b00:	d01e      	beq.n	8001b40 <_printf_common+0xa4>
 8001b02:	6823      	ldr	r3, [r4, #0]
 8001b04:	6922      	ldr	r2, [r4, #16]
 8001b06:	f003 0306 	and.w	r3, r3, #6
 8001b0a:	2b04      	cmp	r3, #4
 8001b0c:	bf02      	ittt	eq
 8001b0e:	68e5      	ldreq	r5, [r4, #12]
 8001b10:	6833      	ldreq	r3, [r6, #0]
 8001b12:	1aed      	subeq	r5, r5, r3
 8001b14:	68a3      	ldr	r3, [r4, #8]
 8001b16:	bf0c      	ite	eq
 8001b18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001b1c:	2500      	movne	r5, #0
 8001b1e:	4293      	cmp	r3, r2
 8001b20:	bfc4      	itt	gt
 8001b22:	1a9b      	subgt	r3, r3, r2
 8001b24:	18ed      	addgt	r5, r5, r3
 8001b26:	2600      	movs	r6, #0
 8001b28:	341a      	adds	r4, #26
 8001b2a:	42b5      	cmp	r5, r6
 8001b2c:	d11a      	bne.n	8001b64 <_printf_common+0xc8>
 8001b2e:	2000      	movs	r0, #0
 8001b30:	e008      	b.n	8001b44 <_printf_common+0xa8>
 8001b32:	2301      	movs	r3, #1
 8001b34:	4652      	mov	r2, sl
 8001b36:	4649      	mov	r1, r9
 8001b38:	4638      	mov	r0, r7
 8001b3a:	47c0      	blx	r8
 8001b3c:	3001      	adds	r0, #1
 8001b3e:	d103      	bne.n	8001b48 <_printf_common+0xac>
 8001b40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b48:	3501      	adds	r5, #1
 8001b4a:	e7c6      	b.n	8001ada <_printf_common+0x3e>
 8001b4c:	18e1      	adds	r1, r4, r3
 8001b4e:	1c5a      	adds	r2, r3, #1
 8001b50:	2030      	movs	r0, #48	; 0x30
 8001b52:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001b56:	4422      	add	r2, r4
 8001b58:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001b5c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001b60:	3302      	adds	r3, #2
 8001b62:	e7c7      	b.n	8001af4 <_printf_common+0x58>
 8001b64:	2301      	movs	r3, #1
 8001b66:	4622      	mov	r2, r4
 8001b68:	4649      	mov	r1, r9
 8001b6a:	4638      	mov	r0, r7
 8001b6c:	47c0      	blx	r8
 8001b6e:	3001      	adds	r0, #1
 8001b70:	d0e6      	beq.n	8001b40 <_printf_common+0xa4>
 8001b72:	3601      	adds	r6, #1
 8001b74:	e7d9      	b.n	8001b2a <_printf_common+0x8e>
	...

08001b78 <_printf_i>:
 8001b78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b7c:	7e0f      	ldrb	r7, [r1, #24]
 8001b7e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001b80:	2f78      	cmp	r7, #120	; 0x78
 8001b82:	4691      	mov	r9, r2
 8001b84:	4680      	mov	r8, r0
 8001b86:	460c      	mov	r4, r1
 8001b88:	469a      	mov	sl, r3
 8001b8a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001b8e:	d807      	bhi.n	8001ba0 <_printf_i+0x28>
 8001b90:	2f62      	cmp	r7, #98	; 0x62
 8001b92:	d80a      	bhi.n	8001baa <_printf_i+0x32>
 8001b94:	2f00      	cmp	r7, #0
 8001b96:	f000 80d4 	beq.w	8001d42 <_printf_i+0x1ca>
 8001b9a:	2f58      	cmp	r7, #88	; 0x58
 8001b9c:	f000 80c0 	beq.w	8001d20 <_printf_i+0x1a8>
 8001ba0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001ba4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001ba8:	e03a      	b.n	8001c20 <_printf_i+0xa8>
 8001baa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001bae:	2b15      	cmp	r3, #21
 8001bb0:	d8f6      	bhi.n	8001ba0 <_printf_i+0x28>
 8001bb2:	a101      	add	r1, pc, #4	; (adr r1, 8001bb8 <_printf_i+0x40>)
 8001bb4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001bb8:	08001c11 	.word	0x08001c11
 8001bbc:	08001c25 	.word	0x08001c25
 8001bc0:	08001ba1 	.word	0x08001ba1
 8001bc4:	08001ba1 	.word	0x08001ba1
 8001bc8:	08001ba1 	.word	0x08001ba1
 8001bcc:	08001ba1 	.word	0x08001ba1
 8001bd0:	08001c25 	.word	0x08001c25
 8001bd4:	08001ba1 	.word	0x08001ba1
 8001bd8:	08001ba1 	.word	0x08001ba1
 8001bdc:	08001ba1 	.word	0x08001ba1
 8001be0:	08001ba1 	.word	0x08001ba1
 8001be4:	08001d29 	.word	0x08001d29
 8001be8:	08001c51 	.word	0x08001c51
 8001bec:	08001ce3 	.word	0x08001ce3
 8001bf0:	08001ba1 	.word	0x08001ba1
 8001bf4:	08001ba1 	.word	0x08001ba1
 8001bf8:	08001d4b 	.word	0x08001d4b
 8001bfc:	08001ba1 	.word	0x08001ba1
 8001c00:	08001c51 	.word	0x08001c51
 8001c04:	08001ba1 	.word	0x08001ba1
 8001c08:	08001ba1 	.word	0x08001ba1
 8001c0c:	08001ceb 	.word	0x08001ceb
 8001c10:	682b      	ldr	r3, [r5, #0]
 8001c12:	1d1a      	adds	r2, r3, #4
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	602a      	str	r2, [r5, #0]
 8001c18:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001c1c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001c20:	2301      	movs	r3, #1
 8001c22:	e09f      	b.n	8001d64 <_printf_i+0x1ec>
 8001c24:	6820      	ldr	r0, [r4, #0]
 8001c26:	682b      	ldr	r3, [r5, #0]
 8001c28:	0607      	lsls	r7, r0, #24
 8001c2a:	f103 0104 	add.w	r1, r3, #4
 8001c2e:	6029      	str	r1, [r5, #0]
 8001c30:	d501      	bpl.n	8001c36 <_printf_i+0xbe>
 8001c32:	681e      	ldr	r6, [r3, #0]
 8001c34:	e003      	b.n	8001c3e <_printf_i+0xc6>
 8001c36:	0646      	lsls	r6, r0, #25
 8001c38:	d5fb      	bpl.n	8001c32 <_printf_i+0xba>
 8001c3a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001c3e:	2e00      	cmp	r6, #0
 8001c40:	da03      	bge.n	8001c4a <_printf_i+0xd2>
 8001c42:	232d      	movs	r3, #45	; 0x2d
 8001c44:	4276      	negs	r6, r6
 8001c46:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c4a:	485a      	ldr	r0, [pc, #360]	; (8001db4 <_printf_i+0x23c>)
 8001c4c:	230a      	movs	r3, #10
 8001c4e:	e012      	b.n	8001c76 <_printf_i+0xfe>
 8001c50:	682b      	ldr	r3, [r5, #0]
 8001c52:	6820      	ldr	r0, [r4, #0]
 8001c54:	1d19      	adds	r1, r3, #4
 8001c56:	6029      	str	r1, [r5, #0]
 8001c58:	0605      	lsls	r5, r0, #24
 8001c5a:	d501      	bpl.n	8001c60 <_printf_i+0xe8>
 8001c5c:	681e      	ldr	r6, [r3, #0]
 8001c5e:	e002      	b.n	8001c66 <_printf_i+0xee>
 8001c60:	0641      	lsls	r1, r0, #25
 8001c62:	d5fb      	bpl.n	8001c5c <_printf_i+0xe4>
 8001c64:	881e      	ldrh	r6, [r3, #0]
 8001c66:	4853      	ldr	r0, [pc, #332]	; (8001db4 <_printf_i+0x23c>)
 8001c68:	2f6f      	cmp	r7, #111	; 0x6f
 8001c6a:	bf0c      	ite	eq
 8001c6c:	2308      	moveq	r3, #8
 8001c6e:	230a      	movne	r3, #10
 8001c70:	2100      	movs	r1, #0
 8001c72:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001c76:	6865      	ldr	r5, [r4, #4]
 8001c78:	60a5      	str	r5, [r4, #8]
 8001c7a:	2d00      	cmp	r5, #0
 8001c7c:	bfa2      	ittt	ge
 8001c7e:	6821      	ldrge	r1, [r4, #0]
 8001c80:	f021 0104 	bicge.w	r1, r1, #4
 8001c84:	6021      	strge	r1, [r4, #0]
 8001c86:	b90e      	cbnz	r6, 8001c8c <_printf_i+0x114>
 8001c88:	2d00      	cmp	r5, #0
 8001c8a:	d04b      	beq.n	8001d24 <_printf_i+0x1ac>
 8001c8c:	4615      	mov	r5, r2
 8001c8e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001c92:	fb03 6711 	mls	r7, r3, r1, r6
 8001c96:	5dc7      	ldrb	r7, [r0, r7]
 8001c98:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001c9c:	4637      	mov	r7, r6
 8001c9e:	42bb      	cmp	r3, r7
 8001ca0:	460e      	mov	r6, r1
 8001ca2:	d9f4      	bls.n	8001c8e <_printf_i+0x116>
 8001ca4:	2b08      	cmp	r3, #8
 8001ca6:	d10b      	bne.n	8001cc0 <_printf_i+0x148>
 8001ca8:	6823      	ldr	r3, [r4, #0]
 8001caa:	07de      	lsls	r6, r3, #31
 8001cac:	d508      	bpl.n	8001cc0 <_printf_i+0x148>
 8001cae:	6923      	ldr	r3, [r4, #16]
 8001cb0:	6861      	ldr	r1, [r4, #4]
 8001cb2:	4299      	cmp	r1, r3
 8001cb4:	bfde      	ittt	le
 8001cb6:	2330      	movle	r3, #48	; 0x30
 8001cb8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001cbc:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8001cc0:	1b52      	subs	r2, r2, r5
 8001cc2:	6122      	str	r2, [r4, #16]
 8001cc4:	f8cd a000 	str.w	sl, [sp]
 8001cc8:	464b      	mov	r3, r9
 8001cca:	aa03      	add	r2, sp, #12
 8001ccc:	4621      	mov	r1, r4
 8001cce:	4640      	mov	r0, r8
 8001cd0:	f7ff fee4 	bl	8001a9c <_printf_common>
 8001cd4:	3001      	adds	r0, #1
 8001cd6:	d14a      	bne.n	8001d6e <_printf_i+0x1f6>
 8001cd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001cdc:	b004      	add	sp, #16
 8001cde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ce2:	6823      	ldr	r3, [r4, #0]
 8001ce4:	f043 0320 	orr.w	r3, r3, #32
 8001ce8:	6023      	str	r3, [r4, #0]
 8001cea:	4833      	ldr	r0, [pc, #204]	; (8001db8 <_printf_i+0x240>)
 8001cec:	2778      	movs	r7, #120	; 0x78
 8001cee:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001cf2:	6823      	ldr	r3, [r4, #0]
 8001cf4:	6829      	ldr	r1, [r5, #0]
 8001cf6:	061f      	lsls	r7, r3, #24
 8001cf8:	f851 6b04 	ldr.w	r6, [r1], #4
 8001cfc:	d402      	bmi.n	8001d04 <_printf_i+0x18c>
 8001cfe:	065f      	lsls	r7, r3, #25
 8001d00:	bf48      	it	mi
 8001d02:	b2b6      	uxthmi	r6, r6
 8001d04:	07df      	lsls	r7, r3, #31
 8001d06:	bf48      	it	mi
 8001d08:	f043 0320 	orrmi.w	r3, r3, #32
 8001d0c:	6029      	str	r1, [r5, #0]
 8001d0e:	bf48      	it	mi
 8001d10:	6023      	strmi	r3, [r4, #0]
 8001d12:	b91e      	cbnz	r6, 8001d1c <_printf_i+0x1a4>
 8001d14:	6823      	ldr	r3, [r4, #0]
 8001d16:	f023 0320 	bic.w	r3, r3, #32
 8001d1a:	6023      	str	r3, [r4, #0]
 8001d1c:	2310      	movs	r3, #16
 8001d1e:	e7a7      	b.n	8001c70 <_printf_i+0xf8>
 8001d20:	4824      	ldr	r0, [pc, #144]	; (8001db4 <_printf_i+0x23c>)
 8001d22:	e7e4      	b.n	8001cee <_printf_i+0x176>
 8001d24:	4615      	mov	r5, r2
 8001d26:	e7bd      	b.n	8001ca4 <_printf_i+0x12c>
 8001d28:	682b      	ldr	r3, [r5, #0]
 8001d2a:	6826      	ldr	r6, [r4, #0]
 8001d2c:	6961      	ldr	r1, [r4, #20]
 8001d2e:	1d18      	adds	r0, r3, #4
 8001d30:	6028      	str	r0, [r5, #0]
 8001d32:	0635      	lsls	r5, r6, #24
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	d501      	bpl.n	8001d3c <_printf_i+0x1c4>
 8001d38:	6019      	str	r1, [r3, #0]
 8001d3a:	e002      	b.n	8001d42 <_printf_i+0x1ca>
 8001d3c:	0670      	lsls	r0, r6, #25
 8001d3e:	d5fb      	bpl.n	8001d38 <_printf_i+0x1c0>
 8001d40:	8019      	strh	r1, [r3, #0]
 8001d42:	2300      	movs	r3, #0
 8001d44:	6123      	str	r3, [r4, #16]
 8001d46:	4615      	mov	r5, r2
 8001d48:	e7bc      	b.n	8001cc4 <_printf_i+0x14c>
 8001d4a:	682b      	ldr	r3, [r5, #0]
 8001d4c:	1d1a      	adds	r2, r3, #4
 8001d4e:	602a      	str	r2, [r5, #0]
 8001d50:	681d      	ldr	r5, [r3, #0]
 8001d52:	6862      	ldr	r2, [r4, #4]
 8001d54:	2100      	movs	r1, #0
 8001d56:	4628      	mov	r0, r5
 8001d58:	f7fe fa3a 	bl	80001d0 <memchr>
 8001d5c:	b108      	cbz	r0, 8001d62 <_printf_i+0x1ea>
 8001d5e:	1b40      	subs	r0, r0, r5
 8001d60:	6060      	str	r0, [r4, #4]
 8001d62:	6863      	ldr	r3, [r4, #4]
 8001d64:	6123      	str	r3, [r4, #16]
 8001d66:	2300      	movs	r3, #0
 8001d68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d6c:	e7aa      	b.n	8001cc4 <_printf_i+0x14c>
 8001d6e:	6923      	ldr	r3, [r4, #16]
 8001d70:	462a      	mov	r2, r5
 8001d72:	4649      	mov	r1, r9
 8001d74:	4640      	mov	r0, r8
 8001d76:	47d0      	blx	sl
 8001d78:	3001      	adds	r0, #1
 8001d7a:	d0ad      	beq.n	8001cd8 <_printf_i+0x160>
 8001d7c:	6823      	ldr	r3, [r4, #0]
 8001d7e:	079b      	lsls	r3, r3, #30
 8001d80:	d413      	bmi.n	8001daa <_printf_i+0x232>
 8001d82:	68e0      	ldr	r0, [r4, #12]
 8001d84:	9b03      	ldr	r3, [sp, #12]
 8001d86:	4298      	cmp	r0, r3
 8001d88:	bfb8      	it	lt
 8001d8a:	4618      	movlt	r0, r3
 8001d8c:	e7a6      	b.n	8001cdc <_printf_i+0x164>
 8001d8e:	2301      	movs	r3, #1
 8001d90:	4632      	mov	r2, r6
 8001d92:	4649      	mov	r1, r9
 8001d94:	4640      	mov	r0, r8
 8001d96:	47d0      	blx	sl
 8001d98:	3001      	adds	r0, #1
 8001d9a:	d09d      	beq.n	8001cd8 <_printf_i+0x160>
 8001d9c:	3501      	adds	r5, #1
 8001d9e:	68e3      	ldr	r3, [r4, #12]
 8001da0:	9903      	ldr	r1, [sp, #12]
 8001da2:	1a5b      	subs	r3, r3, r1
 8001da4:	42ab      	cmp	r3, r5
 8001da6:	dcf2      	bgt.n	8001d8e <_printf_i+0x216>
 8001da8:	e7eb      	b.n	8001d82 <_printf_i+0x20a>
 8001daa:	2500      	movs	r5, #0
 8001dac:	f104 0619 	add.w	r6, r4, #25
 8001db0:	e7f5      	b.n	8001d9e <_printf_i+0x226>
 8001db2:	bf00      	nop
 8001db4:	0800467e 	.word	0x0800467e
 8001db8:	0800468f 	.word	0x0800468f

08001dbc <siprintf>:
 8001dbc:	b40e      	push	{r1, r2, r3}
 8001dbe:	b500      	push	{lr}
 8001dc0:	b09c      	sub	sp, #112	; 0x70
 8001dc2:	ab1d      	add	r3, sp, #116	; 0x74
 8001dc4:	9002      	str	r0, [sp, #8]
 8001dc6:	9006      	str	r0, [sp, #24]
 8001dc8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8001dcc:	4809      	ldr	r0, [pc, #36]	; (8001df4 <siprintf+0x38>)
 8001dce:	9107      	str	r1, [sp, #28]
 8001dd0:	9104      	str	r1, [sp, #16]
 8001dd2:	4909      	ldr	r1, [pc, #36]	; (8001df8 <siprintf+0x3c>)
 8001dd4:	f853 2b04 	ldr.w	r2, [r3], #4
 8001dd8:	9105      	str	r1, [sp, #20]
 8001dda:	6800      	ldr	r0, [r0, #0]
 8001ddc:	9301      	str	r3, [sp, #4]
 8001dde:	a902      	add	r1, sp, #8
 8001de0:	f001 f84a 	bl	8002e78 <_svfiprintf_r>
 8001de4:	9b02      	ldr	r3, [sp, #8]
 8001de6:	2200      	movs	r2, #0
 8001de8:	701a      	strb	r2, [r3, #0]
 8001dea:	b01c      	add	sp, #112	; 0x70
 8001dec:	f85d eb04 	ldr.w	lr, [sp], #4
 8001df0:	b003      	add	sp, #12
 8001df2:	4770      	bx	lr
 8001df4:	20000058 	.word	0x20000058
 8001df8:	ffff0208 	.word	0xffff0208

08001dfc <std>:
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	b510      	push	{r4, lr}
 8001e00:	4604      	mov	r4, r0
 8001e02:	e9c0 3300 	strd	r3, r3, [r0]
 8001e06:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001e0a:	6083      	str	r3, [r0, #8]
 8001e0c:	8181      	strh	r1, [r0, #12]
 8001e0e:	6643      	str	r3, [r0, #100]	; 0x64
 8001e10:	81c2      	strh	r2, [r0, #14]
 8001e12:	6183      	str	r3, [r0, #24]
 8001e14:	4619      	mov	r1, r3
 8001e16:	2208      	movs	r2, #8
 8001e18:	305c      	adds	r0, #92	; 0x5c
 8001e1a:	f000 f91f 	bl	800205c <memset>
 8001e1e:	4b0d      	ldr	r3, [pc, #52]	; (8001e54 <std+0x58>)
 8001e20:	6263      	str	r3, [r4, #36]	; 0x24
 8001e22:	4b0d      	ldr	r3, [pc, #52]	; (8001e58 <std+0x5c>)
 8001e24:	62a3      	str	r3, [r4, #40]	; 0x28
 8001e26:	4b0d      	ldr	r3, [pc, #52]	; (8001e5c <std+0x60>)
 8001e28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001e2a:	4b0d      	ldr	r3, [pc, #52]	; (8001e60 <std+0x64>)
 8001e2c:	6323      	str	r3, [r4, #48]	; 0x30
 8001e2e:	4b0d      	ldr	r3, [pc, #52]	; (8001e64 <std+0x68>)
 8001e30:	6224      	str	r4, [r4, #32]
 8001e32:	429c      	cmp	r4, r3
 8001e34:	d006      	beq.n	8001e44 <std+0x48>
 8001e36:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001e3a:	4294      	cmp	r4, r2
 8001e3c:	d002      	beq.n	8001e44 <std+0x48>
 8001e3e:	33d0      	adds	r3, #208	; 0xd0
 8001e40:	429c      	cmp	r4, r3
 8001e42:	d105      	bne.n	8001e50 <std+0x54>
 8001e44:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001e48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e4c:	f000 b93c 	b.w	80020c8 <__retarget_lock_init_recursive>
 8001e50:	bd10      	pop	{r4, pc}
 8001e52:	bf00      	nop
 8001e54:	08003cb9 	.word	0x08003cb9
 8001e58:	08003cdb 	.word	0x08003cdb
 8001e5c:	08003d13 	.word	0x08003d13
 8001e60:	08003d37 	.word	0x08003d37
 8001e64:	200001e8 	.word	0x200001e8

08001e68 <stdio_exit_handler>:
 8001e68:	4a02      	ldr	r2, [pc, #8]	; (8001e74 <stdio_exit_handler+0xc>)
 8001e6a:	4903      	ldr	r1, [pc, #12]	; (8001e78 <stdio_exit_handler+0x10>)
 8001e6c:	4803      	ldr	r0, [pc, #12]	; (8001e7c <stdio_exit_handler+0x14>)
 8001e6e:	f000 b869 	b.w	8001f44 <_fwalk_sglue>
 8001e72:	bf00      	nop
 8001e74:	20000000 	.word	0x20000000
 8001e78:	08003559 	.word	0x08003559
 8001e7c:	2000000c 	.word	0x2000000c

08001e80 <cleanup_stdio>:
 8001e80:	6841      	ldr	r1, [r0, #4]
 8001e82:	4b0c      	ldr	r3, [pc, #48]	; (8001eb4 <cleanup_stdio+0x34>)
 8001e84:	4299      	cmp	r1, r3
 8001e86:	b510      	push	{r4, lr}
 8001e88:	4604      	mov	r4, r0
 8001e8a:	d001      	beq.n	8001e90 <cleanup_stdio+0x10>
 8001e8c:	f001 fb64 	bl	8003558 <_fflush_r>
 8001e90:	68a1      	ldr	r1, [r4, #8]
 8001e92:	4b09      	ldr	r3, [pc, #36]	; (8001eb8 <cleanup_stdio+0x38>)
 8001e94:	4299      	cmp	r1, r3
 8001e96:	d002      	beq.n	8001e9e <cleanup_stdio+0x1e>
 8001e98:	4620      	mov	r0, r4
 8001e9a:	f001 fb5d 	bl	8003558 <_fflush_r>
 8001e9e:	68e1      	ldr	r1, [r4, #12]
 8001ea0:	4b06      	ldr	r3, [pc, #24]	; (8001ebc <cleanup_stdio+0x3c>)
 8001ea2:	4299      	cmp	r1, r3
 8001ea4:	d004      	beq.n	8001eb0 <cleanup_stdio+0x30>
 8001ea6:	4620      	mov	r0, r4
 8001ea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001eac:	f001 bb54 	b.w	8003558 <_fflush_r>
 8001eb0:	bd10      	pop	{r4, pc}
 8001eb2:	bf00      	nop
 8001eb4:	200001e8 	.word	0x200001e8
 8001eb8:	20000250 	.word	0x20000250
 8001ebc:	200002b8 	.word	0x200002b8

08001ec0 <global_stdio_init.part.0>:
 8001ec0:	b510      	push	{r4, lr}
 8001ec2:	4b0b      	ldr	r3, [pc, #44]	; (8001ef0 <global_stdio_init.part.0+0x30>)
 8001ec4:	4c0b      	ldr	r4, [pc, #44]	; (8001ef4 <global_stdio_init.part.0+0x34>)
 8001ec6:	4a0c      	ldr	r2, [pc, #48]	; (8001ef8 <global_stdio_init.part.0+0x38>)
 8001ec8:	601a      	str	r2, [r3, #0]
 8001eca:	4620      	mov	r0, r4
 8001ecc:	2200      	movs	r2, #0
 8001ece:	2104      	movs	r1, #4
 8001ed0:	f7ff ff94 	bl	8001dfc <std>
 8001ed4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001ed8:	2201      	movs	r2, #1
 8001eda:	2109      	movs	r1, #9
 8001edc:	f7ff ff8e 	bl	8001dfc <std>
 8001ee0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001ee4:	2202      	movs	r2, #2
 8001ee6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001eea:	2112      	movs	r1, #18
 8001eec:	f7ff bf86 	b.w	8001dfc <std>
 8001ef0:	20000320 	.word	0x20000320
 8001ef4:	200001e8 	.word	0x200001e8
 8001ef8:	08001e69 	.word	0x08001e69

08001efc <__sfp_lock_acquire>:
 8001efc:	4801      	ldr	r0, [pc, #4]	; (8001f04 <__sfp_lock_acquire+0x8>)
 8001efe:	f000 b8e4 	b.w	80020ca <__retarget_lock_acquire_recursive>
 8001f02:	bf00      	nop
 8001f04:	20000325 	.word	0x20000325

08001f08 <__sfp_lock_release>:
 8001f08:	4801      	ldr	r0, [pc, #4]	; (8001f10 <__sfp_lock_release+0x8>)
 8001f0a:	f000 b8df 	b.w	80020cc <__retarget_lock_release_recursive>
 8001f0e:	bf00      	nop
 8001f10:	20000325 	.word	0x20000325

08001f14 <__sinit>:
 8001f14:	b510      	push	{r4, lr}
 8001f16:	4604      	mov	r4, r0
 8001f18:	f7ff fff0 	bl	8001efc <__sfp_lock_acquire>
 8001f1c:	6a23      	ldr	r3, [r4, #32]
 8001f1e:	b11b      	cbz	r3, 8001f28 <__sinit+0x14>
 8001f20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f24:	f7ff bff0 	b.w	8001f08 <__sfp_lock_release>
 8001f28:	4b04      	ldr	r3, [pc, #16]	; (8001f3c <__sinit+0x28>)
 8001f2a:	6223      	str	r3, [r4, #32]
 8001f2c:	4b04      	ldr	r3, [pc, #16]	; (8001f40 <__sinit+0x2c>)
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d1f5      	bne.n	8001f20 <__sinit+0xc>
 8001f34:	f7ff ffc4 	bl	8001ec0 <global_stdio_init.part.0>
 8001f38:	e7f2      	b.n	8001f20 <__sinit+0xc>
 8001f3a:	bf00      	nop
 8001f3c:	08001e81 	.word	0x08001e81
 8001f40:	20000320 	.word	0x20000320

08001f44 <_fwalk_sglue>:
 8001f44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001f48:	4607      	mov	r7, r0
 8001f4a:	4688      	mov	r8, r1
 8001f4c:	4614      	mov	r4, r2
 8001f4e:	2600      	movs	r6, #0
 8001f50:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001f54:	f1b9 0901 	subs.w	r9, r9, #1
 8001f58:	d505      	bpl.n	8001f66 <_fwalk_sglue+0x22>
 8001f5a:	6824      	ldr	r4, [r4, #0]
 8001f5c:	2c00      	cmp	r4, #0
 8001f5e:	d1f7      	bne.n	8001f50 <_fwalk_sglue+0xc>
 8001f60:	4630      	mov	r0, r6
 8001f62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001f66:	89ab      	ldrh	r3, [r5, #12]
 8001f68:	2b01      	cmp	r3, #1
 8001f6a:	d907      	bls.n	8001f7c <_fwalk_sglue+0x38>
 8001f6c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001f70:	3301      	adds	r3, #1
 8001f72:	d003      	beq.n	8001f7c <_fwalk_sglue+0x38>
 8001f74:	4629      	mov	r1, r5
 8001f76:	4638      	mov	r0, r7
 8001f78:	47c0      	blx	r8
 8001f7a:	4306      	orrs	r6, r0
 8001f7c:	3568      	adds	r5, #104	; 0x68
 8001f7e:	e7e9      	b.n	8001f54 <_fwalk_sglue+0x10>

08001f80 <iprintf>:
 8001f80:	b40f      	push	{r0, r1, r2, r3}
 8001f82:	b507      	push	{r0, r1, r2, lr}
 8001f84:	4906      	ldr	r1, [pc, #24]	; (8001fa0 <iprintf+0x20>)
 8001f86:	ab04      	add	r3, sp, #16
 8001f88:	6808      	ldr	r0, [r1, #0]
 8001f8a:	f853 2b04 	ldr.w	r2, [r3], #4
 8001f8e:	6881      	ldr	r1, [r0, #8]
 8001f90:	9301      	str	r3, [sp, #4]
 8001f92:	f001 f899 	bl	80030c8 <_vfiprintf_r>
 8001f96:	b003      	add	sp, #12
 8001f98:	f85d eb04 	ldr.w	lr, [sp], #4
 8001f9c:	b004      	add	sp, #16
 8001f9e:	4770      	bx	lr
 8001fa0:	20000058 	.word	0x20000058

08001fa4 <_puts_r>:
 8001fa4:	6a03      	ldr	r3, [r0, #32]
 8001fa6:	b570      	push	{r4, r5, r6, lr}
 8001fa8:	6884      	ldr	r4, [r0, #8]
 8001faa:	4605      	mov	r5, r0
 8001fac:	460e      	mov	r6, r1
 8001fae:	b90b      	cbnz	r3, 8001fb4 <_puts_r+0x10>
 8001fb0:	f7ff ffb0 	bl	8001f14 <__sinit>
 8001fb4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001fb6:	07db      	lsls	r3, r3, #31
 8001fb8:	d405      	bmi.n	8001fc6 <_puts_r+0x22>
 8001fba:	89a3      	ldrh	r3, [r4, #12]
 8001fbc:	0598      	lsls	r0, r3, #22
 8001fbe:	d402      	bmi.n	8001fc6 <_puts_r+0x22>
 8001fc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001fc2:	f000 f882 	bl	80020ca <__retarget_lock_acquire_recursive>
 8001fc6:	89a3      	ldrh	r3, [r4, #12]
 8001fc8:	0719      	lsls	r1, r3, #28
 8001fca:	d513      	bpl.n	8001ff4 <_puts_r+0x50>
 8001fcc:	6923      	ldr	r3, [r4, #16]
 8001fce:	b18b      	cbz	r3, 8001ff4 <_puts_r+0x50>
 8001fd0:	3e01      	subs	r6, #1
 8001fd2:	68a3      	ldr	r3, [r4, #8]
 8001fd4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001fd8:	3b01      	subs	r3, #1
 8001fda:	60a3      	str	r3, [r4, #8]
 8001fdc:	b9e9      	cbnz	r1, 800201a <_puts_r+0x76>
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	da2e      	bge.n	8002040 <_puts_r+0x9c>
 8001fe2:	4622      	mov	r2, r4
 8001fe4:	210a      	movs	r1, #10
 8001fe6:	4628      	mov	r0, r5
 8001fe8:	f001 fed8 	bl	8003d9c <__swbuf_r>
 8001fec:	3001      	adds	r0, #1
 8001fee:	d007      	beq.n	8002000 <_puts_r+0x5c>
 8001ff0:	250a      	movs	r5, #10
 8001ff2:	e007      	b.n	8002004 <_puts_r+0x60>
 8001ff4:	4621      	mov	r1, r4
 8001ff6:	4628      	mov	r0, r5
 8001ff8:	f001 ff0e 	bl	8003e18 <__swsetup_r>
 8001ffc:	2800      	cmp	r0, #0
 8001ffe:	d0e7      	beq.n	8001fd0 <_puts_r+0x2c>
 8002000:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8002004:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002006:	07da      	lsls	r2, r3, #31
 8002008:	d405      	bmi.n	8002016 <_puts_r+0x72>
 800200a:	89a3      	ldrh	r3, [r4, #12]
 800200c:	059b      	lsls	r3, r3, #22
 800200e:	d402      	bmi.n	8002016 <_puts_r+0x72>
 8002010:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002012:	f000 f85b 	bl	80020cc <__retarget_lock_release_recursive>
 8002016:	4628      	mov	r0, r5
 8002018:	bd70      	pop	{r4, r5, r6, pc}
 800201a:	2b00      	cmp	r3, #0
 800201c:	da04      	bge.n	8002028 <_puts_r+0x84>
 800201e:	69a2      	ldr	r2, [r4, #24]
 8002020:	429a      	cmp	r2, r3
 8002022:	dc06      	bgt.n	8002032 <_puts_r+0x8e>
 8002024:	290a      	cmp	r1, #10
 8002026:	d004      	beq.n	8002032 <_puts_r+0x8e>
 8002028:	6823      	ldr	r3, [r4, #0]
 800202a:	1c5a      	adds	r2, r3, #1
 800202c:	6022      	str	r2, [r4, #0]
 800202e:	7019      	strb	r1, [r3, #0]
 8002030:	e7cf      	b.n	8001fd2 <_puts_r+0x2e>
 8002032:	4622      	mov	r2, r4
 8002034:	4628      	mov	r0, r5
 8002036:	f001 feb1 	bl	8003d9c <__swbuf_r>
 800203a:	3001      	adds	r0, #1
 800203c:	d1c9      	bne.n	8001fd2 <_puts_r+0x2e>
 800203e:	e7df      	b.n	8002000 <_puts_r+0x5c>
 8002040:	6823      	ldr	r3, [r4, #0]
 8002042:	250a      	movs	r5, #10
 8002044:	1c5a      	adds	r2, r3, #1
 8002046:	6022      	str	r2, [r4, #0]
 8002048:	701d      	strb	r5, [r3, #0]
 800204a:	e7db      	b.n	8002004 <_puts_r+0x60>

0800204c <puts>:
 800204c:	4b02      	ldr	r3, [pc, #8]	; (8002058 <puts+0xc>)
 800204e:	4601      	mov	r1, r0
 8002050:	6818      	ldr	r0, [r3, #0]
 8002052:	f7ff bfa7 	b.w	8001fa4 <_puts_r>
 8002056:	bf00      	nop
 8002058:	20000058 	.word	0x20000058

0800205c <memset>:
 800205c:	4402      	add	r2, r0
 800205e:	4603      	mov	r3, r0
 8002060:	4293      	cmp	r3, r2
 8002062:	d100      	bne.n	8002066 <memset+0xa>
 8002064:	4770      	bx	lr
 8002066:	f803 1b01 	strb.w	r1, [r3], #1
 800206a:	e7f9      	b.n	8002060 <memset+0x4>

0800206c <_localeconv_r>:
 800206c:	4800      	ldr	r0, [pc, #0]	; (8002070 <_localeconv_r+0x4>)
 800206e:	4770      	bx	lr
 8002070:	2000014c 	.word	0x2000014c

08002074 <__errno>:
 8002074:	4b01      	ldr	r3, [pc, #4]	; (800207c <__errno+0x8>)
 8002076:	6818      	ldr	r0, [r3, #0]
 8002078:	4770      	bx	lr
 800207a:	bf00      	nop
 800207c:	20000058 	.word	0x20000058

08002080 <__libc_init_array>:
 8002080:	b570      	push	{r4, r5, r6, lr}
 8002082:	4d0d      	ldr	r5, [pc, #52]	; (80020b8 <__libc_init_array+0x38>)
 8002084:	4c0d      	ldr	r4, [pc, #52]	; (80020bc <__libc_init_array+0x3c>)
 8002086:	1b64      	subs	r4, r4, r5
 8002088:	10a4      	asrs	r4, r4, #2
 800208a:	2600      	movs	r6, #0
 800208c:	42a6      	cmp	r6, r4
 800208e:	d109      	bne.n	80020a4 <__libc_init_array+0x24>
 8002090:	4d0b      	ldr	r5, [pc, #44]	; (80020c0 <__libc_init_array+0x40>)
 8002092:	4c0c      	ldr	r4, [pc, #48]	; (80020c4 <__libc_init_array+0x44>)
 8002094:	f002 f91e 	bl	80042d4 <_init>
 8002098:	1b64      	subs	r4, r4, r5
 800209a:	10a4      	asrs	r4, r4, #2
 800209c:	2600      	movs	r6, #0
 800209e:	42a6      	cmp	r6, r4
 80020a0:	d105      	bne.n	80020ae <__libc_init_array+0x2e>
 80020a2:	bd70      	pop	{r4, r5, r6, pc}
 80020a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80020a8:	4798      	blx	r3
 80020aa:	3601      	adds	r6, #1
 80020ac:	e7ee      	b.n	800208c <__libc_init_array+0xc>
 80020ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80020b2:	4798      	blx	r3
 80020b4:	3601      	adds	r6, #1
 80020b6:	e7f2      	b.n	800209e <__libc_init_array+0x1e>
 80020b8:	080049dc 	.word	0x080049dc
 80020bc:	080049dc 	.word	0x080049dc
 80020c0:	080049dc 	.word	0x080049dc
 80020c4:	080049e0 	.word	0x080049e0

080020c8 <__retarget_lock_init_recursive>:
 80020c8:	4770      	bx	lr

080020ca <__retarget_lock_acquire_recursive>:
 80020ca:	4770      	bx	lr

080020cc <__retarget_lock_release_recursive>:
 80020cc:	4770      	bx	lr

080020ce <quorem>:
 80020ce:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020d2:	6903      	ldr	r3, [r0, #16]
 80020d4:	690c      	ldr	r4, [r1, #16]
 80020d6:	42a3      	cmp	r3, r4
 80020d8:	4607      	mov	r7, r0
 80020da:	db7e      	blt.n	80021da <quorem+0x10c>
 80020dc:	3c01      	subs	r4, #1
 80020de:	f101 0814 	add.w	r8, r1, #20
 80020e2:	f100 0514 	add.w	r5, r0, #20
 80020e6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80020ea:	9301      	str	r3, [sp, #4]
 80020ec:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80020f0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80020f4:	3301      	adds	r3, #1
 80020f6:	429a      	cmp	r2, r3
 80020f8:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80020fc:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002100:	fbb2 f6f3 	udiv	r6, r2, r3
 8002104:	d331      	bcc.n	800216a <quorem+0x9c>
 8002106:	f04f 0e00 	mov.w	lr, #0
 800210a:	4640      	mov	r0, r8
 800210c:	46ac      	mov	ip, r5
 800210e:	46f2      	mov	sl, lr
 8002110:	f850 2b04 	ldr.w	r2, [r0], #4
 8002114:	b293      	uxth	r3, r2
 8002116:	fb06 e303 	mla	r3, r6, r3, lr
 800211a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800211e:	0c1a      	lsrs	r2, r3, #16
 8002120:	b29b      	uxth	r3, r3
 8002122:	ebaa 0303 	sub.w	r3, sl, r3
 8002126:	f8dc a000 	ldr.w	sl, [ip]
 800212a:	fa13 f38a 	uxtah	r3, r3, sl
 800212e:	fb06 220e 	mla	r2, r6, lr, r2
 8002132:	9300      	str	r3, [sp, #0]
 8002134:	9b00      	ldr	r3, [sp, #0]
 8002136:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800213a:	b292      	uxth	r2, r2
 800213c:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002140:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002144:	f8bd 3000 	ldrh.w	r3, [sp]
 8002148:	4581      	cmp	r9, r0
 800214a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800214e:	f84c 3b04 	str.w	r3, [ip], #4
 8002152:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002156:	d2db      	bcs.n	8002110 <quorem+0x42>
 8002158:	f855 300b 	ldr.w	r3, [r5, fp]
 800215c:	b92b      	cbnz	r3, 800216a <quorem+0x9c>
 800215e:	9b01      	ldr	r3, [sp, #4]
 8002160:	3b04      	subs	r3, #4
 8002162:	429d      	cmp	r5, r3
 8002164:	461a      	mov	r2, r3
 8002166:	d32c      	bcc.n	80021c2 <quorem+0xf4>
 8002168:	613c      	str	r4, [r7, #16]
 800216a:	4638      	mov	r0, r7
 800216c:	f001 fca4 	bl	8003ab8 <__mcmp>
 8002170:	2800      	cmp	r0, #0
 8002172:	db22      	blt.n	80021ba <quorem+0xec>
 8002174:	3601      	adds	r6, #1
 8002176:	4629      	mov	r1, r5
 8002178:	2000      	movs	r0, #0
 800217a:	f858 2b04 	ldr.w	r2, [r8], #4
 800217e:	f8d1 c000 	ldr.w	ip, [r1]
 8002182:	b293      	uxth	r3, r2
 8002184:	1ac3      	subs	r3, r0, r3
 8002186:	0c12      	lsrs	r2, r2, #16
 8002188:	fa13 f38c 	uxtah	r3, r3, ip
 800218c:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002190:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002194:	b29b      	uxth	r3, r3
 8002196:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800219a:	45c1      	cmp	r9, r8
 800219c:	f841 3b04 	str.w	r3, [r1], #4
 80021a0:	ea4f 4022 	mov.w	r0, r2, asr #16
 80021a4:	d2e9      	bcs.n	800217a <quorem+0xac>
 80021a6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80021aa:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80021ae:	b922      	cbnz	r2, 80021ba <quorem+0xec>
 80021b0:	3b04      	subs	r3, #4
 80021b2:	429d      	cmp	r5, r3
 80021b4:	461a      	mov	r2, r3
 80021b6:	d30a      	bcc.n	80021ce <quorem+0x100>
 80021b8:	613c      	str	r4, [r7, #16]
 80021ba:	4630      	mov	r0, r6
 80021bc:	b003      	add	sp, #12
 80021be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021c2:	6812      	ldr	r2, [r2, #0]
 80021c4:	3b04      	subs	r3, #4
 80021c6:	2a00      	cmp	r2, #0
 80021c8:	d1ce      	bne.n	8002168 <quorem+0x9a>
 80021ca:	3c01      	subs	r4, #1
 80021cc:	e7c9      	b.n	8002162 <quorem+0x94>
 80021ce:	6812      	ldr	r2, [r2, #0]
 80021d0:	3b04      	subs	r3, #4
 80021d2:	2a00      	cmp	r2, #0
 80021d4:	d1f0      	bne.n	80021b8 <quorem+0xea>
 80021d6:	3c01      	subs	r4, #1
 80021d8:	e7eb      	b.n	80021b2 <quorem+0xe4>
 80021da:	2000      	movs	r0, #0
 80021dc:	e7ee      	b.n	80021bc <quorem+0xee>
	...

080021e0 <_dtoa_r>:
 80021e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021e4:	ed2d 8b04 	vpush	{d8-d9}
 80021e8:	69c5      	ldr	r5, [r0, #28]
 80021ea:	b093      	sub	sp, #76	; 0x4c
 80021ec:	ed8d 0b02 	vstr	d0, [sp, #8]
 80021f0:	ec57 6b10 	vmov	r6, r7, d0
 80021f4:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80021f8:	9107      	str	r1, [sp, #28]
 80021fa:	4604      	mov	r4, r0
 80021fc:	920a      	str	r2, [sp, #40]	; 0x28
 80021fe:	930d      	str	r3, [sp, #52]	; 0x34
 8002200:	b975      	cbnz	r5, 8002220 <_dtoa_r+0x40>
 8002202:	2010      	movs	r0, #16
 8002204:	f001 f87a 	bl	80032fc <malloc>
 8002208:	4602      	mov	r2, r0
 800220a:	61e0      	str	r0, [r4, #28]
 800220c:	b920      	cbnz	r0, 8002218 <_dtoa_r+0x38>
 800220e:	4bae      	ldr	r3, [pc, #696]	; (80024c8 <_dtoa_r+0x2e8>)
 8002210:	21ef      	movs	r1, #239	; 0xef
 8002212:	48ae      	ldr	r0, [pc, #696]	; (80024cc <_dtoa_r+0x2ec>)
 8002214:	f001 ff5a 	bl	80040cc <__assert_func>
 8002218:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800221c:	6005      	str	r5, [r0, #0]
 800221e:	60c5      	str	r5, [r0, #12]
 8002220:	69e3      	ldr	r3, [r4, #28]
 8002222:	6819      	ldr	r1, [r3, #0]
 8002224:	b151      	cbz	r1, 800223c <_dtoa_r+0x5c>
 8002226:	685a      	ldr	r2, [r3, #4]
 8002228:	604a      	str	r2, [r1, #4]
 800222a:	2301      	movs	r3, #1
 800222c:	4093      	lsls	r3, r2
 800222e:	608b      	str	r3, [r1, #8]
 8002230:	4620      	mov	r0, r4
 8002232:	f001 fa05 	bl	8003640 <_Bfree>
 8002236:	69e3      	ldr	r3, [r4, #28]
 8002238:	2200      	movs	r2, #0
 800223a:	601a      	str	r2, [r3, #0]
 800223c:	1e3b      	subs	r3, r7, #0
 800223e:	bfbb      	ittet	lt
 8002240:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002244:	9303      	strlt	r3, [sp, #12]
 8002246:	2300      	movge	r3, #0
 8002248:	2201      	movlt	r2, #1
 800224a:	bfac      	ite	ge
 800224c:	f8c8 3000 	strge.w	r3, [r8]
 8002250:	f8c8 2000 	strlt.w	r2, [r8]
 8002254:	4b9e      	ldr	r3, [pc, #632]	; (80024d0 <_dtoa_r+0x2f0>)
 8002256:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800225a:	ea33 0308 	bics.w	r3, r3, r8
 800225e:	d11b      	bne.n	8002298 <_dtoa_r+0xb8>
 8002260:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002262:	f242 730f 	movw	r3, #9999	; 0x270f
 8002266:	6013      	str	r3, [r2, #0]
 8002268:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800226c:	4333      	orrs	r3, r6
 800226e:	f000 8593 	beq.w	8002d98 <_dtoa_r+0xbb8>
 8002272:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002274:	b963      	cbnz	r3, 8002290 <_dtoa_r+0xb0>
 8002276:	4b97      	ldr	r3, [pc, #604]	; (80024d4 <_dtoa_r+0x2f4>)
 8002278:	e027      	b.n	80022ca <_dtoa_r+0xea>
 800227a:	4b97      	ldr	r3, [pc, #604]	; (80024d8 <_dtoa_r+0x2f8>)
 800227c:	9300      	str	r3, [sp, #0]
 800227e:	3308      	adds	r3, #8
 8002280:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002282:	6013      	str	r3, [r2, #0]
 8002284:	9800      	ldr	r0, [sp, #0]
 8002286:	b013      	add	sp, #76	; 0x4c
 8002288:	ecbd 8b04 	vpop	{d8-d9}
 800228c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002290:	4b90      	ldr	r3, [pc, #576]	; (80024d4 <_dtoa_r+0x2f4>)
 8002292:	9300      	str	r3, [sp, #0]
 8002294:	3303      	adds	r3, #3
 8002296:	e7f3      	b.n	8002280 <_dtoa_r+0xa0>
 8002298:	ed9d 7b02 	vldr	d7, [sp, #8]
 800229c:	2200      	movs	r2, #0
 800229e:	ec51 0b17 	vmov	r0, r1, d7
 80022a2:	eeb0 8a47 	vmov.f32	s16, s14
 80022a6:	eef0 8a67 	vmov.f32	s17, s15
 80022aa:	2300      	movs	r3, #0
 80022ac:	f7fe fc0c 	bl	8000ac8 <__aeabi_dcmpeq>
 80022b0:	4681      	mov	r9, r0
 80022b2:	b160      	cbz	r0, 80022ce <_dtoa_r+0xee>
 80022b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80022b6:	2301      	movs	r3, #1
 80022b8:	6013      	str	r3, [r2, #0]
 80022ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80022bc:	2b00      	cmp	r3, #0
 80022be:	f000 8568 	beq.w	8002d92 <_dtoa_r+0xbb2>
 80022c2:	4b86      	ldr	r3, [pc, #536]	; (80024dc <_dtoa_r+0x2fc>)
 80022c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80022c6:	6013      	str	r3, [r2, #0]
 80022c8:	3b01      	subs	r3, #1
 80022ca:	9300      	str	r3, [sp, #0]
 80022cc:	e7da      	b.n	8002284 <_dtoa_r+0xa4>
 80022ce:	aa10      	add	r2, sp, #64	; 0x40
 80022d0:	a911      	add	r1, sp, #68	; 0x44
 80022d2:	4620      	mov	r0, r4
 80022d4:	eeb0 0a48 	vmov.f32	s0, s16
 80022d8:	eef0 0a68 	vmov.f32	s1, s17
 80022dc:	f001 fc92 	bl	8003c04 <__d2b>
 80022e0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80022e4:	4682      	mov	sl, r0
 80022e6:	2d00      	cmp	r5, #0
 80022e8:	d07f      	beq.n	80023ea <_dtoa_r+0x20a>
 80022ea:	ee18 3a90 	vmov	r3, s17
 80022ee:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80022f2:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80022f6:	ec51 0b18 	vmov	r0, r1, d8
 80022fa:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80022fe:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002302:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8002306:	4619      	mov	r1, r3
 8002308:	2200      	movs	r2, #0
 800230a:	4b75      	ldr	r3, [pc, #468]	; (80024e0 <_dtoa_r+0x300>)
 800230c:	f7fd ffbc 	bl	8000288 <__aeabi_dsub>
 8002310:	a367      	add	r3, pc, #412	; (adr r3, 80024b0 <_dtoa_r+0x2d0>)
 8002312:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002316:	f7fe f96f 	bl	80005f8 <__aeabi_dmul>
 800231a:	a367      	add	r3, pc, #412	; (adr r3, 80024b8 <_dtoa_r+0x2d8>)
 800231c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002320:	f7fd ffb4 	bl	800028c <__adddf3>
 8002324:	4606      	mov	r6, r0
 8002326:	4628      	mov	r0, r5
 8002328:	460f      	mov	r7, r1
 800232a:	f7fe f8fb 	bl	8000524 <__aeabi_i2d>
 800232e:	a364      	add	r3, pc, #400	; (adr r3, 80024c0 <_dtoa_r+0x2e0>)
 8002330:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002334:	f7fe f960 	bl	80005f8 <__aeabi_dmul>
 8002338:	4602      	mov	r2, r0
 800233a:	460b      	mov	r3, r1
 800233c:	4630      	mov	r0, r6
 800233e:	4639      	mov	r1, r7
 8002340:	f7fd ffa4 	bl	800028c <__adddf3>
 8002344:	4606      	mov	r6, r0
 8002346:	460f      	mov	r7, r1
 8002348:	f7fe fc06 	bl	8000b58 <__aeabi_d2iz>
 800234c:	2200      	movs	r2, #0
 800234e:	4683      	mov	fp, r0
 8002350:	2300      	movs	r3, #0
 8002352:	4630      	mov	r0, r6
 8002354:	4639      	mov	r1, r7
 8002356:	f7fe fbc1 	bl	8000adc <__aeabi_dcmplt>
 800235a:	b148      	cbz	r0, 8002370 <_dtoa_r+0x190>
 800235c:	4658      	mov	r0, fp
 800235e:	f7fe f8e1 	bl	8000524 <__aeabi_i2d>
 8002362:	4632      	mov	r2, r6
 8002364:	463b      	mov	r3, r7
 8002366:	f7fe fbaf 	bl	8000ac8 <__aeabi_dcmpeq>
 800236a:	b908      	cbnz	r0, 8002370 <_dtoa_r+0x190>
 800236c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002370:	f1bb 0f16 	cmp.w	fp, #22
 8002374:	d857      	bhi.n	8002426 <_dtoa_r+0x246>
 8002376:	4b5b      	ldr	r3, [pc, #364]	; (80024e4 <_dtoa_r+0x304>)
 8002378:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800237c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002380:	ec51 0b18 	vmov	r0, r1, d8
 8002384:	f7fe fbaa 	bl	8000adc <__aeabi_dcmplt>
 8002388:	2800      	cmp	r0, #0
 800238a:	d04e      	beq.n	800242a <_dtoa_r+0x24a>
 800238c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002390:	2300      	movs	r3, #0
 8002392:	930c      	str	r3, [sp, #48]	; 0x30
 8002394:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002396:	1b5b      	subs	r3, r3, r5
 8002398:	1e5a      	subs	r2, r3, #1
 800239a:	bf45      	ittet	mi
 800239c:	f1c3 0301 	rsbmi	r3, r3, #1
 80023a0:	9305      	strmi	r3, [sp, #20]
 80023a2:	2300      	movpl	r3, #0
 80023a4:	2300      	movmi	r3, #0
 80023a6:	9206      	str	r2, [sp, #24]
 80023a8:	bf54      	ite	pl
 80023aa:	9305      	strpl	r3, [sp, #20]
 80023ac:	9306      	strmi	r3, [sp, #24]
 80023ae:	f1bb 0f00 	cmp.w	fp, #0
 80023b2:	db3c      	blt.n	800242e <_dtoa_r+0x24e>
 80023b4:	9b06      	ldr	r3, [sp, #24]
 80023b6:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80023ba:	445b      	add	r3, fp
 80023bc:	9306      	str	r3, [sp, #24]
 80023be:	2300      	movs	r3, #0
 80023c0:	9308      	str	r3, [sp, #32]
 80023c2:	9b07      	ldr	r3, [sp, #28]
 80023c4:	2b09      	cmp	r3, #9
 80023c6:	d868      	bhi.n	800249a <_dtoa_r+0x2ba>
 80023c8:	2b05      	cmp	r3, #5
 80023ca:	bfc4      	itt	gt
 80023cc:	3b04      	subgt	r3, #4
 80023ce:	9307      	strgt	r3, [sp, #28]
 80023d0:	9b07      	ldr	r3, [sp, #28]
 80023d2:	f1a3 0302 	sub.w	r3, r3, #2
 80023d6:	bfcc      	ite	gt
 80023d8:	2500      	movgt	r5, #0
 80023da:	2501      	movle	r5, #1
 80023dc:	2b03      	cmp	r3, #3
 80023de:	f200 8085 	bhi.w	80024ec <_dtoa_r+0x30c>
 80023e2:	e8df f003 	tbb	[pc, r3]
 80023e6:	3b2e      	.short	0x3b2e
 80023e8:	5839      	.short	0x5839
 80023ea:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80023ee:	441d      	add	r5, r3
 80023f0:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80023f4:	2b20      	cmp	r3, #32
 80023f6:	bfc1      	itttt	gt
 80023f8:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80023fc:	fa08 f803 	lslgt.w	r8, r8, r3
 8002400:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8002404:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002408:	bfd6      	itet	le
 800240a:	f1c3 0320 	rsble	r3, r3, #32
 800240e:	ea48 0003 	orrgt.w	r0, r8, r3
 8002412:	fa06 f003 	lslle.w	r0, r6, r3
 8002416:	f7fe f875 	bl	8000504 <__aeabi_ui2d>
 800241a:	2201      	movs	r2, #1
 800241c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8002420:	3d01      	subs	r5, #1
 8002422:	920e      	str	r2, [sp, #56]	; 0x38
 8002424:	e76f      	b.n	8002306 <_dtoa_r+0x126>
 8002426:	2301      	movs	r3, #1
 8002428:	e7b3      	b.n	8002392 <_dtoa_r+0x1b2>
 800242a:	900c      	str	r0, [sp, #48]	; 0x30
 800242c:	e7b2      	b.n	8002394 <_dtoa_r+0x1b4>
 800242e:	9b05      	ldr	r3, [sp, #20]
 8002430:	eba3 030b 	sub.w	r3, r3, fp
 8002434:	9305      	str	r3, [sp, #20]
 8002436:	f1cb 0300 	rsb	r3, fp, #0
 800243a:	9308      	str	r3, [sp, #32]
 800243c:	2300      	movs	r3, #0
 800243e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002440:	e7bf      	b.n	80023c2 <_dtoa_r+0x1e2>
 8002442:	2300      	movs	r3, #0
 8002444:	9309      	str	r3, [sp, #36]	; 0x24
 8002446:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002448:	2b00      	cmp	r3, #0
 800244a:	dc52      	bgt.n	80024f2 <_dtoa_r+0x312>
 800244c:	2301      	movs	r3, #1
 800244e:	9301      	str	r3, [sp, #4]
 8002450:	9304      	str	r3, [sp, #16]
 8002452:	461a      	mov	r2, r3
 8002454:	920a      	str	r2, [sp, #40]	; 0x28
 8002456:	e00b      	b.n	8002470 <_dtoa_r+0x290>
 8002458:	2301      	movs	r3, #1
 800245a:	e7f3      	b.n	8002444 <_dtoa_r+0x264>
 800245c:	2300      	movs	r3, #0
 800245e:	9309      	str	r3, [sp, #36]	; 0x24
 8002460:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002462:	445b      	add	r3, fp
 8002464:	9301      	str	r3, [sp, #4]
 8002466:	3301      	adds	r3, #1
 8002468:	2b01      	cmp	r3, #1
 800246a:	9304      	str	r3, [sp, #16]
 800246c:	bfb8      	it	lt
 800246e:	2301      	movlt	r3, #1
 8002470:	69e0      	ldr	r0, [r4, #28]
 8002472:	2100      	movs	r1, #0
 8002474:	2204      	movs	r2, #4
 8002476:	f102 0614 	add.w	r6, r2, #20
 800247a:	429e      	cmp	r6, r3
 800247c:	d93d      	bls.n	80024fa <_dtoa_r+0x31a>
 800247e:	6041      	str	r1, [r0, #4]
 8002480:	4620      	mov	r0, r4
 8002482:	f001 f89d 	bl	80035c0 <_Balloc>
 8002486:	9000      	str	r0, [sp, #0]
 8002488:	2800      	cmp	r0, #0
 800248a:	d139      	bne.n	8002500 <_dtoa_r+0x320>
 800248c:	4b16      	ldr	r3, [pc, #88]	; (80024e8 <_dtoa_r+0x308>)
 800248e:	4602      	mov	r2, r0
 8002490:	f240 11af 	movw	r1, #431	; 0x1af
 8002494:	e6bd      	b.n	8002212 <_dtoa_r+0x32>
 8002496:	2301      	movs	r3, #1
 8002498:	e7e1      	b.n	800245e <_dtoa_r+0x27e>
 800249a:	2501      	movs	r5, #1
 800249c:	2300      	movs	r3, #0
 800249e:	9307      	str	r3, [sp, #28]
 80024a0:	9509      	str	r5, [sp, #36]	; 0x24
 80024a2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80024a6:	9301      	str	r3, [sp, #4]
 80024a8:	9304      	str	r3, [sp, #16]
 80024aa:	2200      	movs	r2, #0
 80024ac:	2312      	movs	r3, #18
 80024ae:	e7d1      	b.n	8002454 <_dtoa_r+0x274>
 80024b0:	636f4361 	.word	0x636f4361
 80024b4:	3fd287a7 	.word	0x3fd287a7
 80024b8:	8b60c8b3 	.word	0x8b60c8b3
 80024bc:	3fc68a28 	.word	0x3fc68a28
 80024c0:	509f79fb 	.word	0x509f79fb
 80024c4:	3fd34413 	.word	0x3fd34413
 80024c8:	080046ad 	.word	0x080046ad
 80024cc:	080046c4 	.word	0x080046c4
 80024d0:	7ff00000 	.word	0x7ff00000
 80024d4:	080046a9 	.word	0x080046a9
 80024d8:	080046a0 	.word	0x080046a0
 80024dc:	0800467d 	.word	0x0800467d
 80024e0:	3ff80000 	.word	0x3ff80000
 80024e4:	080047c0 	.word	0x080047c0
 80024e8:	0800471c 	.word	0x0800471c
 80024ec:	2301      	movs	r3, #1
 80024ee:	9309      	str	r3, [sp, #36]	; 0x24
 80024f0:	e7d7      	b.n	80024a2 <_dtoa_r+0x2c2>
 80024f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024f4:	9301      	str	r3, [sp, #4]
 80024f6:	9304      	str	r3, [sp, #16]
 80024f8:	e7ba      	b.n	8002470 <_dtoa_r+0x290>
 80024fa:	3101      	adds	r1, #1
 80024fc:	0052      	lsls	r2, r2, #1
 80024fe:	e7ba      	b.n	8002476 <_dtoa_r+0x296>
 8002500:	69e3      	ldr	r3, [r4, #28]
 8002502:	9a00      	ldr	r2, [sp, #0]
 8002504:	601a      	str	r2, [r3, #0]
 8002506:	9b04      	ldr	r3, [sp, #16]
 8002508:	2b0e      	cmp	r3, #14
 800250a:	f200 80a8 	bhi.w	800265e <_dtoa_r+0x47e>
 800250e:	2d00      	cmp	r5, #0
 8002510:	f000 80a5 	beq.w	800265e <_dtoa_r+0x47e>
 8002514:	f1bb 0f00 	cmp.w	fp, #0
 8002518:	dd38      	ble.n	800258c <_dtoa_r+0x3ac>
 800251a:	4bc0      	ldr	r3, [pc, #768]	; (800281c <_dtoa_r+0x63c>)
 800251c:	f00b 020f 	and.w	r2, fp, #15
 8002520:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002524:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002528:	e9d3 6700 	ldrd	r6, r7, [r3]
 800252c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002530:	d019      	beq.n	8002566 <_dtoa_r+0x386>
 8002532:	4bbb      	ldr	r3, [pc, #748]	; (8002820 <_dtoa_r+0x640>)
 8002534:	ec51 0b18 	vmov	r0, r1, d8
 8002538:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800253c:	f7fe f986 	bl	800084c <__aeabi_ddiv>
 8002540:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002544:	f008 080f 	and.w	r8, r8, #15
 8002548:	2503      	movs	r5, #3
 800254a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002820 <_dtoa_r+0x640>
 800254e:	f1b8 0f00 	cmp.w	r8, #0
 8002552:	d10a      	bne.n	800256a <_dtoa_r+0x38a>
 8002554:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002558:	4632      	mov	r2, r6
 800255a:	463b      	mov	r3, r7
 800255c:	f7fe f976 	bl	800084c <__aeabi_ddiv>
 8002560:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002564:	e02b      	b.n	80025be <_dtoa_r+0x3de>
 8002566:	2502      	movs	r5, #2
 8002568:	e7ef      	b.n	800254a <_dtoa_r+0x36a>
 800256a:	f018 0f01 	tst.w	r8, #1
 800256e:	d008      	beq.n	8002582 <_dtoa_r+0x3a2>
 8002570:	4630      	mov	r0, r6
 8002572:	4639      	mov	r1, r7
 8002574:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002578:	f7fe f83e 	bl	80005f8 <__aeabi_dmul>
 800257c:	3501      	adds	r5, #1
 800257e:	4606      	mov	r6, r0
 8002580:	460f      	mov	r7, r1
 8002582:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002586:	f109 0908 	add.w	r9, r9, #8
 800258a:	e7e0      	b.n	800254e <_dtoa_r+0x36e>
 800258c:	f000 809f 	beq.w	80026ce <_dtoa_r+0x4ee>
 8002590:	f1cb 0600 	rsb	r6, fp, #0
 8002594:	4ba1      	ldr	r3, [pc, #644]	; (800281c <_dtoa_r+0x63c>)
 8002596:	4fa2      	ldr	r7, [pc, #648]	; (8002820 <_dtoa_r+0x640>)
 8002598:	f006 020f 	and.w	r2, r6, #15
 800259c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025a4:	ec51 0b18 	vmov	r0, r1, d8
 80025a8:	f7fe f826 	bl	80005f8 <__aeabi_dmul>
 80025ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025b0:	1136      	asrs	r6, r6, #4
 80025b2:	2300      	movs	r3, #0
 80025b4:	2502      	movs	r5, #2
 80025b6:	2e00      	cmp	r6, #0
 80025b8:	d17e      	bne.n	80026b8 <_dtoa_r+0x4d8>
 80025ba:	2b00      	cmp	r3, #0
 80025bc:	d1d0      	bne.n	8002560 <_dtoa_r+0x380>
 80025be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80025c0:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	f000 8084 	beq.w	80026d2 <_dtoa_r+0x4f2>
 80025ca:	4b96      	ldr	r3, [pc, #600]	; (8002824 <_dtoa_r+0x644>)
 80025cc:	2200      	movs	r2, #0
 80025ce:	4640      	mov	r0, r8
 80025d0:	4649      	mov	r1, r9
 80025d2:	f7fe fa83 	bl	8000adc <__aeabi_dcmplt>
 80025d6:	2800      	cmp	r0, #0
 80025d8:	d07b      	beq.n	80026d2 <_dtoa_r+0x4f2>
 80025da:	9b04      	ldr	r3, [sp, #16]
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d078      	beq.n	80026d2 <_dtoa_r+0x4f2>
 80025e0:	9b01      	ldr	r3, [sp, #4]
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	dd39      	ble.n	800265a <_dtoa_r+0x47a>
 80025e6:	4b90      	ldr	r3, [pc, #576]	; (8002828 <_dtoa_r+0x648>)
 80025e8:	2200      	movs	r2, #0
 80025ea:	4640      	mov	r0, r8
 80025ec:	4649      	mov	r1, r9
 80025ee:	f7fe f803 	bl	80005f8 <__aeabi_dmul>
 80025f2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025f6:	9e01      	ldr	r6, [sp, #4]
 80025f8:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
 80025fc:	3501      	adds	r5, #1
 80025fe:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002602:	4628      	mov	r0, r5
 8002604:	f7fd ff8e 	bl	8000524 <__aeabi_i2d>
 8002608:	4642      	mov	r2, r8
 800260a:	464b      	mov	r3, r9
 800260c:	f7fd fff4 	bl	80005f8 <__aeabi_dmul>
 8002610:	4b86      	ldr	r3, [pc, #536]	; (800282c <_dtoa_r+0x64c>)
 8002612:	2200      	movs	r2, #0
 8002614:	f7fd fe3a 	bl	800028c <__adddf3>
 8002618:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800261c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002620:	9303      	str	r3, [sp, #12]
 8002622:	2e00      	cmp	r6, #0
 8002624:	d158      	bne.n	80026d8 <_dtoa_r+0x4f8>
 8002626:	4b82      	ldr	r3, [pc, #520]	; (8002830 <_dtoa_r+0x650>)
 8002628:	2200      	movs	r2, #0
 800262a:	4640      	mov	r0, r8
 800262c:	4649      	mov	r1, r9
 800262e:	f7fd fe2b 	bl	8000288 <__aeabi_dsub>
 8002632:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002636:	4680      	mov	r8, r0
 8002638:	4689      	mov	r9, r1
 800263a:	f7fe fa6d 	bl	8000b18 <__aeabi_dcmpgt>
 800263e:	2800      	cmp	r0, #0
 8002640:	f040 8296 	bne.w	8002b70 <_dtoa_r+0x990>
 8002644:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002648:	4640      	mov	r0, r8
 800264a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800264e:	4649      	mov	r1, r9
 8002650:	f7fe fa44 	bl	8000adc <__aeabi_dcmplt>
 8002654:	2800      	cmp	r0, #0
 8002656:	f040 8289 	bne.w	8002b6c <_dtoa_r+0x98c>
 800265a:	ed8d 8b02 	vstr	d8, [sp, #8]
 800265e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002660:	2b00      	cmp	r3, #0
 8002662:	f2c0 814e 	blt.w	8002902 <_dtoa_r+0x722>
 8002666:	f1bb 0f0e 	cmp.w	fp, #14
 800266a:	f300 814a 	bgt.w	8002902 <_dtoa_r+0x722>
 800266e:	4b6b      	ldr	r3, [pc, #428]	; (800281c <_dtoa_r+0x63c>)
 8002670:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002674:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002678:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800267a:	2b00      	cmp	r3, #0
 800267c:	f280 80dc 	bge.w	8002838 <_dtoa_r+0x658>
 8002680:	9b04      	ldr	r3, [sp, #16]
 8002682:	2b00      	cmp	r3, #0
 8002684:	f300 80d8 	bgt.w	8002838 <_dtoa_r+0x658>
 8002688:	f040 826f 	bne.w	8002b6a <_dtoa_r+0x98a>
 800268c:	4b68      	ldr	r3, [pc, #416]	; (8002830 <_dtoa_r+0x650>)
 800268e:	2200      	movs	r2, #0
 8002690:	4640      	mov	r0, r8
 8002692:	4649      	mov	r1, r9
 8002694:	f7fd ffb0 	bl	80005f8 <__aeabi_dmul>
 8002698:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800269c:	f7fe fa32 	bl	8000b04 <__aeabi_dcmpge>
 80026a0:	9e04      	ldr	r6, [sp, #16]
 80026a2:	4637      	mov	r7, r6
 80026a4:	2800      	cmp	r0, #0
 80026a6:	f040 8245 	bne.w	8002b34 <_dtoa_r+0x954>
 80026aa:	9d00      	ldr	r5, [sp, #0]
 80026ac:	2331      	movs	r3, #49	; 0x31
 80026ae:	f805 3b01 	strb.w	r3, [r5], #1
 80026b2:	f10b 0b01 	add.w	fp, fp, #1
 80026b6:	e241      	b.n	8002b3c <_dtoa_r+0x95c>
 80026b8:	07f2      	lsls	r2, r6, #31
 80026ba:	d505      	bpl.n	80026c8 <_dtoa_r+0x4e8>
 80026bc:	e9d7 2300 	ldrd	r2, r3, [r7]
 80026c0:	f7fd ff9a 	bl	80005f8 <__aeabi_dmul>
 80026c4:	3501      	adds	r5, #1
 80026c6:	2301      	movs	r3, #1
 80026c8:	1076      	asrs	r6, r6, #1
 80026ca:	3708      	adds	r7, #8
 80026cc:	e773      	b.n	80025b6 <_dtoa_r+0x3d6>
 80026ce:	2502      	movs	r5, #2
 80026d0:	e775      	b.n	80025be <_dtoa_r+0x3de>
 80026d2:	9e04      	ldr	r6, [sp, #16]
 80026d4:	465f      	mov	r7, fp
 80026d6:	e792      	b.n	80025fe <_dtoa_r+0x41e>
 80026d8:	9900      	ldr	r1, [sp, #0]
 80026da:	4b50      	ldr	r3, [pc, #320]	; (800281c <_dtoa_r+0x63c>)
 80026dc:	ed9d 7b02 	vldr	d7, [sp, #8]
 80026e0:	4431      	add	r1, r6
 80026e2:	9102      	str	r1, [sp, #8]
 80026e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80026e6:	eeb0 9a47 	vmov.f32	s18, s14
 80026ea:	eef0 9a67 	vmov.f32	s19, s15
 80026ee:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80026f2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80026f6:	2900      	cmp	r1, #0
 80026f8:	d044      	beq.n	8002784 <_dtoa_r+0x5a4>
 80026fa:	494e      	ldr	r1, [pc, #312]	; (8002834 <_dtoa_r+0x654>)
 80026fc:	2000      	movs	r0, #0
 80026fe:	f7fe f8a5 	bl	800084c <__aeabi_ddiv>
 8002702:	ec53 2b19 	vmov	r2, r3, d9
 8002706:	f7fd fdbf 	bl	8000288 <__aeabi_dsub>
 800270a:	9d00      	ldr	r5, [sp, #0]
 800270c:	ec41 0b19 	vmov	d9, r0, r1
 8002710:	4649      	mov	r1, r9
 8002712:	4640      	mov	r0, r8
 8002714:	f7fe fa20 	bl	8000b58 <__aeabi_d2iz>
 8002718:	4606      	mov	r6, r0
 800271a:	f7fd ff03 	bl	8000524 <__aeabi_i2d>
 800271e:	4602      	mov	r2, r0
 8002720:	460b      	mov	r3, r1
 8002722:	4640      	mov	r0, r8
 8002724:	4649      	mov	r1, r9
 8002726:	f7fd fdaf 	bl	8000288 <__aeabi_dsub>
 800272a:	3630      	adds	r6, #48	; 0x30
 800272c:	f805 6b01 	strb.w	r6, [r5], #1
 8002730:	ec53 2b19 	vmov	r2, r3, d9
 8002734:	4680      	mov	r8, r0
 8002736:	4689      	mov	r9, r1
 8002738:	f7fe f9d0 	bl	8000adc <__aeabi_dcmplt>
 800273c:	2800      	cmp	r0, #0
 800273e:	d164      	bne.n	800280a <_dtoa_r+0x62a>
 8002740:	4642      	mov	r2, r8
 8002742:	464b      	mov	r3, r9
 8002744:	4937      	ldr	r1, [pc, #220]	; (8002824 <_dtoa_r+0x644>)
 8002746:	2000      	movs	r0, #0
 8002748:	f7fd fd9e 	bl	8000288 <__aeabi_dsub>
 800274c:	ec53 2b19 	vmov	r2, r3, d9
 8002750:	f7fe f9c4 	bl	8000adc <__aeabi_dcmplt>
 8002754:	2800      	cmp	r0, #0
 8002756:	f040 80b6 	bne.w	80028c6 <_dtoa_r+0x6e6>
 800275a:	9b02      	ldr	r3, [sp, #8]
 800275c:	429d      	cmp	r5, r3
 800275e:	f43f af7c 	beq.w	800265a <_dtoa_r+0x47a>
 8002762:	4b31      	ldr	r3, [pc, #196]	; (8002828 <_dtoa_r+0x648>)
 8002764:	ec51 0b19 	vmov	r0, r1, d9
 8002768:	2200      	movs	r2, #0
 800276a:	f7fd ff45 	bl	80005f8 <__aeabi_dmul>
 800276e:	4b2e      	ldr	r3, [pc, #184]	; (8002828 <_dtoa_r+0x648>)
 8002770:	ec41 0b19 	vmov	d9, r0, r1
 8002774:	2200      	movs	r2, #0
 8002776:	4640      	mov	r0, r8
 8002778:	4649      	mov	r1, r9
 800277a:	f7fd ff3d 	bl	80005f8 <__aeabi_dmul>
 800277e:	4680      	mov	r8, r0
 8002780:	4689      	mov	r9, r1
 8002782:	e7c5      	b.n	8002710 <_dtoa_r+0x530>
 8002784:	ec51 0b17 	vmov	r0, r1, d7
 8002788:	f7fd ff36 	bl	80005f8 <__aeabi_dmul>
 800278c:	9b02      	ldr	r3, [sp, #8]
 800278e:	9d00      	ldr	r5, [sp, #0]
 8002790:	930f      	str	r3, [sp, #60]	; 0x3c
 8002792:	ec41 0b19 	vmov	d9, r0, r1
 8002796:	4649      	mov	r1, r9
 8002798:	4640      	mov	r0, r8
 800279a:	f7fe f9dd 	bl	8000b58 <__aeabi_d2iz>
 800279e:	4606      	mov	r6, r0
 80027a0:	f7fd fec0 	bl	8000524 <__aeabi_i2d>
 80027a4:	3630      	adds	r6, #48	; 0x30
 80027a6:	4602      	mov	r2, r0
 80027a8:	460b      	mov	r3, r1
 80027aa:	4640      	mov	r0, r8
 80027ac:	4649      	mov	r1, r9
 80027ae:	f7fd fd6b 	bl	8000288 <__aeabi_dsub>
 80027b2:	f805 6b01 	strb.w	r6, [r5], #1
 80027b6:	9b02      	ldr	r3, [sp, #8]
 80027b8:	429d      	cmp	r5, r3
 80027ba:	4680      	mov	r8, r0
 80027bc:	4689      	mov	r9, r1
 80027be:	f04f 0200 	mov.w	r2, #0
 80027c2:	d124      	bne.n	800280e <_dtoa_r+0x62e>
 80027c4:	4b1b      	ldr	r3, [pc, #108]	; (8002834 <_dtoa_r+0x654>)
 80027c6:	ec51 0b19 	vmov	r0, r1, d9
 80027ca:	f7fd fd5f 	bl	800028c <__adddf3>
 80027ce:	4602      	mov	r2, r0
 80027d0:	460b      	mov	r3, r1
 80027d2:	4640      	mov	r0, r8
 80027d4:	4649      	mov	r1, r9
 80027d6:	f7fe f99f 	bl	8000b18 <__aeabi_dcmpgt>
 80027da:	2800      	cmp	r0, #0
 80027dc:	d173      	bne.n	80028c6 <_dtoa_r+0x6e6>
 80027de:	ec53 2b19 	vmov	r2, r3, d9
 80027e2:	4914      	ldr	r1, [pc, #80]	; (8002834 <_dtoa_r+0x654>)
 80027e4:	2000      	movs	r0, #0
 80027e6:	f7fd fd4f 	bl	8000288 <__aeabi_dsub>
 80027ea:	4602      	mov	r2, r0
 80027ec:	460b      	mov	r3, r1
 80027ee:	4640      	mov	r0, r8
 80027f0:	4649      	mov	r1, r9
 80027f2:	f7fe f973 	bl	8000adc <__aeabi_dcmplt>
 80027f6:	2800      	cmp	r0, #0
 80027f8:	f43f af2f 	beq.w	800265a <_dtoa_r+0x47a>
 80027fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80027fe:	1e6b      	subs	r3, r5, #1
 8002800:	930f      	str	r3, [sp, #60]	; 0x3c
 8002802:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002806:	2b30      	cmp	r3, #48	; 0x30
 8002808:	d0f8      	beq.n	80027fc <_dtoa_r+0x61c>
 800280a:	46bb      	mov	fp, r7
 800280c:	e04a      	b.n	80028a4 <_dtoa_r+0x6c4>
 800280e:	4b06      	ldr	r3, [pc, #24]	; (8002828 <_dtoa_r+0x648>)
 8002810:	f7fd fef2 	bl	80005f8 <__aeabi_dmul>
 8002814:	4680      	mov	r8, r0
 8002816:	4689      	mov	r9, r1
 8002818:	e7bd      	b.n	8002796 <_dtoa_r+0x5b6>
 800281a:	bf00      	nop
 800281c:	080047c0 	.word	0x080047c0
 8002820:	08004798 	.word	0x08004798
 8002824:	3ff00000 	.word	0x3ff00000
 8002828:	40240000 	.word	0x40240000
 800282c:	401c0000 	.word	0x401c0000
 8002830:	40140000 	.word	0x40140000
 8002834:	3fe00000 	.word	0x3fe00000
 8002838:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800283c:	9d00      	ldr	r5, [sp, #0]
 800283e:	4642      	mov	r2, r8
 8002840:	464b      	mov	r3, r9
 8002842:	4630      	mov	r0, r6
 8002844:	4639      	mov	r1, r7
 8002846:	f7fe f801 	bl	800084c <__aeabi_ddiv>
 800284a:	f7fe f985 	bl	8000b58 <__aeabi_d2iz>
 800284e:	9001      	str	r0, [sp, #4]
 8002850:	f7fd fe68 	bl	8000524 <__aeabi_i2d>
 8002854:	4642      	mov	r2, r8
 8002856:	464b      	mov	r3, r9
 8002858:	f7fd fece 	bl	80005f8 <__aeabi_dmul>
 800285c:	4602      	mov	r2, r0
 800285e:	460b      	mov	r3, r1
 8002860:	4630      	mov	r0, r6
 8002862:	4639      	mov	r1, r7
 8002864:	f7fd fd10 	bl	8000288 <__aeabi_dsub>
 8002868:	9e01      	ldr	r6, [sp, #4]
 800286a:	9f04      	ldr	r7, [sp, #16]
 800286c:	3630      	adds	r6, #48	; 0x30
 800286e:	f805 6b01 	strb.w	r6, [r5], #1
 8002872:	9e00      	ldr	r6, [sp, #0]
 8002874:	1bae      	subs	r6, r5, r6
 8002876:	42b7      	cmp	r7, r6
 8002878:	4602      	mov	r2, r0
 800287a:	460b      	mov	r3, r1
 800287c:	d134      	bne.n	80028e8 <_dtoa_r+0x708>
 800287e:	f7fd fd05 	bl	800028c <__adddf3>
 8002882:	4642      	mov	r2, r8
 8002884:	464b      	mov	r3, r9
 8002886:	4606      	mov	r6, r0
 8002888:	460f      	mov	r7, r1
 800288a:	f7fe f945 	bl	8000b18 <__aeabi_dcmpgt>
 800288e:	b9c8      	cbnz	r0, 80028c4 <_dtoa_r+0x6e4>
 8002890:	4642      	mov	r2, r8
 8002892:	464b      	mov	r3, r9
 8002894:	4630      	mov	r0, r6
 8002896:	4639      	mov	r1, r7
 8002898:	f7fe f916 	bl	8000ac8 <__aeabi_dcmpeq>
 800289c:	b110      	cbz	r0, 80028a4 <_dtoa_r+0x6c4>
 800289e:	9b01      	ldr	r3, [sp, #4]
 80028a0:	07db      	lsls	r3, r3, #31
 80028a2:	d40f      	bmi.n	80028c4 <_dtoa_r+0x6e4>
 80028a4:	4651      	mov	r1, sl
 80028a6:	4620      	mov	r0, r4
 80028a8:	f000 feca 	bl	8003640 <_Bfree>
 80028ac:	2300      	movs	r3, #0
 80028ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80028b0:	702b      	strb	r3, [r5, #0]
 80028b2:	f10b 0301 	add.w	r3, fp, #1
 80028b6:	6013      	str	r3, [r2, #0]
 80028b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	f43f ace2 	beq.w	8002284 <_dtoa_r+0xa4>
 80028c0:	601d      	str	r5, [r3, #0]
 80028c2:	e4df      	b.n	8002284 <_dtoa_r+0xa4>
 80028c4:	465f      	mov	r7, fp
 80028c6:	462b      	mov	r3, r5
 80028c8:	461d      	mov	r5, r3
 80028ca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80028ce:	2a39      	cmp	r2, #57	; 0x39
 80028d0:	d106      	bne.n	80028e0 <_dtoa_r+0x700>
 80028d2:	9a00      	ldr	r2, [sp, #0]
 80028d4:	429a      	cmp	r2, r3
 80028d6:	d1f7      	bne.n	80028c8 <_dtoa_r+0x6e8>
 80028d8:	9900      	ldr	r1, [sp, #0]
 80028da:	2230      	movs	r2, #48	; 0x30
 80028dc:	3701      	adds	r7, #1
 80028de:	700a      	strb	r2, [r1, #0]
 80028e0:	781a      	ldrb	r2, [r3, #0]
 80028e2:	3201      	adds	r2, #1
 80028e4:	701a      	strb	r2, [r3, #0]
 80028e6:	e790      	b.n	800280a <_dtoa_r+0x62a>
 80028e8:	4ba3      	ldr	r3, [pc, #652]	; (8002b78 <_dtoa_r+0x998>)
 80028ea:	2200      	movs	r2, #0
 80028ec:	f7fd fe84 	bl	80005f8 <__aeabi_dmul>
 80028f0:	2200      	movs	r2, #0
 80028f2:	2300      	movs	r3, #0
 80028f4:	4606      	mov	r6, r0
 80028f6:	460f      	mov	r7, r1
 80028f8:	f7fe f8e6 	bl	8000ac8 <__aeabi_dcmpeq>
 80028fc:	2800      	cmp	r0, #0
 80028fe:	d09e      	beq.n	800283e <_dtoa_r+0x65e>
 8002900:	e7d0      	b.n	80028a4 <_dtoa_r+0x6c4>
 8002902:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002904:	2a00      	cmp	r2, #0
 8002906:	f000 80ca 	beq.w	8002a9e <_dtoa_r+0x8be>
 800290a:	9a07      	ldr	r2, [sp, #28]
 800290c:	2a01      	cmp	r2, #1
 800290e:	f300 80ad 	bgt.w	8002a6c <_dtoa_r+0x88c>
 8002912:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002914:	2a00      	cmp	r2, #0
 8002916:	f000 80a5 	beq.w	8002a64 <_dtoa_r+0x884>
 800291a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800291e:	9e08      	ldr	r6, [sp, #32]
 8002920:	9d05      	ldr	r5, [sp, #20]
 8002922:	9a05      	ldr	r2, [sp, #20]
 8002924:	441a      	add	r2, r3
 8002926:	9205      	str	r2, [sp, #20]
 8002928:	9a06      	ldr	r2, [sp, #24]
 800292a:	2101      	movs	r1, #1
 800292c:	441a      	add	r2, r3
 800292e:	4620      	mov	r0, r4
 8002930:	9206      	str	r2, [sp, #24]
 8002932:	f000 ff3b 	bl	80037ac <__i2b>
 8002936:	4607      	mov	r7, r0
 8002938:	b165      	cbz	r5, 8002954 <_dtoa_r+0x774>
 800293a:	9b06      	ldr	r3, [sp, #24]
 800293c:	2b00      	cmp	r3, #0
 800293e:	dd09      	ble.n	8002954 <_dtoa_r+0x774>
 8002940:	42ab      	cmp	r3, r5
 8002942:	9a05      	ldr	r2, [sp, #20]
 8002944:	bfa8      	it	ge
 8002946:	462b      	movge	r3, r5
 8002948:	1ad2      	subs	r2, r2, r3
 800294a:	9205      	str	r2, [sp, #20]
 800294c:	9a06      	ldr	r2, [sp, #24]
 800294e:	1aed      	subs	r5, r5, r3
 8002950:	1ad3      	subs	r3, r2, r3
 8002952:	9306      	str	r3, [sp, #24]
 8002954:	9b08      	ldr	r3, [sp, #32]
 8002956:	b1f3      	cbz	r3, 8002996 <_dtoa_r+0x7b6>
 8002958:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800295a:	2b00      	cmp	r3, #0
 800295c:	f000 80a3 	beq.w	8002aa6 <_dtoa_r+0x8c6>
 8002960:	2e00      	cmp	r6, #0
 8002962:	dd10      	ble.n	8002986 <_dtoa_r+0x7a6>
 8002964:	4639      	mov	r1, r7
 8002966:	4632      	mov	r2, r6
 8002968:	4620      	mov	r0, r4
 800296a:	f000 ffdf 	bl	800392c <__pow5mult>
 800296e:	4652      	mov	r2, sl
 8002970:	4601      	mov	r1, r0
 8002972:	4607      	mov	r7, r0
 8002974:	4620      	mov	r0, r4
 8002976:	f000 ff2f 	bl	80037d8 <__multiply>
 800297a:	4651      	mov	r1, sl
 800297c:	4680      	mov	r8, r0
 800297e:	4620      	mov	r0, r4
 8002980:	f000 fe5e 	bl	8003640 <_Bfree>
 8002984:	46c2      	mov	sl, r8
 8002986:	9b08      	ldr	r3, [sp, #32]
 8002988:	1b9a      	subs	r2, r3, r6
 800298a:	d004      	beq.n	8002996 <_dtoa_r+0x7b6>
 800298c:	4651      	mov	r1, sl
 800298e:	4620      	mov	r0, r4
 8002990:	f000 ffcc 	bl	800392c <__pow5mult>
 8002994:	4682      	mov	sl, r0
 8002996:	2101      	movs	r1, #1
 8002998:	4620      	mov	r0, r4
 800299a:	f000 ff07 	bl	80037ac <__i2b>
 800299e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	4606      	mov	r6, r0
 80029a4:	f340 8081 	ble.w	8002aaa <_dtoa_r+0x8ca>
 80029a8:	461a      	mov	r2, r3
 80029aa:	4601      	mov	r1, r0
 80029ac:	4620      	mov	r0, r4
 80029ae:	f000 ffbd 	bl	800392c <__pow5mult>
 80029b2:	9b07      	ldr	r3, [sp, #28]
 80029b4:	2b01      	cmp	r3, #1
 80029b6:	4606      	mov	r6, r0
 80029b8:	dd7a      	ble.n	8002ab0 <_dtoa_r+0x8d0>
 80029ba:	f04f 0800 	mov.w	r8, #0
 80029be:	6933      	ldr	r3, [r6, #16]
 80029c0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80029c4:	6918      	ldr	r0, [r3, #16]
 80029c6:	f000 fea3 	bl	8003710 <__hi0bits>
 80029ca:	f1c0 0020 	rsb	r0, r0, #32
 80029ce:	9b06      	ldr	r3, [sp, #24]
 80029d0:	4418      	add	r0, r3
 80029d2:	f010 001f 	ands.w	r0, r0, #31
 80029d6:	f000 8094 	beq.w	8002b02 <_dtoa_r+0x922>
 80029da:	f1c0 0320 	rsb	r3, r0, #32
 80029de:	2b04      	cmp	r3, #4
 80029e0:	f340 8085 	ble.w	8002aee <_dtoa_r+0x90e>
 80029e4:	9b05      	ldr	r3, [sp, #20]
 80029e6:	f1c0 001c 	rsb	r0, r0, #28
 80029ea:	4403      	add	r3, r0
 80029ec:	9305      	str	r3, [sp, #20]
 80029ee:	9b06      	ldr	r3, [sp, #24]
 80029f0:	4403      	add	r3, r0
 80029f2:	4405      	add	r5, r0
 80029f4:	9306      	str	r3, [sp, #24]
 80029f6:	9b05      	ldr	r3, [sp, #20]
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	dd05      	ble.n	8002a08 <_dtoa_r+0x828>
 80029fc:	4651      	mov	r1, sl
 80029fe:	461a      	mov	r2, r3
 8002a00:	4620      	mov	r0, r4
 8002a02:	f000 ffed 	bl	80039e0 <__lshift>
 8002a06:	4682      	mov	sl, r0
 8002a08:	9b06      	ldr	r3, [sp, #24]
 8002a0a:	2b00      	cmp	r3, #0
 8002a0c:	dd05      	ble.n	8002a1a <_dtoa_r+0x83a>
 8002a0e:	4631      	mov	r1, r6
 8002a10:	461a      	mov	r2, r3
 8002a12:	4620      	mov	r0, r4
 8002a14:	f000 ffe4 	bl	80039e0 <__lshift>
 8002a18:	4606      	mov	r6, r0
 8002a1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a1c:	2b00      	cmp	r3, #0
 8002a1e:	d072      	beq.n	8002b06 <_dtoa_r+0x926>
 8002a20:	4631      	mov	r1, r6
 8002a22:	4650      	mov	r0, sl
 8002a24:	f001 f848 	bl	8003ab8 <__mcmp>
 8002a28:	2800      	cmp	r0, #0
 8002a2a:	da6c      	bge.n	8002b06 <_dtoa_r+0x926>
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	4651      	mov	r1, sl
 8002a30:	220a      	movs	r2, #10
 8002a32:	4620      	mov	r0, r4
 8002a34:	f000 fe26 	bl	8003684 <__multadd>
 8002a38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a3a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002a3e:	4682      	mov	sl, r0
 8002a40:	2b00      	cmp	r3, #0
 8002a42:	f000 81b0 	beq.w	8002da6 <_dtoa_r+0xbc6>
 8002a46:	2300      	movs	r3, #0
 8002a48:	4639      	mov	r1, r7
 8002a4a:	220a      	movs	r2, #10
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	f000 fe19 	bl	8003684 <__multadd>
 8002a52:	9b01      	ldr	r3, [sp, #4]
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	4607      	mov	r7, r0
 8002a58:	f300 8096 	bgt.w	8002b88 <_dtoa_r+0x9a8>
 8002a5c:	9b07      	ldr	r3, [sp, #28]
 8002a5e:	2b02      	cmp	r3, #2
 8002a60:	dc59      	bgt.n	8002b16 <_dtoa_r+0x936>
 8002a62:	e091      	b.n	8002b88 <_dtoa_r+0x9a8>
 8002a64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002a66:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002a6a:	e758      	b.n	800291e <_dtoa_r+0x73e>
 8002a6c:	9b04      	ldr	r3, [sp, #16]
 8002a6e:	1e5e      	subs	r6, r3, #1
 8002a70:	9b08      	ldr	r3, [sp, #32]
 8002a72:	42b3      	cmp	r3, r6
 8002a74:	bfbf      	itttt	lt
 8002a76:	9b08      	ldrlt	r3, [sp, #32]
 8002a78:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002a7a:	9608      	strlt	r6, [sp, #32]
 8002a7c:	1af3      	sublt	r3, r6, r3
 8002a7e:	bfb4      	ite	lt
 8002a80:	18d2      	addlt	r2, r2, r3
 8002a82:	1b9e      	subge	r6, r3, r6
 8002a84:	9b04      	ldr	r3, [sp, #16]
 8002a86:	bfbc      	itt	lt
 8002a88:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002a8a:	2600      	movlt	r6, #0
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	bfb7      	itett	lt
 8002a90:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8002a94:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8002a98:	1a9d      	sublt	r5, r3, r2
 8002a9a:	2300      	movlt	r3, #0
 8002a9c:	e741      	b.n	8002922 <_dtoa_r+0x742>
 8002a9e:	9e08      	ldr	r6, [sp, #32]
 8002aa0:	9d05      	ldr	r5, [sp, #20]
 8002aa2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002aa4:	e748      	b.n	8002938 <_dtoa_r+0x758>
 8002aa6:	9a08      	ldr	r2, [sp, #32]
 8002aa8:	e770      	b.n	800298c <_dtoa_r+0x7ac>
 8002aaa:	9b07      	ldr	r3, [sp, #28]
 8002aac:	2b01      	cmp	r3, #1
 8002aae:	dc19      	bgt.n	8002ae4 <_dtoa_r+0x904>
 8002ab0:	9b02      	ldr	r3, [sp, #8]
 8002ab2:	b9bb      	cbnz	r3, 8002ae4 <_dtoa_r+0x904>
 8002ab4:	9b03      	ldr	r3, [sp, #12]
 8002ab6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002aba:	b99b      	cbnz	r3, 8002ae4 <_dtoa_r+0x904>
 8002abc:	9b03      	ldr	r3, [sp, #12]
 8002abe:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002ac2:	0d1b      	lsrs	r3, r3, #20
 8002ac4:	051b      	lsls	r3, r3, #20
 8002ac6:	b183      	cbz	r3, 8002aea <_dtoa_r+0x90a>
 8002ac8:	9b05      	ldr	r3, [sp, #20]
 8002aca:	3301      	adds	r3, #1
 8002acc:	9305      	str	r3, [sp, #20]
 8002ace:	9b06      	ldr	r3, [sp, #24]
 8002ad0:	3301      	adds	r3, #1
 8002ad2:	9306      	str	r3, [sp, #24]
 8002ad4:	f04f 0801 	mov.w	r8, #1
 8002ad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	f47f af6f 	bne.w	80029be <_dtoa_r+0x7de>
 8002ae0:	2001      	movs	r0, #1
 8002ae2:	e774      	b.n	80029ce <_dtoa_r+0x7ee>
 8002ae4:	f04f 0800 	mov.w	r8, #0
 8002ae8:	e7f6      	b.n	8002ad8 <_dtoa_r+0x8f8>
 8002aea:	4698      	mov	r8, r3
 8002aec:	e7f4      	b.n	8002ad8 <_dtoa_r+0x8f8>
 8002aee:	d082      	beq.n	80029f6 <_dtoa_r+0x816>
 8002af0:	9a05      	ldr	r2, [sp, #20]
 8002af2:	331c      	adds	r3, #28
 8002af4:	441a      	add	r2, r3
 8002af6:	9205      	str	r2, [sp, #20]
 8002af8:	9a06      	ldr	r2, [sp, #24]
 8002afa:	441a      	add	r2, r3
 8002afc:	441d      	add	r5, r3
 8002afe:	9206      	str	r2, [sp, #24]
 8002b00:	e779      	b.n	80029f6 <_dtoa_r+0x816>
 8002b02:	4603      	mov	r3, r0
 8002b04:	e7f4      	b.n	8002af0 <_dtoa_r+0x910>
 8002b06:	9b04      	ldr	r3, [sp, #16]
 8002b08:	2b00      	cmp	r3, #0
 8002b0a:	dc37      	bgt.n	8002b7c <_dtoa_r+0x99c>
 8002b0c:	9b07      	ldr	r3, [sp, #28]
 8002b0e:	2b02      	cmp	r3, #2
 8002b10:	dd34      	ble.n	8002b7c <_dtoa_r+0x99c>
 8002b12:	9b04      	ldr	r3, [sp, #16]
 8002b14:	9301      	str	r3, [sp, #4]
 8002b16:	9b01      	ldr	r3, [sp, #4]
 8002b18:	b963      	cbnz	r3, 8002b34 <_dtoa_r+0x954>
 8002b1a:	4631      	mov	r1, r6
 8002b1c:	2205      	movs	r2, #5
 8002b1e:	4620      	mov	r0, r4
 8002b20:	f000 fdb0 	bl	8003684 <__multadd>
 8002b24:	4601      	mov	r1, r0
 8002b26:	4606      	mov	r6, r0
 8002b28:	4650      	mov	r0, sl
 8002b2a:	f000 ffc5 	bl	8003ab8 <__mcmp>
 8002b2e:	2800      	cmp	r0, #0
 8002b30:	f73f adbb 	bgt.w	80026aa <_dtoa_r+0x4ca>
 8002b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b36:	9d00      	ldr	r5, [sp, #0]
 8002b38:	ea6f 0b03 	mvn.w	fp, r3
 8002b3c:	f04f 0800 	mov.w	r8, #0
 8002b40:	4631      	mov	r1, r6
 8002b42:	4620      	mov	r0, r4
 8002b44:	f000 fd7c 	bl	8003640 <_Bfree>
 8002b48:	2f00      	cmp	r7, #0
 8002b4a:	f43f aeab 	beq.w	80028a4 <_dtoa_r+0x6c4>
 8002b4e:	f1b8 0f00 	cmp.w	r8, #0
 8002b52:	d005      	beq.n	8002b60 <_dtoa_r+0x980>
 8002b54:	45b8      	cmp	r8, r7
 8002b56:	d003      	beq.n	8002b60 <_dtoa_r+0x980>
 8002b58:	4641      	mov	r1, r8
 8002b5a:	4620      	mov	r0, r4
 8002b5c:	f000 fd70 	bl	8003640 <_Bfree>
 8002b60:	4639      	mov	r1, r7
 8002b62:	4620      	mov	r0, r4
 8002b64:	f000 fd6c 	bl	8003640 <_Bfree>
 8002b68:	e69c      	b.n	80028a4 <_dtoa_r+0x6c4>
 8002b6a:	2600      	movs	r6, #0
 8002b6c:	4637      	mov	r7, r6
 8002b6e:	e7e1      	b.n	8002b34 <_dtoa_r+0x954>
 8002b70:	46bb      	mov	fp, r7
 8002b72:	4637      	mov	r7, r6
 8002b74:	e599      	b.n	80026aa <_dtoa_r+0x4ca>
 8002b76:	bf00      	nop
 8002b78:	40240000 	.word	0x40240000
 8002b7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	f000 80c8 	beq.w	8002d14 <_dtoa_r+0xb34>
 8002b84:	9b04      	ldr	r3, [sp, #16]
 8002b86:	9301      	str	r3, [sp, #4]
 8002b88:	2d00      	cmp	r5, #0
 8002b8a:	dd05      	ble.n	8002b98 <_dtoa_r+0x9b8>
 8002b8c:	4639      	mov	r1, r7
 8002b8e:	462a      	mov	r2, r5
 8002b90:	4620      	mov	r0, r4
 8002b92:	f000 ff25 	bl	80039e0 <__lshift>
 8002b96:	4607      	mov	r7, r0
 8002b98:	f1b8 0f00 	cmp.w	r8, #0
 8002b9c:	d05b      	beq.n	8002c56 <_dtoa_r+0xa76>
 8002b9e:	6879      	ldr	r1, [r7, #4]
 8002ba0:	4620      	mov	r0, r4
 8002ba2:	f000 fd0d 	bl	80035c0 <_Balloc>
 8002ba6:	4605      	mov	r5, r0
 8002ba8:	b928      	cbnz	r0, 8002bb6 <_dtoa_r+0x9d6>
 8002baa:	4b83      	ldr	r3, [pc, #524]	; (8002db8 <_dtoa_r+0xbd8>)
 8002bac:	4602      	mov	r2, r0
 8002bae:	f240 21ef 	movw	r1, #751	; 0x2ef
 8002bb2:	f7ff bb2e 	b.w	8002212 <_dtoa_r+0x32>
 8002bb6:	693a      	ldr	r2, [r7, #16]
 8002bb8:	3202      	adds	r2, #2
 8002bba:	0092      	lsls	r2, r2, #2
 8002bbc:	f107 010c 	add.w	r1, r7, #12
 8002bc0:	300c      	adds	r0, #12
 8002bc2:	f001 fa75 	bl	80040b0 <memcpy>
 8002bc6:	2201      	movs	r2, #1
 8002bc8:	4629      	mov	r1, r5
 8002bca:	4620      	mov	r0, r4
 8002bcc:	f000 ff08 	bl	80039e0 <__lshift>
 8002bd0:	9b00      	ldr	r3, [sp, #0]
 8002bd2:	3301      	adds	r3, #1
 8002bd4:	9304      	str	r3, [sp, #16]
 8002bd6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bda:	4413      	add	r3, r2
 8002bdc:	9308      	str	r3, [sp, #32]
 8002bde:	9b02      	ldr	r3, [sp, #8]
 8002be0:	f003 0301 	and.w	r3, r3, #1
 8002be4:	46b8      	mov	r8, r7
 8002be6:	9306      	str	r3, [sp, #24]
 8002be8:	4607      	mov	r7, r0
 8002bea:	9b04      	ldr	r3, [sp, #16]
 8002bec:	4631      	mov	r1, r6
 8002bee:	3b01      	subs	r3, #1
 8002bf0:	4650      	mov	r0, sl
 8002bf2:	9301      	str	r3, [sp, #4]
 8002bf4:	f7ff fa6b 	bl	80020ce <quorem>
 8002bf8:	4641      	mov	r1, r8
 8002bfa:	9002      	str	r0, [sp, #8]
 8002bfc:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002c00:	4650      	mov	r0, sl
 8002c02:	f000 ff59 	bl	8003ab8 <__mcmp>
 8002c06:	463a      	mov	r2, r7
 8002c08:	9005      	str	r0, [sp, #20]
 8002c0a:	4631      	mov	r1, r6
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	f000 ff6f 	bl	8003af0 <__mdiff>
 8002c12:	68c2      	ldr	r2, [r0, #12]
 8002c14:	4605      	mov	r5, r0
 8002c16:	bb02      	cbnz	r2, 8002c5a <_dtoa_r+0xa7a>
 8002c18:	4601      	mov	r1, r0
 8002c1a:	4650      	mov	r0, sl
 8002c1c:	f000 ff4c 	bl	8003ab8 <__mcmp>
 8002c20:	4602      	mov	r2, r0
 8002c22:	4629      	mov	r1, r5
 8002c24:	4620      	mov	r0, r4
 8002c26:	9209      	str	r2, [sp, #36]	; 0x24
 8002c28:	f000 fd0a 	bl	8003640 <_Bfree>
 8002c2c:	9b07      	ldr	r3, [sp, #28]
 8002c2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002c30:	9d04      	ldr	r5, [sp, #16]
 8002c32:	ea43 0102 	orr.w	r1, r3, r2
 8002c36:	9b06      	ldr	r3, [sp, #24]
 8002c38:	4319      	orrs	r1, r3
 8002c3a:	d110      	bne.n	8002c5e <_dtoa_r+0xa7e>
 8002c3c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002c40:	d029      	beq.n	8002c96 <_dtoa_r+0xab6>
 8002c42:	9b05      	ldr	r3, [sp, #20]
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	dd02      	ble.n	8002c4e <_dtoa_r+0xa6e>
 8002c48:	9b02      	ldr	r3, [sp, #8]
 8002c4a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002c4e:	9b01      	ldr	r3, [sp, #4]
 8002c50:	f883 9000 	strb.w	r9, [r3]
 8002c54:	e774      	b.n	8002b40 <_dtoa_r+0x960>
 8002c56:	4638      	mov	r0, r7
 8002c58:	e7ba      	b.n	8002bd0 <_dtoa_r+0x9f0>
 8002c5a:	2201      	movs	r2, #1
 8002c5c:	e7e1      	b.n	8002c22 <_dtoa_r+0xa42>
 8002c5e:	9b05      	ldr	r3, [sp, #20]
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	db04      	blt.n	8002c6e <_dtoa_r+0xa8e>
 8002c64:	9907      	ldr	r1, [sp, #28]
 8002c66:	430b      	orrs	r3, r1
 8002c68:	9906      	ldr	r1, [sp, #24]
 8002c6a:	430b      	orrs	r3, r1
 8002c6c:	d120      	bne.n	8002cb0 <_dtoa_r+0xad0>
 8002c6e:	2a00      	cmp	r2, #0
 8002c70:	dded      	ble.n	8002c4e <_dtoa_r+0xa6e>
 8002c72:	4651      	mov	r1, sl
 8002c74:	2201      	movs	r2, #1
 8002c76:	4620      	mov	r0, r4
 8002c78:	f000 feb2 	bl	80039e0 <__lshift>
 8002c7c:	4631      	mov	r1, r6
 8002c7e:	4682      	mov	sl, r0
 8002c80:	f000 ff1a 	bl	8003ab8 <__mcmp>
 8002c84:	2800      	cmp	r0, #0
 8002c86:	dc03      	bgt.n	8002c90 <_dtoa_r+0xab0>
 8002c88:	d1e1      	bne.n	8002c4e <_dtoa_r+0xa6e>
 8002c8a:	f019 0f01 	tst.w	r9, #1
 8002c8e:	d0de      	beq.n	8002c4e <_dtoa_r+0xa6e>
 8002c90:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002c94:	d1d8      	bne.n	8002c48 <_dtoa_r+0xa68>
 8002c96:	9a01      	ldr	r2, [sp, #4]
 8002c98:	2339      	movs	r3, #57	; 0x39
 8002c9a:	7013      	strb	r3, [r2, #0]
 8002c9c:	462b      	mov	r3, r5
 8002c9e:	461d      	mov	r5, r3
 8002ca0:	3b01      	subs	r3, #1
 8002ca2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002ca6:	2a39      	cmp	r2, #57	; 0x39
 8002ca8:	d06c      	beq.n	8002d84 <_dtoa_r+0xba4>
 8002caa:	3201      	adds	r2, #1
 8002cac:	701a      	strb	r2, [r3, #0]
 8002cae:	e747      	b.n	8002b40 <_dtoa_r+0x960>
 8002cb0:	2a00      	cmp	r2, #0
 8002cb2:	dd07      	ble.n	8002cc4 <_dtoa_r+0xae4>
 8002cb4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002cb8:	d0ed      	beq.n	8002c96 <_dtoa_r+0xab6>
 8002cba:	9a01      	ldr	r2, [sp, #4]
 8002cbc:	f109 0301 	add.w	r3, r9, #1
 8002cc0:	7013      	strb	r3, [r2, #0]
 8002cc2:	e73d      	b.n	8002b40 <_dtoa_r+0x960>
 8002cc4:	9b04      	ldr	r3, [sp, #16]
 8002cc6:	9a08      	ldr	r2, [sp, #32]
 8002cc8:	f803 9c01 	strb.w	r9, [r3, #-1]
 8002ccc:	4293      	cmp	r3, r2
 8002cce:	d043      	beq.n	8002d58 <_dtoa_r+0xb78>
 8002cd0:	4651      	mov	r1, sl
 8002cd2:	2300      	movs	r3, #0
 8002cd4:	220a      	movs	r2, #10
 8002cd6:	4620      	mov	r0, r4
 8002cd8:	f000 fcd4 	bl	8003684 <__multadd>
 8002cdc:	45b8      	cmp	r8, r7
 8002cde:	4682      	mov	sl, r0
 8002ce0:	f04f 0300 	mov.w	r3, #0
 8002ce4:	f04f 020a 	mov.w	r2, #10
 8002ce8:	4641      	mov	r1, r8
 8002cea:	4620      	mov	r0, r4
 8002cec:	d107      	bne.n	8002cfe <_dtoa_r+0xb1e>
 8002cee:	f000 fcc9 	bl	8003684 <__multadd>
 8002cf2:	4680      	mov	r8, r0
 8002cf4:	4607      	mov	r7, r0
 8002cf6:	9b04      	ldr	r3, [sp, #16]
 8002cf8:	3301      	adds	r3, #1
 8002cfa:	9304      	str	r3, [sp, #16]
 8002cfc:	e775      	b.n	8002bea <_dtoa_r+0xa0a>
 8002cfe:	f000 fcc1 	bl	8003684 <__multadd>
 8002d02:	4639      	mov	r1, r7
 8002d04:	4680      	mov	r8, r0
 8002d06:	2300      	movs	r3, #0
 8002d08:	220a      	movs	r2, #10
 8002d0a:	4620      	mov	r0, r4
 8002d0c:	f000 fcba 	bl	8003684 <__multadd>
 8002d10:	4607      	mov	r7, r0
 8002d12:	e7f0      	b.n	8002cf6 <_dtoa_r+0xb16>
 8002d14:	9b04      	ldr	r3, [sp, #16]
 8002d16:	9301      	str	r3, [sp, #4]
 8002d18:	9d00      	ldr	r5, [sp, #0]
 8002d1a:	4631      	mov	r1, r6
 8002d1c:	4650      	mov	r0, sl
 8002d1e:	f7ff f9d6 	bl	80020ce <quorem>
 8002d22:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002d26:	9b00      	ldr	r3, [sp, #0]
 8002d28:	f805 9b01 	strb.w	r9, [r5], #1
 8002d2c:	1aea      	subs	r2, r5, r3
 8002d2e:	9b01      	ldr	r3, [sp, #4]
 8002d30:	4293      	cmp	r3, r2
 8002d32:	dd07      	ble.n	8002d44 <_dtoa_r+0xb64>
 8002d34:	4651      	mov	r1, sl
 8002d36:	2300      	movs	r3, #0
 8002d38:	220a      	movs	r2, #10
 8002d3a:	4620      	mov	r0, r4
 8002d3c:	f000 fca2 	bl	8003684 <__multadd>
 8002d40:	4682      	mov	sl, r0
 8002d42:	e7ea      	b.n	8002d1a <_dtoa_r+0xb3a>
 8002d44:	9b01      	ldr	r3, [sp, #4]
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	bfc8      	it	gt
 8002d4a:	461d      	movgt	r5, r3
 8002d4c:	9b00      	ldr	r3, [sp, #0]
 8002d4e:	bfd8      	it	le
 8002d50:	2501      	movle	r5, #1
 8002d52:	441d      	add	r5, r3
 8002d54:	f04f 0800 	mov.w	r8, #0
 8002d58:	4651      	mov	r1, sl
 8002d5a:	2201      	movs	r2, #1
 8002d5c:	4620      	mov	r0, r4
 8002d5e:	f000 fe3f 	bl	80039e0 <__lshift>
 8002d62:	4631      	mov	r1, r6
 8002d64:	4682      	mov	sl, r0
 8002d66:	f000 fea7 	bl	8003ab8 <__mcmp>
 8002d6a:	2800      	cmp	r0, #0
 8002d6c:	dc96      	bgt.n	8002c9c <_dtoa_r+0xabc>
 8002d6e:	d102      	bne.n	8002d76 <_dtoa_r+0xb96>
 8002d70:	f019 0f01 	tst.w	r9, #1
 8002d74:	d192      	bne.n	8002c9c <_dtoa_r+0xabc>
 8002d76:	462b      	mov	r3, r5
 8002d78:	461d      	mov	r5, r3
 8002d7a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d7e:	2a30      	cmp	r2, #48	; 0x30
 8002d80:	d0fa      	beq.n	8002d78 <_dtoa_r+0xb98>
 8002d82:	e6dd      	b.n	8002b40 <_dtoa_r+0x960>
 8002d84:	9a00      	ldr	r2, [sp, #0]
 8002d86:	429a      	cmp	r2, r3
 8002d88:	d189      	bne.n	8002c9e <_dtoa_r+0xabe>
 8002d8a:	f10b 0b01 	add.w	fp, fp, #1
 8002d8e:	2331      	movs	r3, #49	; 0x31
 8002d90:	e796      	b.n	8002cc0 <_dtoa_r+0xae0>
 8002d92:	4b0a      	ldr	r3, [pc, #40]	; (8002dbc <_dtoa_r+0xbdc>)
 8002d94:	f7ff ba99 	b.w	80022ca <_dtoa_r+0xea>
 8002d98:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	f47f aa6d 	bne.w	800227a <_dtoa_r+0x9a>
 8002da0:	4b07      	ldr	r3, [pc, #28]	; (8002dc0 <_dtoa_r+0xbe0>)
 8002da2:	f7ff ba92 	b.w	80022ca <_dtoa_r+0xea>
 8002da6:	9b01      	ldr	r3, [sp, #4]
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	dcb5      	bgt.n	8002d18 <_dtoa_r+0xb38>
 8002dac:	9b07      	ldr	r3, [sp, #28]
 8002dae:	2b02      	cmp	r3, #2
 8002db0:	f73f aeb1 	bgt.w	8002b16 <_dtoa_r+0x936>
 8002db4:	e7b0      	b.n	8002d18 <_dtoa_r+0xb38>
 8002db6:	bf00      	nop
 8002db8:	0800471c 	.word	0x0800471c
 8002dbc:	0800467c 	.word	0x0800467c
 8002dc0:	080046a0 	.word	0x080046a0

08002dc4 <__ssputs_r>:
 8002dc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002dc8:	688e      	ldr	r6, [r1, #8]
 8002dca:	461f      	mov	r7, r3
 8002dcc:	42be      	cmp	r6, r7
 8002dce:	680b      	ldr	r3, [r1, #0]
 8002dd0:	4682      	mov	sl, r0
 8002dd2:	460c      	mov	r4, r1
 8002dd4:	4690      	mov	r8, r2
 8002dd6:	d82c      	bhi.n	8002e32 <__ssputs_r+0x6e>
 8002dd8:	898a      	ldrh	r2, [r1, #12]
 8002dda:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8002dde:	d026      	beq.n	8002e2e <__ssputs_r+0x6a>
 8002de0:	6965      	ldr	r5, [r4, #20]
 8002de2:	6909      	ldr	r1, [r1, #16]
 8002de4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002de8:	eba3 0901 	sub.w	r9, r3, r1
 8002dec:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002df0:	1c7b      	adds	r3, r7, #1
 8002df2:	444b      	add	r3, r9
 8002df4:	106d      	asrs	r5, r5, #1
 8002df6:	429d      	cmp	r5, r3
 8002df8:	bf38      	it	cc
 8002dfa:	461d      	movcc	r5, r3
 8002dfc:	0553      	lsls	r3, r2, #21
 8002dfe:	d527      	bpl.n	8002e50 <__ssputs_r+0x8c>
 8002e00:	4629      	mov	r1, r5
 8002e02:	f000 faa3 	bl	800334c <_malloc_r>
 8002e06:	4606      	mov	r6, r0
 8002e08:	b360      	cbz	r0, 8002e64 <__ssputs_r+0xa0>
 8002e0a:	6921      	ldr	r1, [r4, #16]
 8002e0c:	464a      	mov	r2, r9
 8002e0e:	f001 f94f 	bl	80040b0 <memcpy>
 8002e12:	89a3      	ldrh	r3, [r4, #12]
 8002e14:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8002e18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002e1c:	81a3      	strh	r3, [r4, #12]
 8002e1e:	6126      	str	r6, [r4, #16]
 8002e20:	6165      	str	r5, [r4, #20]
 8002e22:	444e      	add	r6, r9
 8002e24:	eba5 0509 	sub.w	r5, r5, r9
 8002e28:	6026      	str	r6, [r4, #0]
 8002e2a:	60a5      	str	r5, [r4, #8]
 8002e2c:	463e      	mov	r6, r7
 8002e2e:	42be      	cmp	r6, r7
 8002e30:	d900      	bls.n	8002e34 <__ssputs_r+0x70>
 8002e32:	463e      	mov	r6, r7
 8002e34:	6820      	ldr	r0, [r4, #0]
 8002e36:	4632      	mov	r2, r6
 8002e38:	4641      	mov	r1, r8
 8002e3a:	f001 f8a7 	bl	8003f8c <memmove>
 8002e3e:	68a3      	ldr	r3, [r4, #8]
 8002e40:	1b9b      	subs	r3, r3, r6
 8002e42:	60a3      	str	r3, [r4, #8]
 8002e44:	6823      	ldr	r3, [r4, #0]
 8002e46:	4433      	add	r3, r6
 8002e48:	6023      	str	r3, [r4, #0]
 8002e4a:	2000      	movs	r0, #0
 8002e4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e50:	462a      	mov	r2, r5
 8002e52:	f000 ff74 	bl	8003d3e <_realloc_r>
 8002e56:	4606      	mov	r6, r0
 8002e58:	2800      	cmp	r0, #0
 8002e5a:	d1e0      	bne.n	8002e1e <__ssputs_r+0x5a>
 8002e5c:	6921      	ldr	r1, [r4, #16]
 8002e5e:	4650      	mov	r0, sl
 8002e60:	f001 f968 	bl	8004134 <_free_r>
 8002e64:	230c      	movs	r3, #12
 8002e66:	f8ca 3000 	str.w	r3, [sl]
 8002e6a:	89a3      	ldrh	r3, [r4, #12]
 8002e6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002e70:	81a3      	strh	r3, [r4, #12]
 8002e72:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002e76:	e7e9      	b.n	8002e4c <__ssputs_r+0x88>

08002e78 <_svfiprintf_r>:
 8002e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e7c:	4698      	mov	r8, r3
 8002e7e:	898b      	ldrh	r3, [r1, #12]
 8002e80:	061b      	lsls	r3, r3, #24
 8002e82:	b09d      	sub	sp, #116	; 0x74
 8002e84:	4607      	mov	r7, r0
 8002e86:	460d      	mov	r5, r1
 8002e88:	4614      	mov	r4, r2
 8002e8a:	d50e      	bpl.n	8002eaa <_svfiprintf_r+0x32>
 8002e8c:	690b      	ldr	r3, [r1, #16]
 8002e8e:	b963      	cbnz	r3, 8002eaa <_svfiprintf_r+0x32>
 8002e90:	2140      	movs	r1, #64	; 0x40
 8002e92:	f000 fa5b 	bl	800334c <_malloc_r>
 8002e96:	6028      	str	r0, [r5, #0]
 8002e98:	6128      	str	r0, [r5, #16]
 8002e9a:	b920      	cbnz	r0, 8002ea6 <_svfiprintf_r+0x2e>
 8002e9c:	230c      	movs	r3, #12
 8002e9e:	603b      	str	r3, [r7, #0]
 8002ea0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002ea4:	e0d0      	b.n	8003048 <_svfiprintf_r+0x1d0>
 8002ea6:	2340      	movs	r3, #64	; 0x40
 8002ea8:	616b      	str	r3, [r5, #20]
 8002eaa:	2300      	movs	r3, #0
 8002eac:	9309      	str	r3, [sp, #36]	; 0x24
 8002eae:	2320      	movs	r3, #32
 8002eb0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002eb4:	f8cd 800c 	str.w	r8, [sp, #12]
 8002eb8:	2330      	movs	r3, #48	; 0x30
 8002eba:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003060 <_svfiprintf_r+0x1e8>
 8002ebe:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002ec2:	f04f 0901 	mov.w	r9, #1
 8002ec6:	4623      	mov	r3, r4
 8002ec8:	469a      	mov	sl, r3
 8002eca:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002ece:	b10a      	cbz	r2, 8002ed4 <_svfiprintf_r+0x5c>
 8002ed0:	2a25      	cmp	r2, #37	; 0x25
 8002ed2:	d1f9      	bne.n	8002ec8 <_svfiprintf_r+0x50>
 8002ed4:	ebba 0b04 	subs.w	fp, sl, r4
 8002ed8:	d00b      	beq.n	8002ef2 <_svfiprintf_r+0x7a>
 8002eda:	465b      	mov	r3, fp
 8002edc:	4622      	mov	r2, r4
 8002ede:	4629      	mov	r1, r5
 8002ee0:	4638      	mov	r0, r7
 8002ee2:	f7ff ff6f 	bl	8002dc4 <__ssputs_r>
 8002ee6:	3001      	adds	r0, #1
 8002ee8:	f000 80a9 	beq.w	800303e <_svfiprintf_r+0x1c6>
 8002eec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002eee:	445a      	add	r2, fp
 8002ef0:	9209      	str	r2, [sp, #36]	; 0x24
 8002ef2:	f89a 3000 	ldrb.w	r3, [sl]
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	f000 80a1 	beq.w	800303e <_svfiprintf_r+0x1c6>
 8002efc:	2300      	movs	r3, #0
 8002efe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002f02:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002f06:	f10a 0a01 	add.w	sl, sl, #1
 8002f0a:	9304      	str	r3, [sp, #16]
 8002f0c:	9307      	str	r3, [sp, #28]
 8002f0e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002f12:	931a      	str	r3, [sp, #104]	; 0x68
 8002f14:	4654      	mov	r4, sl
 8002f16:	2205      	movs	r2, #5
 8002f18:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002f1c:	4850      	ldr	r0, [pc, #320]	; (8003060 <_svfiprintf_r+0x1e8>)
 8002f1e:	f7fd f957 	bl	80001d0 <memchr>
 8002f22:	9a04      	ldr	r2, [sp, #16]
 8002f24:	b9d8      	cbnz	r0, 8002f5e <_svfiprintf_r+0xe6>
 8002f26:	06d0      	lsls	r0, r2, #27
 8002f28:	bf44      	itt	mi
 8002f2a:	2320      	movmi	r3, #32
 8002f2c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002f30:	0711      	lsls	r1, r2, #28
 8002f32:	bf44      	itt	mi
 8002f34:	232b      	movmi	r3, #43	; 0x2b
 8002f36:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002f3a:	f89a 3000 	ldrb.w	r3, [sl]
 8002f3e:	2b2a      	cmp	r3, #42	; 0x2a
 8002f40:	d015      	beq.n	8002f6e <_svfiprintf_r+0xf6>
 8002f42:	9a07      	ldr	r2, [sp, #28]
 8002f44:	4654      	mov	r4, sl
 8002f46:	2000      	movs	r0, #0
 8002f48:	f04f 0c0a 	mov.w	ip, #10
 8002f4c:	4621      	mov	r1, r4
 8002f4e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002f52:	3b30      	subs	r3, #48	; 0x30
 8002f54:	2b09      	cmp	r3, #9
 8002f56:	d94d      	bls.n	8002ff4 <_svfiprintf_r+0x17c>
 8002f58:	b1b0      	cbz	r0, 8002f88 <_svfiprintf_r+0x110>
 8002f5a:	9207      	str	r2, [sp, #28]
 8002f5c:	e014      	b.n	8002f88 <_svfiprintf_r+0x110>
 8002f5e:	eba0 0308 	sub.w	r3, r0, r8
 8002f62:	fa09 f303 	lsl.w	r3, r9, r3
 8002f66:	4313      	orrs	r3, r2
 8002f68:	9304      	str	r3, [sp, #16]
 8002f6a:	46a2      	mov	sl, r4
 8002f6c:	e7d2      	b.n	8002f14 <_svfiprintf_r+0x9c>
 8002f6e:	9b03      	ldr	r3, [sp, #12]
 8002f70:	1d19      	adds	r1, r3, #4
 8002f72:	681b      	ldr	r3, [r3, #0]
 8002f74:	9103      	str	r1, [sp, #12]
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	bfbb      	ittet	lt
 8002f7a:	425b      	neglt	r3, r3
 8002f7c:	f042 0202 	orrlt.w	r2, r2, #2
 8002f80:	9307      	strge	r3, [sp, #28]
 8002f82:	9307      	strlt	r3, [sp, #28]
 8002f84:	bfb8      	it	lt
 8002f86:	9204      	strlt	r2, [sp, #16]
 8002f88:	7823      	ldrb	r3, [r4, #0]
 8002f8a:	2b2e      	cmp	r3, #46	; 0x2e
 8002f8c:	d10c      	bne.n	8002fa8 <_svfiprintf_r+0x130>
 8002f8e:	7863      	ldrb	r3, [r4, #1]
 8002f90:	2b2a      	cmp	r3, #42	; 0x2a
 8002f92:	d134      	bne.n	8002ffe <_svfiprintf_r+0x186>
 8002f94:	9b03      	ldr	r3, [sp, #12]
 8002f96:	1d1a      	adds	r2, r3, #4
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	9203      	str	r2, [sp, #12]
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	bfb8      	it	lt
 8002fa0:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8002fa4:	3402      	adds	r4, #2
 8002fa6:	9305      	str	r3, [sp, #20]
 8002fa8:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8003070 <_svfiprintf_r+0x1f8>
 8002fac:	7821      	ldrb	r1, [r4, #0]
 8002fae:	2203      	movs	r2, #3
 8002fb0:	4650      	mov	r0, sl
 8002fb2:	f7fd f90d 	bl	80001d0 <memchr>
 8002fb6:	b138      	cbz	r0, 8002fc8 <_svfiprintf_r+0x150>
 8002fb8:	9b04      	ldr	r3, [sp, #16]
 8002fba:	eba0 000a 	sub.w	r0, r0, sl
 8002fbe:	2240      	movs	r2, #64	; 0x40
 8002fc0:	4082      	lsls	r2, r0
 8002fc2:	4313      	orrs	r3, r2
 8002fc4:	3401      	adds	r4, #1
 8002fc6:	9304      	str	r3, [sp, #16]
 8002fc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002fcc:	4825      	ldr	r0, [pc, #148]	; (8003064 <_svfiprintf_r+0x1ec>)
 8002fce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002fd2:	2206      	movs	r2, #6
 8002fd4:	f7fd f8fc 	bl	80001d0 <memchr>
 8002fd8:	2800      	cmp	r0, #0
 8002fda:	d038      	beq.n	800304e <_svfiprintf_r+0x1d6>
 8002fdc:	4b22      	ldr	r3, [pc, #136]	; (8003068 <_svfiprintf_r+0x1f0>)
 8002fde:	bb1b      	cbnz	r3, 8003028 <_svfiprintf_r+0x1b0>
 8002fe0:	9b03      	ldr	r3, [sp, #12]
 8002fe2:	3307      	adds	r3, #7
 8002fe4:	f023 0307 	bic.w	r3, r3, #7
 8002fe8:	3308      	adds	r3, #8
 8002fea:	9303      	str	r3, [sp, #12]
 8002fec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002fee:	4433      	add	r3, r6
 8002ff0:	9309      	str	r3, [sp, #36]	; 0x24
 8002ff2:	e768      	b.n	8002ec6 <_svfiprintf_r+0x4e>
 8002ff4:	fb0c 3202 	mla	r2, ip, r2, r3
 8002ff8:	460c      	mov	r4, r1
 8002ffa:	2001      	movs	r0, #1
 8002ffc:	e7a6      	b.n	8002f4c <_svfiprintf_r+0xd4>
 8002ffe:	2300      	movs	r3, #0
 8003000:	3401      	adds	r4, #1
 8003002:	9305      	str	r3, [sp, #20]
 8003004:	4619      	mov	r1, r3
 8003006:	f04f 0c0a 	mov.w	ip, #10
 800300a:	4620      	mov	r0, r4
 800300c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003010:	3a30      	subs	r2, #48	; 0x30
 8003012:	2a09      	cmp	r2, #9
 8003014:	d903      	bls.n	800301e <_svfiprintf_r+0x1a6>
 8003016:	2b00      	cmp	r3, #0
 8003018:	d0c6      	beq.n	8002fa8 <_svfiprintf_r+0x130>
 800301a:	9105      	str	r1, [sp, #20]
 800301c:	e7c4      	b.n	8002fa8 <_svfiprintf_r+0x130>
 800301e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003022:	4604      	mov	r4, r0
 8003024:	2301      	movs	r3, #1
 8003026:	e7f0      	b.n	800300a <_svfiprintf_r+0x192>
 8003028:	ab03      	add	r3, sp, #12
 800302a:	9300      	str	r3, [sp, #0]
 800302c:	462a      	mov	r2, r5
 800302e:	4b0f      	ldr	r3, [pc, #60]	; (800306c <_svfiprintf_r+0x1f4>)
 8003030:	a904      	add	r1, sp, #16
 8003032:	4638      	mov	r0, r7
 8003034:	f7fe fafc 	bl	8001630 <_printf_float>
 8003038:	1c42      	adds	r2, r0, #1
 800303a:	4606      	mov	r6, r0
 800303c:	d1d6      	bne.n	8002fec <_svfiprintf_r+0x174>
 800303e:	89ab      	ldrh	r3, [r5, #12]
 8003040:	065b      	lsls	r3, r3, #25
 8003042:	f53f af2d 	bmi.w	8002ea0 <_svfiprintf_r+0x28>
 8003046:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003048:	b01d      	add	sp, #116	; 0x74
 800304a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800304e:	ab03      	add	r3, sp, #12
 8003050:	9300      	str	r3, [sp, #0]
 8003052:	462a      	mov	r2, r5
 8003054:	4b05      	ldr	r3, [pc, #20]	; (800306c <_svfiprintf_r+0x1f4>)
 8003056:	a904      	add	r1, sp, #16
 8003058:	4638      	mov	r0, r7
 800305a:	f7fe fd8d 	bl	8001b78 <_printf_i>
 800305e:	e7eb      	b.n	8003038 <_svfiprintf_r+0x1c0>
 8003060:	0800472d 	.word	0x0800472d
 8003064:	08004737 	.word	0x08004737
 8003068:	08001631 	.word	0x08001631
 800306c:	08002dc5 	.word	0x08002dc5
 8003070:	08004733 	.word	0x08004733

08003074 <__sfputc_r>:
 8003074:	6893      	ldr	r3, [r2, #8]
 8003076:	3b01      	subs	r3, #1
 8003078:	2b00      	cmp	r3, #0
 800307a:	b410      	push	{r4}
 800307c:	6093      	str	r3, [r2, #8]
 800307e:	da08      	bge.n	8003092 <__sfputc_r+0x1e>
 8003080:	6994      	ldr	r4, [r2, #24]
 8003082:	42a3      	cmp	r3, r4
 8003084:	db01      	blt.n	800308a <__sfputc_r+0x16>
 8003086:	290a      	cmp	r1, #10
 8003088:	d103      	bne.n	8003092 <__sfputc_r+0x1e>
 800308a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800308e:	f000 be85 	b.w	8003d9c <__swbuf_r>
 8003092:	6813      	ldr	r3, [r2, #0]
 8003094:	1c58      	adds	r0, r3, #1
 8003096:	6010      	str	r0, [r2, #0]
 8003098:	7019      	strb	r1, [r3, #0]
 800309a:	4608      	mov	r0, r1
 800309c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80030a0:	4770      	bx	lr

080030a2 <__sfputs_r>:
 80030a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030a4:	4606      	mov	r6, r0
 80030a6:	460f      	mov	r7, r1
 80030a8:	4614      	mov	r4, r2
 80030aa:	18d5      	adds	r5, r2, r3
 80030ac:	42ac      	cmp	r4, r5
 80030ae:	d101      	bne.n	80030b4 <__sfputs_r+0x12>
 80030b0:	2000      	movs	r0, #0
 80030b2:	e007      	b.n	80030c4 <__sfputs_r+0x22>
 80030b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80030b8:	463a      	mov	r2, r7
 80030ba:	4630      	mov	r0, r6
 80030bc:	f7ff ffda 	bl	8003074 <__sfputc_r>
 80030c0:	1c43      	adds	r3, r0, #1
 80030c2:	d1f3      	bne.n	80030ac <__sfputs_r+0xa>
 80030c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080030c8 <_vfiprintf_r>:
 80030c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030cc:	460d      	mov	r5, r1
 80030ce:	b09d      	sub	sp, #116	; 0x74
 80030d0:	4614      	mov	r4, r2
 80030d2:	4698      	mov	r8, r3
 80030d4:	4606      	mov	r6, r0
 80030d6:	b118      	cbz	r0, 80030e0 <_vfiprintf_r+0x18>
 80030d8:	6a03      	ldr	r3, [r0, #32]
 80030da:	b90b      	cbnz	r3, 80030e0 <_vfiprintf_r+0x18>
 80030dc:	f7fe ff1a 	bl	8001f14 <__sinit>
 80030e0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80030e2:	07d9      	lsls	r1, r3, #31
 80030e4:	d405      	bmi.n	80030f2 <_vfiprintf_r+0x2a>
 80030e6:	89ab      	ldrh	r3, [r5, #12]
 80030e8:	059a      	lsls	r2, r3, #22
 80030ea:	d402      	bmi.n	80030f2 <_vfiprintf_r+0x2a>
 80030ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80030ee:	f7fe ffec 	bl	80020ca <__retarget_lock_acquire_recursive>
 80030f2:	89ab      	ldrh	r3, [r5, #12]
 80030f4:	071b      	lsls	r3, r3, #28
 80030f6:	d501      	bpl.n	80030fc <_vfiprintf_r+0x34>
 80030f8:	692b      	ldr	r3, [r5, #16]
 80030fa:	b99b      	cbnz	r3, 8003124 <_vfiprintf_r+0x5c>
 80030fc:	4629      	mov	r1, r5
 80030fe:	4630      	mov	r0, r6
 8003100:	f000 fe8a 	bl	8003e18 <__swsetup_r>
 8003104:	b170      	cbz	r0, 8003124 <_vfiprintf_r+0x5c>
 8003106:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003108:	07dc      	lsls	r4, r3, #31
 800310a:	d504      	bpl.n	8003116 <_vfiprintf_r+0x4e>
 800310c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003110:	b01d      	add	sp, #116	; 0x74
 8003112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003116:	89ab      	ldrh	r3, [r5, #12]
 8003118:	0598      	lsls	r0, r3, #22
 800311a:	d4f7      	bmi.n	800310c <_vfiprintf_r+0x44>
 800311c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800311e:	f7fe ffd5 	bl	80020cc <__retarget_lock_release_recursive>
 8003122:	e7f3      	b.n	800310c <_vfiprintf_r+0x44>
 8003124:	2300      	movs	r3, #0
 8003126:	9309      	str	r3, [sp, #36]	; 0x24
 8003128:	2320      	movs	r3, #32
 800312a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800312e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003132:	2330      	movs	r3, #48	; 0x30
 8003134:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80032e8 <_vfiprintf_r+0x220>
 8003138:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800313c:	f04f 0901 	mov.w	r9, #1
 8003140:	4623      	mov	r3, r4
 8003142:	469a      	mov	sl, r3
 8003144:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003148:	b10a      	cbz	r2, 800314e <_vfiprintf_r+0x86>
 800314a:	2a25      	cmp	r2, #37	; 0x25
 800314c:	d1f9      	bne.n	8003142 <_vfiprintf_r+0x7a>
 800314e:	ebba 0b04 	subs.w	fp, sl, r4
 8003152:	d00b      	beq.n	800316c <_vfiprintf_r+0xa4>
 8003154:	465b      	mov	r3, fp
 8003156:	4622      	mov	r2, r4
 8003158:	4629      	mov	r1, r5
 800315a:	4630      	mov	r0, r6
 800315c:	f7ff ffa1 	bl	80030a2 <__sfputs_r>
 8003160:	3001      	adds	r0, #1
 8003162:	f000 80a9 	beq.w	80032b8 <_vfiprintf_r+0x1f0>
 8003166:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003168:	445a      	add	r2, fp
 800316a:	9209      	str	r2, [sp, #36]	; 0x24
 800316c:	f89a 3000 	ldrb.w	r3, [sl]
 8003170:	2b00      	cmp	r3, #0
 8003172:	f000 80a1 	beq.w	80032b8 <_vfiprintf_r+0x1f0>
 8003176:	2300      	movs	r3, #0
 8003178:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800317c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003180:	f10a 0a01 	add.w	sl, sl, #1
 8003184:	9304      	str	r3, [sp, #16]
 8003186:	9307      	str	r3, [sp, #28]
 8003188:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800318c:	931a      	str	r3, [sp, #104]	; 0x68
 800318e:	4654      	mov	r4, sl
 8003190:	2205      	movs	r2, #5
 8003192:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003196:	4854      	ldr	r0, [pc, #336]	; (80032e8 <_vfiprintf_r+0x220>)
 8003198:	f7fd f81a 	bl	80001d0 <memchr>
 800319c:	9a04      	ldr	r2, [sp, #16]
 800319e:	b9d8      	cbnz	r0, 80031d8 <_vfiprintf_r+0x110>
 80031a0:	06d1      	lsls	r1, r2, #27
 80031a2:	bf44      	itt	mi
 80031a4:	2320      	movmi	r3, #32
 80031a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80031aa:	0713      	lsls	r3, r2, #28
 80031ac:	bf44      	itt	mi
 80031ae:	232b      	movmi	r3, #43	; 0x2b
 80031b0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80031b4:	f89a 3000 	ldrb.w	r3, [sl]
 80031b8:	2b2a      	cmp	r3, #42	; 0x2a
 80031ba:	d015      	beq.n	80031e8 <_vfiprintf_r+0x120>
 80031bc:	9a07      	ldr	r2, [sp, #28]
 80031be:	4654      	mov	r4, sl
 80031c0:	2000      	movs	r0, #0
 80031c2:	f04f 0c0a 	mov.w	ip, #10
 80031c6:	4621      	mov	r1, r4
 80031c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80031cc:	3b30      	subs	r3, #48	; 0x30
 80031ce:	2b09      	cmp	r3, #9
 80031d0:	d94d      	bls.n	800326e <_vfiprintf_r+0x1a6>
 80031d2:	b1b0      	cbz	r0, 8003202 <_vfiprintf_r+0x13a>
 80031d4:	9207      	str	r2, [sp, #28]
 80031d6:	e014      	b.n	8003202 <_vfiprintf_r+0x13a>
 80031d8:	eba0 0308 	sub.w	r3, r0, r8
 80031dc:	fa09 f303 	lsl.w	r3, r9, r3
 80031e0:	4313      	orrs	r3, r2
 80031e2:	9304      	str	r3, [sp, #16]
 80031e4:	46a2      	mov	sl, r4
 80031e6:	e7d2      	b.n	800318e <_vfiprintf_r+0xc6>
 80031e8:	9b03      	ldr	r3, [sp, #12]
 80031ea:	1d19      	adds	r1, r3, #4
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	9103      	str	r1, [sp, #12]
 80031f0:	2b00      	cmp	r3, #0
 80031f2:	bfbb      	ittet	lt
 80031f4:	425b      	neglt	r3, r3
 80031f6:	f042 0202 	orrlt.w	r2, r2, #2
 80031fa:	9307      	strge	r3, [sp, #28]
 80031fc:	9307      	strlt	r3, [sp, #28]
 80031fe:	bfb8      	it	lt
 8003200:	9204      	strlt	r2, [sp, #16]
 8003202:	7823      	ldrb	r3, [r4, #0]
 8003204:	2b2e      	cmp	r3, #46	; 0x2e
 8003206:	d10c      	bne.n	8003222 <_vfiprintf_r+0x15a>
 8003208:	7863      	ldrb	r3, [r4, #1]
 800320a:	2b2a      	cmp	r3, #42	; 0x2a
 800320c:	d134      	bne.n	8003278 <_vfiprintf_r+0x1b0>
 800320e:	9b03      	ldr	r3, [sp, #12]
 8003210:	1d1a      	adds	r2, r3, #4
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	9203      	str	r2, [sp, #12]
 8003216:	2b00      	cmp	r3, #0
 8003218:	bfb8      	it	lt
 800321a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800321e:	3402      	adds	r4, #2
 8003220:	9305      	str	r3, [sp, #20]
 8003222:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 80032f8 <_vfiprintf_r+0x230>
 8003226:	7821      	ldrb	r1, [r4, #0]
 8003228:	2203      	movs	r2, #3
 800322a:	4650      	mov	r0, sl
 800322c:	f7fc ffd0 	bl	80001d0 <memchr>
 8003230:	b138      	cbz	r0, 8003242 <_vfiprintf_r+0x17a>
 8003232:	9b04      	ldr	r3, [sp, #16]
 8003234:	eba0 000a 	sub.w	r0, r0, sl
 8003238:	2240      	movs	r2, #64	; 0x40
 800323a:	4082      	lsls	r2, r0
 800323c:	4313      	orrs	r3, r2
 800323e:	3401      	adds	r4, #1
 8003240:	9304      	str	r3, [sp, #16]
 8003242:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003246:	4829      	ldr	r0, [pc, #164]	; (80032ec <_vfiprintf_r+0x224>)
 8003248:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800324c:	2206      	movs	r2, #6
 800324e:	f7fc ffbf 	bl	80001d0 <memchr>
 8003252:	2800      	cmp	r0, #0
 8003254:	d03f      	beq.n	80032d6 <_vfiprintf_r+0x20e>
 8003256:	4b26      	ldr	r3, [pc, #152]	; (80032f0 <_vfiprintf_r+0x228>)
 8003258:	bb1b      	cbnz	r3, 80032a2 <_vfiprintf_r+0x1da>
 800325a:	9b03      	ldr	r3, [sp, #12]
 800325c:	3307      	adds	r3, #7
 800325e:	f023 0307 	bic.w	r3, r3, #7
 8003262:	3308      	adds	r3, #8
 8003264:	9303      	str	r3, [sp, #12]
 8003266:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003268:	443b      	add	r3, r7
 800326a:	9309      	str	r3, [sp, #36]	; 0x24
 800326c:	e768      	b.n	8003140 <_vfiprintf_r+0x78>
 800326e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003272:	460c      	mov	r4, r1
 8003274:	2001      	movs	r0, #1
 8003276:	e7a6      	b.n	80031c6 <_vfiprintf_r+0xfe>
 8003278:	2300      	movs	r3, #0
 800327a:	3401      	adds	r4, #1
 800327c:	9305      	str	r3, [sp, #20]
 800327e:	4619      	mov	r1, r3
 8003280:	f04f 0c0a 	mov.w	ip, #10
 8003284:	4620      	mov	r0, r4
 8003286:	f810 2b01 	ldrb.w	r2, [r0], #1
 800328a:	3a30      	subs	r2, #48	; 0x30
 800328c:	2a09      	cmp	r2, #9
 800328e:	d903      	bls.n	8003298 <_vfiprintf_r+0x1d0>
 8003290:	2b00      	cmp	r3, #0
 8003292:	d0c6      	beq.n	8003222 <_vfiprintf_r+0x15a>
 8003294:	9105      	str	r1, [sp, #20]
 8003296:	e7c4      	b.n	8003222 <_vfiprintf_r+0x15a>
 8003298:	fb0c 2101 	mla	r1, ip, r1, r2
 800329c:	4604      	mov	r4, r0
 800329e:	2301      	movs	r3, #1
 80032a0:	e7f0      	b.n	8003284 <_vfiprintf_r+0x1bc>
 80032a2:	ab03      	add	r3, sp, #12
 80032a4:	9300      	str	r3, [sp, #0]
 80032a6:	462a      	mov	r2, r5
 80032a8:	4b12      	ldr	r3, [pc, #72]	; (80032f4 <_vfiprintf_r+0x22c>)
 80032aa:	a904      	add	r1, sp, #16
 80032ac:	4630      	mov	r0, r6
 80032ae:	f7fe f9bf 	bl	8001630 <_printf_float>
 80032b2:	4607      	mov	r7, r0
 80032b4:	1c78      	adds	r0, r7, #1
 80032b6:	d1d6      	bne.n	8003266 <_vfiprintf_r+0x19e>
 80032b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80032ba:	07d9      	lsls	r1, r3, #31
 80032bc:	d405      	bmi.n	80032ca <_vfiprintf_r+0x202>
 80032be:	89ab      	ldrh	r3, [r5, #12]
 80032c0:	059a      	lsls	r2, r3, #22
 80032c2:	d402      	bmi.n	80032ca <_vfiprintf_r+0x202>
 80032c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80032c6:	f7fe ff01 	bl	80020cc <__retarget_lock_release_recursive>
 80032ca:	89ab      	ldrh	r3, [r5, #12]
 80032cc:	065b      	lsls	r3, r3, #25
 80032ce:	f53f af1d 	bmi.w	800310c <_vfiprintf_r+0x44>
 80032d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80032d4:	e71c      	b.n	8003110 <_vfiprintf_r+0x48>
 80032d6:	ab03      	add	r3, sp, #12
 80032d8:	9300      	str	r3, [sp, #0]
 80032da:	462a      	mov	r2, r5
 80032dc:	4b05      	ldr	r3, [pc, #20]	; (80032f4 <_vfiprintf_r+0x22c>)
 80032de:	a904      	add	r1, sp, #16
 80032e0:	4630      	mov	r0, r6
 80032e2:	f7fe fc49 	bl	8001b78 <_printf_i>
 80032e6:	e7e4      	b.n	80032b2 <_vfiprintf_r+0x1ea>
 80032e8:	0800472d 	.word	0x0800472d
 80032ec:	08004737 	.word	0x08004737
 80032f0:	08001631 	.word	0x08001631
 80032f4:	080030a3 	.word	0x080030a3
 80032f8:	08004733 	.word	0x08004733

080032fc <malloc>:
 80032fc:	4b02      	ldr	r3, [pc, #8]	; (8003308 <malloc+0xc>)
 80032fe:	4601      	mov	r1, r0
 8003300:	6818      	ldr	r0, [r3, #0]
 8003302:	f000 b823 	b.w	800334c <_malloc_r>
 8003306:	bf00      	nop
 8003308:	20000058 	.word	0x20000058

0800330c <sbrk_aligned>:
 800330c:	b570      	push	{r4, r5, r6, lr}
 800330e:	4e0e      	ldr	r6, [pc, #56]	; (8003348 <sbrk_aligned+0x3c>)
 8003310:	460c      	mov	r4, r1
 8003312:	6831      	ldr	r1, [r6, #0]
 8003314:	4605      	mov	r5, r0
 8003316:	b911      	cbnz	r1, 800331e <sbrk_aligned+0x12>
 8003318:	f000 fea8 	bl	800406c <_sbrk_r>
 800331c:	6030      	str	r0, [r6, #0]
 800331e:	4621      	mov	r1, r4
 8003320:	4628      	mov	r0, r5
 8003322:	f000 fea3 	bl	800406c <_sbrk_r>
 8003326:	1c43      	adds	r3, r0, #1
 8003328:	d00a      	beq.n	8003340 <sbrk_aligned+0x34>
 800332a:	1cc4      	adds	r4, r0, #3
 800332c:	f024 0403 	bic.w	r4, r4, #3
 8003330:	42a0      	cmp	r0, r4
 8003332:	d007      	beq.n	8003344 <sbrk_aligned+0x38>
 8003334:	1a21      	subs	r1, r4, r0
 8003336:	4628      	mov	r0, r5
 8003338:	f000 fe98 	bl	800406c <_sbrk_r>
 800333c:	3001      	adds	r0, #1
 800333e:	d101      	bne.n	8003344 <sbrk_aligned+0x38>
 8003340:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8003344:	4620      	mov	r0, r4
 8003346:	bd70      	pop	{r4, r5, r6, pc}
 8003348:	2000032c 	.word	0x2000032c

0800334c <_malloc_r>:
 800334c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003350:	1ccd      	adds	r5, r1, #3
 8003352:	f025 0503 	bic.w	r5, r5, #3
 8003356:	3508      	adds	r5, #8
 8003358:	2d0c      	cmp	r5, #12
 800335a:	bf38      	it	cc
 800335c:	250c      	movcc	r5, #12
 800335e:	2d00      	cmp	r5, #0
 8003360:	4607      	mov	r7, r0
 8003362:	db01      	blt.n	8003368 <_malloc_r+0x1c>
 8003364:	42a9      	cmp	r1, r5
 8003366:	d905      	bls.n	8003374 <_malloc_r+0x28>
 8003368:	230c      	movs	r3, #12
 800336a:	603b      	str	r3, [r7, #0]
 800336c:	2600      	movs	r6, #0
 800336e:	4630      	mov	r0, r6
 8003370:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003374:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003448 <_malloc_r+0xfc>
 8003378:	f000 f916 	bl	80035a8 <__malloc_lock>
 800337c:	f8d8 3000 	ldr.w	r3, [r8]
 8003380:	461c      	mov	r4, r3
 8003382:	bb5c      	cbnz	r4, 80033dc <_malloc_r+0x90>
 8003384:	4629      	mov	r1, r5
 8003386:	4638      	mov	r0, r7
 8003388:	f7ff ffc0 	bl	800330c <sbrk_aligned>
 800338c:	1c43      	adds	r3, r0, #1
 800338e:	4604      	mov	r4, r0
 8003390:	d155      	bne.n	800343e <_malloc_r+0xf2>
 8003392:	f8d8 4000 	ldr.w	r4, [r8]
 8003396:	4626      	mov	r6, r4
 8003398:	2e00      	cmp	r6, #0
 800339a:	d145      	bne.n	8003428 <_malloc_r+0xdc>
 800339c:	2c00      	cmp	r4, #0
 800339e:	d048      	beq.n	8003432 <_malloc_r+0xe6>
 80033a0:	6823      	ldr	r3, [r4, #0]
 80033a2:	4631      	mov	r1, r6
 80033a4:	4638      	mov	r0, r7
 80033a6:	eb04 0903 	add.w	r9, r4, r3
 80033aa:	f000 fe5f 	bl	800406c <_sbrk_r>
 80033ae:	4581      	cmp	r9, r0
 80033b0:	d13f      	bne.n	8003432 <_malloc_r+0xe6>
 80033b2:	6821      	ldr	r1, [r4, #0]
 80033b4:	1a6d      	subs	r5, r5, r1
 80033b6:	4629      	mov	r1, r5
 80033b8:	4638      	mov	r0, r7
 80033ba:	f7ff ffa7 	bl	800330c <sbrk_aligned>
 80033be:	3001      	adds	r0, #1
 80033c0:	d037      	beq.n	8003432 <_malloc_r+0xe6>
 80033c2:	6823      	ldr	r3, [r4, #0]
 80033c4:	442b      	add	r3, r5
 80033c6:	6023      	str	r3, [r4, #0]
 80033c8:	f8d8 3000 	ldr.w	r3, [r8]
 80033cc:	2b00      	cmp	r3, #0
 80033ce:	d038      	beq.n	8003442 <_malloc_r+0xf6>
 80033d0:	685a      	ldr	r2, [r3, #4]
 80033d2:	42a2      	cmp	r2, r4
 80033d4:	d12b      	bne.n	800342e <_malloc_r+0xe2>
 80033d6:	2200      	movs	r2, #0
 80033d8:	605a      	str	r2, [r3, #4]
 80033da:	e00f      	b.n	80033fc <_malloc_r+0xb0>
 80033dc:	6822      	ldr	r2, [r4, #0]
 80033de:	1b52      	subs	r2, r2, r5
 80033e0:	d41f      	bmi.n	8003422 <_malloc_r+0xd6>
 80033e2:	2a0b      	cmp	r2, #11
 80033e4:	d917      	bls.n	8003416 <_malloc_r+0xca>
 80033e6:	1961      	adds	r1, r4, r5
 80033e8:	42a3      	cmp	r3, r4
 80033ea:	6025      	str	r5, [r4, #0]
 80033ec:	bf18      	it	ne
 80033ee:	6059      	strne	r1, [r3, #4]
 80033f0:	6863      	ldr	r3, [r4, #4]
 80033f2:	bf08      	it	eq
 80033f4:	f8c8 1000 	streq.w	r1, [r8]
 80033f8:	5162      	str	r2, [r4, r5]
 80033fa:	604b      	str	r3, [r1, #4]
 80033fc:	4638      	mov	r0, r7
 80033fe:	f104 060b 	add.w	r6, r4, #11
 8003402:	f000 f8d7 	bl	80035b4 <__malloc_unlock>
 8003406:	f026 0607 	bic.w	r6, r6, #7
 800340a:	1d23      	adds	r3, r4, #4
 800340c:	1af2      	subs	r2, r6, r3
 800340e:	d0ae      	beq.n	800336e <_malloc_r+0x22>
 8003410:	1b9b      	subs	r3, r3, r6
 8003412:	50a3      	str	r3, [r4, r2]
 8003414:	e7ab      	b.n	800336e <_malloc_r+0x22>
 8003416:	42a3      	cmp	r3, r4
 8003418:	6862      	ldr	r2, [r4, #4]
 800341a:	d1dd      	bne.n	80033d8 <_malloc_r+0x8c>
 800341c:	f8c8 2000 	str.w	r2, [r8]
 8003420:	e7ec      	b.n	80033fc <_malloc_r+0xb0>
 8003422:	4623      	mov	r3, r4
 8003424:	6864      	ldr	r4, [r4, #4]
 8003426:	e7ac      	b.n	8003382 <_malloc_r+0x36>
 8003428:	4634      	mov	r4, r6
 800342a:	6876      	ldr	r6, [r6, #4]
 800342c:	e7b4      	b.n	8003398 <_malloc_r+0x4c>
 800342e:	4613      	mov	r3, r2
 8003430:	e7cc      	b.n	80033cc <_malloc_r+0x80>
 8003432:	230c      	movs	r3, #12
 8003434:	603b      	str	r3, [r7, #0]
 8003436:	4638      	mov	r0, r7
 8003438:	f000 f8bc 	bl	80035b4 <__malloc_unlock>
 800343c:	e797      	b.n	800336e <_malloc_r+0x22>
 800343e:	6025      	str	r5, [r4, #0]
 8003440:	e7dc      	b.n	80033fc <_malloc_r+0xb0>
 8003442:	605b      	str	r3, [r3, #4]
 8003444:	deff      	udf	#255	; 0xff
 8003446:	bf00      	nop
 8003448:	20000328 	.word	0x20000328

0800344c <__sflush_r>:
 800344c:	898a      	ldrh	r2, [r1, #12]
 800344e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003452:	4605      	mov	r5, r0
 8003454:	0710      	lsls	r0, r2, #28
 8003456:	460c      	mov	r4, r1
 8003458:	d458      	bmi.n	800350c <__sflush_r+0xc0>
 800345a:	684b      	ldr	r3, [r1, #4]
 800345c:	2b00      	cmp	r3, #0
 800345e:	dc05      	bgt.n	800346c <__sflush_r+0x20>
 8003460:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003462:	2b00      	cmp	r3, #0
 8003464:	dc02      	bgt.n	800346c <__sflush_r+0x20>
 8003466:	2000      	movs	r0, #0
 8003468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800346c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800346e:	2e00      	cmp	r6, #0
 8003470:	d0f9      	beq.n	8003466 <__sflush_r+0x1a>
 8003472:	2300      	movs	r3, #0
 8003474:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003478:	682f      	ldr	r7, [r5, #0]
 800347a:	6a21      	ldr	r1, [r4, #32]
 800347c:	602b      	str	r3, [r5, #0]
 800347e:	d032      	beq.n	80034e6 <__sflush_r+0x9a>
 8003480:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003482:	89a3      	ldrh	r3, [r4, #12]
 8003484:	075a      	lsls	r2, r3, #29
 8003486:	d505      	bpl.n	8003494 <__sflush_r+0x48>
 8003488:	6863      	ldr	r3, [r4, #4]
 800348a:	1ac0      	subs	r0, r0, r3
 800348c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800348e:	b10b      	cbz	r3, 8003494 <__sflush_r+0x48>
 8003490:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003492:	1ac0      	subs	r0, r0, r3
 8003494:	2300      	movs	r3, #0
 8003496:	4602      	mov	r2, r0
 8003498:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800349a:	6a21      	ldr	r1, [r4, #32]
 800349c:	4628      	mov	r0, r5
 800349e:	47b0      	blx	r6
 80034a0:	1c43      	adds	r3, r0, #1
 80034a2:	89a3      	ldrh	r3, [r4, #12]
 80034a4:	d106      	bne.n	80034b4 <__sflush_r+0x68>
 80034a6:	6829      	ldr	r1, [r5, #0]
 80034a8:	291d      	cmp	r1, #29
 80034aa:	d82b      	bhi.n	8003504 <__sflush_r+0xb8>
 80034ac:	4a29      	ldr	r2, [pc, #164]	; (8003554 <__sflush_r+0x108>)
 80034ae:	410a      	asrs	r2, r1
 80034b0:	07d6      	lsls	r6, r2, #31
 80034b2:	d427      	bmi.n	8003504 <__sflush_r+0xb8>
 80034b4:	2200      	movs	r2, #0
 80034b6:	6062      	str	r2, [r4, #4]
 80034b8:	04d9      	lsls	r1, r3, #19
 80034ba:	6922      	ldr	r2, [r4, #16]
 80034bc:	6022      	str	r2, [r4, #0]
 80034be:	d504      	bpl.n	80034ca <__sflush_r+0x7e>
 80034c0:	1c42      	adds	r2, r0, #1
 80034c2:	d101      	bne.n	80034c8 <__sflush_r+0x7c>
 80034c4:	682b      	ldr	r3, [r5, #0]
 80034c6:	b903      	cbnz	r3, 80034ca <__sflush_r+0x7e>
 80034c8:	6560      	str	r0, [r4, #84]	; 0x54
 80034ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80034cc:	602f      	str	r7, [r5, #0]
 80034ce:	2900      	cmp	r1, #0
 80034d0:	d0c9      	beq.n	8003466 <__sflush_r+0x1a>
 80034d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80034d6:	4299      	cmp	r1, r3
 80034d8:	d002      	beq.n	80034e0 <__sflush_r+0x94>
 80034da:	4628      	mov	r0, r5
 80034dc:	f000 fe2a 	bl	8004134 <_free_r>
 80034e0:	2000      	movs	r0, #0
 80034e2:	6360      	str	r0, [r4, #52]	; 0x34
 80034e4:	e7c0      	b.n	8003468 <__sflush_r+0x1c>
 80034e6:	2301      	movs	r3, #1
 80034e8:	4628      	mov	r0, r5
 80034ea:	47b0      	blx	r6
 80034ec:	1c41      	adds	r1, r0, #1
 80034ee:	d1c8      	bne.n	8003482 <__sflush_r+0x36>
 80034f0:	682b      	ldr	r3, [r5, #0]
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d0c5      	beq.n	8003482 <__sflush_r+0x36>
 80034f6:	2b1d      	cmp	r3, #29
 80034f8:	d001      	beq.n	80034fe <__sflush_r+0xb2>
 80034fa:	2b16      	cmp	r3, #22
 80034fc:	d101      	bne.n	8003502 <__sflush_r+0xb6>
 80034fe:	602f      	str	r7, [r5, #0]
 8003500:	e7b1      	b.n	8003466 <__sflush_r+0x1a>
 8003502:	89a3      	ldrh	r3, [r4, #12]
 8003504:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003508:	81a3      	strh	r3, [r4, #12]
 800350a:	e7ad      	b.n	8003468 <__sflush_r+0x1c>
 800350c:	690f      	ldr	r7, [r1, #16]
 800350e:	2f00      	cmp	r7, #0
 8003510:	d0a9      	beq.n	8003466 <__sflush_r+0x1a>
 8003512:	0793      	lsls	r3, r2, #30
 8003514:	680e      	ldr	r6, [r1, #0]
 8003516:	bf08      	it	eq
 8003518:	694b      	ldreq	r3, [r1, #20]
 800351a:	600f      	str	r7, [r1, #0]
 800351c:	bf18      	it	ne
 800351e:	2300      	movne	r3, #0
 8003520:	eba6 0807 	sub.w	r8, r6, r7
 8003524:	608b      	str	r3, [r1, #8]
 8003526:	f1b8 0f00 	cmp.w	r8, #0
 800352a:	dd9c      	ble.n	8003466 <__sflush_r+0x1a>
 800352c:	6a21      	ldr	r1, [r4, #32]
 800352e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003530:	4643      	mov	r3, r8
 8003532:	463a      	mov	r2, r7
 8003534:	4628      	mov	r0, r5
 8003536:	47b0      	blx	r6
 8003538:	2800      	cmp	r0, #0
 800353a:	dc06      	bgt.n	800354a <__sflush_r+0xfe>
 800353c:	89a3      	ldrh	r3, [r4, #12]
 800353e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003542:	81a3      	strh	r3, [r4, #12]
 8003544:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003548:	e78e      	b.n	8003468 <__sflush_r+0x1c>
 800354a:	4407      	add	r7, r0
 800354c:	eba8 0800 	sub.w	r8, r8, r0
 8003550:	e7e9      	b.n	8003526 <__sflush_r+0xda>
 8003552:	bf00      	nop
 8003554:	dfbffffe 	.word	0xdfbffffe

08003558 <_fflush_r>:
 8003558:	b538      	push	{r3, r4, r5, lr}
 800355a:	690b      	ldr	r3, [r1, #16]
 800355c:	4605      	mov	r5, r0
 800355e:	460c      	mov	r4, r1
 8003560:	b913      	cbnz	r3, 8003568 <_fflush_r+0x10>
 8003562:	2500      	movs	r5, #0
 8003564:	4628      	mov	r0, r5
 8003566:	bd38      	pop	{r3, r4, r5, pc}
 8003568:	b118      	cbz	r0, 8003572 <_fflush_r+0x1a>
 800356a:	6a03      	ldr	r3, [r0, #32]
 800356c:	b90b      	cbnz	r3, 8003572 <_fflush_r+0x1a>
 800356e:	f7fe fcd1 	bl	8001f14 <__sinit>
 8003572:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003576:	2b00      	cmp	r3, #0
 8003578:	d0f3      	beq.n	8003562 <_fflush_r+0xa>
 800357a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800357c:	07d0      	lsls	r0, r2, #31
 800357e:	d404      	bmi.n	800358a <_fflush_r+0x32>
 8003580:	0599      	lsls	r1, r3, #22
 8003582:	d402      	bmi.n	800358a <_fflush_r+0x32>
 8003584:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003586:	f7fe fda0 	bl	80020ca <__retarget_lock_acquire_recursive>
 800358a:	4628      	mov	r0, r5
 800358c:	4621      	mov	r1, r4
 800358e:	f7ff ff5d 	bl	800344c <__sflush_r>
 8003592:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003594:	07da      	lsls	r2, r3, #31
 8003596:	4605      	mov	r5, r0
 8003598:	d4e4      	bmi.n	8003564 <_fflush_r+0xc>
 800359a:	89a3      	ldrh	r3, [r4, #12]
 800359c:	059b      	lsls	r3, r3, #22
 800359e:	d4e1      	bmi.n	8003564 <_fflush_r+0xc>
 80035a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80035a2:	f7fe fd93 	bl	80020cc <__retarget_lock_release_recursive>
 80035a6:	e7dd      	b.n	8003564 <_fflush_r+0xc>

080035a8 <__malloc_lock>:
 80035a8:	4801      	ldr	r0, [pc, #4]	; (80035b0 <__malloc_lock+0x8>)
 80035aa:	f7fe bd8e 	b.w	80020ca <__retarget_lock_acquire_recursive>
 80035ae:	bf00      	nop
 80035b0:	20000324 	.word	0x20000324

080035b4 <__malloc_unlock>:
 80035b4:	4801      	ldr	r0, [pc, #4]	; (80035bc <__malloc_unlock+0x8>)
 80035b6:	f7fe bd89 	b.w	80020cc <__retarget_lock_release_recursive>
 80035ba:	bf00      	nop
 80035bc:	20000324 	.word	0x20000324

080035c0 <_Balloc>:
 80035c0:	b570      	push	{r4, r5, r6, lr}
 80035c2:	69c6      	ldr	r6, [r0, #28]
 80035c4:	4604      	mov	r4, r0
 80035c6:	460d      	mov	r5, r1
 80035c8:	b976      	cbnz	r6, 80035e8 <_Balloc+0x28>
 80035ca:	2010      	movs	r0, #16
 80035cc:	f7ff fe96 	bl	80032fc <malloc>
 80035d0:	4602      	mov	r2, r0
 80035d2:	61e0      	str	r0, [r4, #28]
 80035d4:	b920      	cbnz	r0, 80035e0 <_Balloc+0x20>
 80035d6:	4b18      	ldr	r3, [pc, #96]	; (8003638 <_Balloc+0x78>)
 80035d8:	4818      	ldr	r0, [pc, #96]	; (800363c <_Balloc+0x7c>)
 80035da:	216b      	movs	r1, #107	; 0x6b
 80035dc:	f000 fd76 	bl	80040cc <__assert_func>
 80035e0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035e4:	6006      	str	r6, [r0, #0]
 80035e6:	60c6      	str	r6, [r0, #12]
 80035e8:	69e6      	ldr	r6, [r4, #28]
 80035ea:	68f3      	ldr	r3, [r6, #12]
 80035ec:	b183      	cbz	r3, 8003610 <_Balloc+0x50>
 80035ee:	69e3      	ldr	r3, [r4, #28]
 80035f0:	68db      	ldr	r3, [r3, #12]
 80035f2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80035f6:	b9b8      	cbnz	r0, 8003628 <_Balloc+0x68>
 80035f8:	2101      	movs	r1, #1
 80035fa:	fa01 f605 	lsl.w	r6, r1, r5
 80035fe:	1d72      	adds	r2, r6, #5
 8003600:	0092      	lsls	r2, r2, #2
 8003602:	4620      	mov	r0, r4
 8003604:	f000 fd80 	bl	8004108 <_calloc_r>
 8003608:	b160      	cbz	r0, 8003624 <_Balloc+0x64>
 800360a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800360e:	e00e      	b.n	800362e <_Balloc+0x6e>
 8003610:	2221      	movs	r2, #33	; 0x21
 8003612:	2104      	movs	r1, #4
 8003614:	4620      	mov	r0, r4
 8003616:	f000 fd77 	bl	8004108 <_calloc_r>
 800361a:	69e3      	ldr	r3, [r4, #28]
 800361c:	60f0      	str	r0, [r6, #12]
 800361e:	68db      	ldr	r3, [r3, #12]
 8003620:	2b00      	cmp	r3, #0
 8003622:	d1e4      	bne.n	80035ee <_Balloc+0x2e>
 8003624:	2000      	movs	r0, #0
 8003626:	bd70      	pop	{r4, r5, r6, pc}
 8003628:	6802      	ldr	r2, [r0, #0]
 800362a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800362e:	2300      	movs	r3, #0
 8003630:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003634:	e7f7      	b.n	8003626 <_Balloc+0x66>
 8003636:	bf00      	nop
 8003638:	080046ad 	.word	0x080046ad
 800363c:	0800473e 	.word	0x0800473e

08003640 <_Bfree>:
 8003640:	b570      	push	{r4, r5, r6, lr}
 8003642:	69c6      	ldr	r6, [r0, #28]
 8003644:	4605      	mov	r5, r0
 8003646:	460c      	mov	r4, r1
 8003648:	b976      	cbnz	r6, 8003668 <_Bfree+0x28>
 800364a:	2010      	movs	r0, #16
 800364c:	f7ff fe56 	bl	80032fc <malloc>
 8003650:	4602      	mov	r2, r0
 8003652:	61e8      	str	r0, [r5, #28]
 8003654:	b920      	cbnz	r0, 8003660 <_Bfree+0x20>
 8003656:	4b09      	ldr	r3, [pc, #36]	; (800367c <_Bfree+0x3c>)
 8003658:	4809      	ldr	r0, [pc, #36]	; (8003680 <_Bfree+0x40>)
 800365a:	218f      	movs	r1, #143	; 0x8f
 800365c:	f000 fd36 	bl	80040cc <__assert_func>
 8003660:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003664:	6006      	str	r6, [r0, #0]
 8003666:	60c6      	str	r6, [r0, #12]
 8003668:	b13c      	cbz	r4, 800367a <_Bfree+0x3a>
 800366a:	69eb      	ldr	r3, [r5, #28]
 800366c:	6862      	ldr	r2, [r4, #4]
 800366e:	68db      	ldr	r3, [r3, #12]
 8003670:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003674:	6021      	str	r1, [r4, #0]
 8003676:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800367a:	bd70      	pop	{r4, r5, r6, pc}
 800367c:	080046ad 	.word	0x080046ad
 8003680:	0800473e 	.word	0x0800473e

08003684 <__multadd>:
 8003684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003688:	690d      	ldr	r5, [r1, #16]
 800368a:	4607      	mov	r7, r0
 800368c:	460c      	mov	r4, r1
 800368e:	461e      	mov	r6, r3
 8003690:	f101 0c14 	add.w	ip, r1, #20
 8003694:	2000      	movs	r0, #0
 8003696:	f8dc 3000 	ldr.w	r3, [ip]
 800369a:	b299      	uxth	r1, r3
 800369c:	fb02 6101 	mla	r1, r2, r1, r6
 80036a0:	0c1e      	lsrs	r6, r3, #16
 80036a2:	0c0b      	lsrs	r3, r1, #16
 80036a4:	fb02 3306 	mla	r3, r2, r6, r3
 80036a8:	b289      	uxth	r1, r1
 80036aa:	3001      	adds	r0, #1
 80036ac:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80036b0:	4285      	cmp	r5, r0
 80036b2:	f84c 1b04 	str.w	r1, [ip], #4
 80036b6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80036ba:	dcec      	bgt.n	8003696 <__multadd+0x12>
 80036bc:	b30e      	cbz	r6, 8003702 <__multadd+0x7e>
 80036be:	68a3      	ldr	r3, [r4, #8]
 80036c0:	42ab      	cmp	r3, r5
 80036c2:	dc19      	bgt.n	80036f8 <__multadd+0x74>
 80036c4:	6861      	ldr	r1, [r4, #4]
 80036c6:	4638      	mov	r0, r7
 80036c8:	3101      	adds	r1, #1
 80036ca:	f7ff ff79 	bl	80035c0 <_Balloc>
 80036ce:	4680      	mov	r8, r0
 80036d0:	b928      	cbnz	r0, 80036de <__multadd+0x5a>
 80036d2:	4602      	mov	r2, r0
 80036d4:	4b0c      	ldr	r3, [pc, #48]	; (8003708 <__multadd+0x84>)
 80036d6:	480d      	ldr	r0, [pc, #52]	; (800370c <__multadd+0x88>)
 80036d8:	21ba      	movs	r1, #186	; 0xba
 80036da:	f000 fcf7 	bl	80040cc <__assert_func>
 80036de:	6922      	ldr	r2, [r4, #16]
 80036e0:	3202      	adds	r2, #2
 80036e2:	f104 010c 	add.w	r1, r4, #12
 80036e6:	0092      	lsls	r2, r2, #2
 80036e8:	300c      	adds	r0, #12
 80036ea:	f000 fce1 	bl	80040b0 <memcpy>
 80036ee:	4621      	mov	r1, r4
 80036f0:	4638      	mov	r0, r7
 80036f2:	f7ff ffa5 	bl	8003640 <_Bfree>
 80036f6:	4644      	mov	r4, r8
 80036f8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80036fc:	3501      	adds	r5, #1
 80036fe:	615e      	str	r6, [r3, #20]
 8003700:	6125      	str	r5, [r4, #16]
 8003702:	4620      	mov	r0, r4
 8003704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003708:	0800471c 	.word	0x0800471c
 800370c:	0800473e 	.word	0x0800473e

08003710 <__hi0bits>:
 8003710:	0c03      	lsrs	r3, r0, #16
 8003712:	041b      	lsls	r3, r3, #16
 8003714:	b9d3      	cbnz	r3, 800374c <__hi0bits+0x3c>
 8003716:	0400      	lsls	r0, r0, #16
 8003718:	2310      	movs	r3, #16
 800371a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800371e:	bf04      	itt	eq
 8003720:	0200      	lsleq	r0, r0, #8
 8003722:	3308      	addeq	r3, #8
 8003724:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003728:	bf04      	itt	eq
 800372a:	0100      	lsleq	r0, r0, #4
 800372c:	3304      	addeq	r3, #4
 800372e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8003732:	bf04      	itt	eq
 8003734:	0080      	lsleq	r0, r0, #2
 8003736:	3302      	addeq	r3, #2
 8003738:	2800      	cmp	r0, #0
 800373a:	db05      	blt.n	8003748 <__hi0bits+0x38>
 800373c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003740:	f103 0301 	add.w	r3, r3, #1
 8003744:	bf08      	it	eq
 8003746:	2320      	moveq	r3, #32
 8003748:	4618      	mov	r0, r3
 800374a:	4770      	bx	lr
 800374c:	2300      	movs	r3, #0
 800374e:	e7e4      	b.n	800371a <__hi0bits+0xa>

08003750 <__lo0bits>:
 8003750:	6803      	ldr	r3, [r0, #0]
 8003752:	f013 0207 	ands.w	r2, r3, #7
 8003756:	d00c      	beq.n	8003772 <__lo0bits+0x22>
 8003758:	07d9      	lsls	r1, r3, #31
 800375a:	d422      	bmi.n	80037a2 <__lo0bits+0x52>
 800375c:	079a      	lsls	r2, r3, #30
 800375e:	bf49      	itett	mi
 8003760:	085b      	lsrmi	r3, r3, #1
 8003762:	089b      	lsrpl	r3, r3, #2
 8003764:	6003      	strmi	r3, [r0, #0]
 8003766:	2201      	movmi	r2, #1
 8003768:	bf5c      	itt	pl
 800376a:	6003      	strpl	r3, [r0, #0]
 800376c:	2202      	movpl	r2, #2
 800376e:	4610      	mov	r0, r2
 8003770:	4770      	bx	lr
 8003772:	b299      	uxth	r1, r3
 8003774:	b909      	cbnz	r1, 800377a <__lo0bits+0x2a>
 8003776:	0c1b      	lsrs	r3, r3, #16
 8003778:	2210      	movs	r2, #16
 800377a:	b2d9      	uxtb	r1, r3
 800377c:	b909      	cbnz	r1, 8003782 <__lo0bits+0x32>
 800377e:	3208      	adds	r2, #8
 8003780:	0a1b      	lsrs	r3, r3, #8
 8003782:	0719      	lsls	r1, r3, #28
 8003784:	bf04      	itt	eq
 8003786:	091b      	lsreq	r3, r3, #4
 8003788:	3204      	addeq	r2, #4
 800378a:	0799      	lsls	r1, r3, #30
 800378c:	bf04      	itt	eq
 800378e:	089b      	lsreq	r3, r3, #2
 8003790:	3202      	addeq	r2, #2
 8003792:	07d9      	lsls	r1, r3, #31
 8003794:	d403      	bmi.n	800379e <__lo0bits+0x4e>
 8003796:	085b      	lsrs	r3, r3, #1
 8003798:	f102 0201 	add.w	r2, r2, #1
 800379c:	d003      	beq.n	80037a6 <__lo0bits+0x56>
 800379e:	6003      	str	r3, [r0, #0]
 80037a0:	e7e5      	b.n	800376e <__lo0bits+0x1e>
 80037a2:	2200      	movs	r2, #0
 80037a4:	e7e3      	b.n	800376e <__lo0bits+0x1e>
 80037a6:	2220      	movs	r2, #32
 80037a8:	e7e1      	b.n	800376e <__lo0bits+0x1e>
	...

080037ac <__i2b>:
 80037ac:	b510      	push	{r4, lr}
 80037ae:	460c      	mov	r4, r1
 80037b0:	2101      	movs	r1, #1
 80037b2:	f7ff ff05 	bl	80035c0 <_Balloc>
 80037b6:	4602      	mov	r2, r0
 80037b8:	b928      	cbnz	r0, 80037c6 <__i2b+0x1a>
 80037ba:	4b05      	ldr	r3, [pc, #20]	; (80037d0 <__i2b+0x24>)
 80037bc:	4805      	ldr	r0, [pc, #20]	; (80037d4 <__i2b+0x28>)
 80037be:	f240 1145 	movw	r1, #325	; 0x145
 80037c2:	f000 fc83 	bl	80040cc <__assert_func>
 80037c6:	2301      	movs	r3, #1
 80037c8:	6144      	str	r4, [r0, #20]
 80037ca:	6103      	str	r3, [r0, #16]
 80037cc:	bd10      	pop	{r4, pc}
 80037ce:	bf00      	nop
 80037d0:	0800471c 	.word	0x0800471c
 80037d4:	0800473e 	.word	0x0800473e

080037d8 <__multiply>:
 80037d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037dc:	4691      	mov	r9, r2
 80037de:	690a      	ldr	r2, [r1, #16]
 80037e0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80037e4:	429a      	cmp	r2, r3
 80037e6:	bfb8      	it	lt
 80037e8:	460b      	movlt	r3, r1
 80037ea:	460c      	mov	r4, r1
 80037ec:	bfbc      	itt	lt
 80037ee:	464c      	movlt	r4, r9
 80037f0:	4699      	movlt	r9, r3
 80037f2:	6927      	ldr	r7, [r4, #16]
 80037f4:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80037f8:	68a3      	ldr	r3, [r4, #8]
 80037fa:	6861      	ldr	r1, [r4, #4]
 80037fc:	eb07 060a 	add.w	r6, r7, sl
 8003800:	42b3      	cmp	r3, r6
 8003802:	b085      	sub	sp, #20
 8003804:	bfb8      	it	lt
 8003806:	3101      	addlt	r1, #1
 8003808:	f7ff feda 	bl	80035c0 <_Balloc>
 800380c:	b930      	cbnz	r0, 800381c <__multiply+0x44>
 800380e:	4602      	mov	r2, r0
 8003810:	4b44      	ldr	r3, [pc, #272]	; (8003924 <__multiply+0x14c>)
 8003812:	4845      	ldr	r0, [pc, #276]	; (8003928 <__multiply+0x150>)
 8003814:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003818:	f000 fc58 	bl	80040cc <__assert_func>
 800381c:	f100 0514 	add.w	r5, r0, #20
 8003820:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003824:	462b      	mov	r3, r5
 8003826:	2200      	movs	r2, #0
 8003828:	4543      	cmp	r3, r8
 800382a:	d321      	bcc.n	8003870 <__multiply+0x98>
 800382c:	f104 0314 	add.w	r3, r4, #20
 8003830:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003834:	f109 0314 	add.w	r3, r9, #20
 8003838:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800383c:	9202      	str	r2, [sp, #8]
 800383e:	1b3a      	subs	r2, r7, r4
 8003840:	3a15      	subs	r2, #21
 8003842:	f022 0203 	bic.w	r2, r2, #3
 8003846:	3204      	adds	r2, #4
 8003848:	f104 0115 	add.w	r1, r4, #21
 800384c:	428f      	cmp	r7, r1
 800384e:	bf38      	it	cc
 8003850:	2204      	movcc	r2, #4
 8003852:	9201      	str	r2, [sp, #4]
 8003854:	9a02      	ldr	r2, [sp, #8]
 8003856:	9303      	str	r3, [sp, #12]
 8003858:	429a      	cmp	r2, r3
 800385a:	d80c      	bhi.n	8003876 <__multiply+0x9e>
 800385c:	2e00      	cmp	r6, #0
 800385e:	dd03      	ble.n	8003868 <__multiply+0x90>
 8003860:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003864:	2b00      	cmp	r3, #0
 8003866:	d05b      	beq.n	8003920 <__multiply+0x148>
 8003868:	6106      	str	r6, [r0, #16]
 800386a:	b005      	add	sp, #20
 800386c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003870:	f843 2b04 	str.w	r2, [r3], #4
 8003874:	e7d8      	b.n	8003828 <__multiply+0x50>
 8003876:	f8b3 a000 	ldrh.w	sl, [r3]
 800387a:	f1ba 0f00 	cmp.w	sl, #0
 800387e:	d024      	beq.n	80038ca <__multiply+0xf2>
 8003880:	f104 0e14 	add.w	lr, r4, #20
 8003884:	46a9      	mov	r9, r5
 8003886:	f04f 0c00 	mov.w	ip, #0
 800388a:	f85e 2b04 	ldr.w	r2, [lr], #4
 800388e:	f8d9 1000 	ldr.w	r1, [r9]
 8003892:	fa1f fb82 	uxth.w	fp, r2
 8003896:	b289      	uxth	r1, r1
 8003898:	fb0a 110b 	mla	r1, sl, fp, r1
 800389c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80038a0:	f8d9 2000 	ldr.w	r2, [r9]
 80038a4:	4461      	add	r1, ip
 80038a6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80038aa:	fb0a c20b 	mla	r2, sl, fp, ip
 80038ae:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80038b2:	b289      	uxth	r1, r1
 80038b4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80038b8:	4577      	cmp	r7, lr
 80038ba:	f849 1b04 	str.w	r1, [r9], #4
 80038be:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80038c2:	d8e2      	bhi.n	800388a <__multiply+0xb2>
 80038c4:	9a01      	ldr	r2, [sp, #4]
 80038c6:	f845 c002 	str.w	ip, [r5, r2]
 80038ca:	9a03      	ldr	r2, [sp, #12]
 80038cc:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80038d0:	3304      	adds	r3, #4
 80038d2:	f1b9 0f00 	cmp.w	r9, #0
 80038d6:	d021      	beq.n	800391c <__multiply+0x144>
 80038d8:	6829      	ldr	r1, [r5, #0]
 80038da:	f104 0c14 	add.w	ip, r4, #20
 80038de:	46ae      	mov	lr, r5
 80038e0:	f04f 0a00 	mov.w	sl, #0
 80038e4:	f8bc b000 	ldrh.w	fp, [ip]
 80038e8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80038ec:	fb09 220b 	mla	r2, r9, fp, r2
 80038f0:	4452      	add	r2, sl
 80038f2:	b289      	uxth	r1, r1
 80038f4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80038f8:	f84e 1b04 	str.w	r1, [lr], #4
 80038fc:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003900:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003904:	f8be 1000 	ldrh.w	r1, [lr]
 8003908:	fb09 110a 	mla	r1, r9, sl, r1
 800390c:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8003910:	4567      	cmp	r7, ip
 8003912:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003916:	d8e5      	bhi.n	80038e4 <__multiply+0x10c>
 8003918:	9a01      	ldr	r2, [sp, #4]
 800391a:	50a9      	str	r1, [r5, r2]
 800391c:	3504      	adds	r5, #4
 800391e:	e799      	b.n	8003854 <__multiply+0x7c>
 8003920:	3e01      	subs	r6, #1
 8003922:	e79b      	b.n	800385c <__multiply+0x84>
 8003924:	0800471c 	.word	0x0800471c
 8003928:	0800473e 	.word	0x0800473e

0800392c <__pow5mult>:
 800392c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003930:	4615      	mov	r5, r2
 8003932:	f012 0203 	ands.w	r2, r2, #3
 8003936:	4606      	mov	r6, r0
 8003938:	460f      	mov	r7, r1
 800393a:	d007      	beq.n	800394c <__pow5mult+0x20>
 800393c:	4c25      	ldr	r4, [pc, #148]	; (80039d4 <__pow5mult+0xa8>)
 800393e:	3a01      	subs	r2, #1
 8003940:	2300      	movs	r3, #0
 8003942:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003946:	f7ff fe9d 	bl	8003684 <__multadd>
 800394a:	4607      	mov	r7, r0
 800394c:	10ad      	asrs	r5, r5, #2
 800394e:	d03d      	beq.n	80039cc <__pow5mult+0xa0>
 8003950:	69f4      	ldr	r4, [r6, #28]
 8003952:	b97c      	cbnz	r4, 8003974 <__pow5mult+0x48>
 8003954:	2010      	movs	r0, #16
 8003956:	f7ff fcd1 	bl	80032fc <malloc>
 800395a:	4602      	mov	r2, r0
 800395c:	61f0      	str	r0, [r6, #28]
 800395e:	b928      	cbnz	r0, 800396c <__pow5mult+0x40>
 8003960:	4b1d      	ldr	r3, [pc, #116]	; (80039d8 <__pow5mult+0xac>)
 8003962:	481e      	ldr	r0, [pc, #120]	; (80039dc <__pow5mult+0xb0>)
 8003964:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003968:	f000 fbb0 	bl	80040cc <__assert_func>
 800396c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003970:	6004      	str	r4, [r0, #0]
 8003972:	60c4      	str	r4, [r0, #12]
 8003974:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003978:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800397c:	b94c      	cbnz	r4, 8003992 <__pow5mult+0x66>
 800397e:	f240 2171 	movw	r1, #625	; 0x271
 8003982:	4630      	mov	r0, r6
 8003984:	f7ff ff12 	bl	80037ac <__i2b>
 8003988:	2300      	movs	r3, #0
 800398a:	f8c8 0008 	str.w	r0, [r8, #8]
 800398e:	4604      	mov	r4, r0
 8003990:	6003      	str	r3, [r0, #0]
 8003992:	f04f 0900 	mov.w	r9, #0
 8003996:	07eb      	lsls	r3, r5, #31
 8003998:	d50a      	bpl.n	80039b0 <__pow5mult+0x84>
 800399a:	4639      	mov	r1, r7
 800399c:	4622      	mov	r2, r4
 800399e:	4630      	mov	r0, r6
 80039a0:	f7ff ff1a 	bl	80037d8 <__multiply>
 80039a4:	4639      	mov	r1, r7
 80039a6:	4680      	mov	r8, r0
 80039a8:	4630      	mov	r0, r6
 80039aa:	f7ff fe49 	bl	8003640 <_Bfree>
 80039ae:	4647      	mov	r7, r8
 80039b0:	106d      	asrs	r5, r5, #1
 80039b2:	d00b      	beq.n	80039cc <__pow5mult+0xa0>
 80039b4:	6820      	ldr	r0, [r4, #0]
 80039b6:	b938      	cbnz	r0, 80039c8 <__pow5mult+0x9c>
 80039b8:	4622      	mov	r2, r4
 80039ba:	4621      	mov	r1, r4
 80039bc:	4630      	mov	r0, r6
 80039be:	f7ff ff0b 	bl	80037d8 <__multiply>
 80039c2:	6020      	str	r0, [r4, #0]
 80039c4:	f8c0 9000 	str.w	r9, [r0]
 80039c8:	4604      	mov	r4, r0
 80039ca:	e7e4      	b.n	8003996 <__pow5mult+0x6a>
 80039cc:	4638      	mov	r0, r7
 80039ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80039d2:	bf00      	nop
 80039d4:	08004888 	.word	0x08004888
 80039d8:	080046ad 	.word	0x080046ad
 80039dc:	0800473e 	.word	0x0800473e

080039e0 <__lshift>:
 80039e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039e4:	460c      	mov	r4, r1
 80039e6:	6849      	ldr	r1, [r1, #4]
 80039e8:	6923      	ldr	r3, [r4, #16]
 80039ea:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80039ee:	68a3      	ldr	r3, [r4, #8]
 80039f0:	4607      	mov	r7, r0
 80039f2:	4691      	mov	r9, r2
 80039f4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80039f8:	f108 0601 	add.w	r6, r8, #1
 80039fc:	42b3      	cmp	r3, r6
 80039fe:	db0b      	blt.n	8003a18 <__lshift+0x38>
 8003a00:	4638      	mov	r0, r7
 8003a02:	f7ff fddd 	bl	80035c0 <_Balloc>
 8003a06:	4605      	mov	r5, r0
 8003a08:	b948      	cbnz	r0, 8003a1e <__lshift+0x3e>
 8003a0a:	4602      	mov	r2, r0
 8003a0c:	4b28      	ldr	r3, [pc, #160]	; (8003ab0 <__lshift+0xd0>)
 8003a0e:	4829      	ldr	r0, [pc, #164]	; (8003ab4 <__lshift+0xd4>)
 8003a10:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003a14:	f000 fb5a 	bl	80040cc <__assert_func>
 8003a18:	3101      	adds	r1, #1
 8003a1a:	005b      	lsls	r3, r3, #1
 8003a1c:	e7ee      	b.n	80039fc <__lshift+0x1c>
 8003a1e:	2300      	movs	r3, #0
 8003a20:	f100 0114 	add.w	r1, r0, #20
 8003a24:	f100 0210 	add.w	r2, r0, #16
 8003a28:	4618      	mov	r0, r3
 8003a2a:	4553      	cmp	r3, sl
 8003a2c:	db33      	blt.n	8003a96 <__lshift+0xb6>
 8003a2e:	6920      	ldr	r0, [r4, #16]
 8003a30:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003a34:	f104 0314 	add.w	r3, r4, #20
 8003a38:	f019 091f 	ands.w	r9, r9, #31
 8003a3c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003a40:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003a44:	d02b      	beq.n	8003a9e <__lshift+0xbe>
 8003a46:	f1c9 0e20 	rsb	lr, r9, #32
 8003a4a:	468a      	mov	sl, r1
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	6818      	ldr	r0, [r3, #0]
 8003a50:	fa00 f009 	lsl.w	r0, r0, r9
 8003a54:	4310      	orrs	r0, r2
 8003a56:	f84a 0b04 	str.w	r0, [sl], #4
 8003a5a:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a5e:	459c      	cmp	ip, r3
 8003a60:	fa22 f20e 	lsr.w	r2, r2, lr
 8003a64:	d8f3      	bhi.n	8003a4e <__lshift+0x6e>
 8003a66:	ebac 0304 	sub.w	r3, ip, r4
 8003a6a:	3b15      	subs	r3, #21
 8003a6c:	f023 0303 	bic.w	r3, r3, #3
 8003a70:	3304      	adds	r3, #4
 8003a72:	f104 0015 	add.w	r0, r4, #21
 8003a76:	4584      	cmp	ip, r0
 8003a78:	bf38      	it	cc
 8003a7a:	2304      	movcc	r3, #4
 8003a7c:	50ca      	str	r2, [r1, r3]
 8003a7e:	b10a      	cbz	r2, 8003a84 <__lshift+0xa4>
 8003a80:	f108 0602 	add.w	r6, r8, #2
 8003a84:	3e01      	subs	r6, #1
 8003a86:	4638      	mov	r0, r7
 8003a88:	612e      	str	r6, [r5, #16]
 8003a8a:	4621      	mov	r1, r4
 8003a8c:	f7ff fdd8 	bl	8003640 <_Bfree>
 8003a90:	4628      	mov	r0, r5
 8003a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a96:	f842 0f04 	str.w	r0, [r2, #4]!
 8003a9a:	3301      	adds	r3, #1
 8003a9c:	e7c5      	b.n	8003a2a <__lshift+0x4a>
 8003a9e:	3904      	subs	r1, #4
 8003aa0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003aa4:	f841 2f04 	str.w	r2, [r1, #4]!
 8003aa8:	459c      	cmp	ip, r3
 8003aaa:	d8f9      	bhi.n	8003aa0 <__lshift+0xc0>
 8003aac:	e7ea      	b.n	8003a84 <__lshift+0xa4>
 8003aae:	bf00      	nop
 8003ab0:	0800471c 	.word	0x0800471c
 8003ab4:	0800473e 	.word	0x0800473e

08003ab8 <__mcmp>:
 8003ab8:	b530      	push	{r4, r5, lr}
 8003aba:	6902      	ldr	r2, [r0, #16]
 8003abc:	690c      	ldr	r4, [r1, #16]
 8003abe:	1b12      	subs	r2, r2, r4
 8003ac0:	d10e      	bne.n	8003ae0 <__mcmp+0x28>
 8003ac2:	f100 0314 	add.w	r3, r0, #20
 8003ac6:	3114      	adds	r1, #20
 8003ac8:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003acc:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003ad0:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003ad4:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003ad8:	42a5      	cmp	r5, r4
 8003ada:	d003      	beq.n	8003ae4 <__mcmp+0x2c>
 8003adc:	d305      	bcc.n	8003aea <__mcmp+0x32>
 8003ade:	2201      	movs	r2, #1
 8003ae0:	4610      	mov	r0, r2
 8003ae2:	bd30      	pop	{r4, r5, pc}
 8003ae4:	4283      	cmp	r3, r0
 8003ae6:	d3f3      	bcc.n	8003ad0 <__mcmp+0x18>
 8003ae8:	e7fa      	b.n	8003ae0 <__mcmp+0x28>
 8003aea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003aee:	e7f7      	b.n	8003ae0 <__mcmp+0x28>

08003af0 <__mdiff>:
 8003af0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003af4:	460c      	mov	r4, r1
 8003af6:	4606      	mov	r6, r0
 8003af8:	4611      	mov	r1, r2
 8003afa:	4620      	mov	r0, r4
 8003afc:	4690      	mov	r8, r2
 8003afe:	f7ff ffdb 	bl	8003ab8 <__mcmp>
 8003b02:	1e05      	subs	r5, r0, #0
 8003b04:	d110      	bne.n	8003b28 <__mdiff+0x38>
 8003b06:	4629      	mov	r1, r5
 8003b08:	4630      	mov	r0, r6
 8003b0a:	f7ff fd59 	bl	80035c0 <_Balloc>
 8003b0e:	b930      	cbnz	r0, 8003b1e <__mdiff+0x2e>
 8003b10:	4b3a      	ldr	r3, [pc, #232]	; (8003bfc <__mdiff+0x10c>)
 8003b12:	4602      	mov	r2, r0
 8003b14:	f240 2137 	movw	r1, #567	; 0x237
 8003b18:	4839      	ldr	r0, [pc, #228]	; (8003c00 <__mdiff+0x110>)
 8003b1a:	f000 fad7 	bl	80040cc <__assert_func>
 8003b1e:	2301      	movs	r3, #1
 8003b20:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003b24:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b28:	bfa4      	itt	ge
 8003b2a:	4643      	movge	r3, r8
 8003b2c:	46a0      	movge	r8, r4
 8003b2e:	4630      	mov	r0, r6
 8003b30:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003b34:	bfa6      	itte	ge
 8003b36:	461c      	movge	r4, r3
 8003b38:	2500      	movge	r5, #0
 8003b3a:	2501      	movlt	r5, #1
 8003b3c:	f7ff fd40 	bl	80035c0 <_Balloc>
 8003b40:	b920      	cbnz	r0, 8003b4c <__mdiff+0x5c>
 8003b42:	4b2e      	ldr	r3, [pc, #184]	; (8003bfc <__mdiff+0x10c>)
 8003b44:	4602      	mov	r2, r0
 8003b46:	f240 2145 	movw	r1, #581	; 0x245
 8003b4a:	e7e5      	b.n	8003b18 <__mdiff+0x28>
 8003b4c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003b50:	6926      	ldr	r6, [r4, #16]
 8003b52:	60c5      	str	r5, [r0, #12]
 8003b54:	f104 0914 	add.w	r9, r4, #20
 8003b58:	f108 0514 	add.w	r5, r8, #20
 8003b5c:	f100 0e14 	add.w	lr, r0, #20
 8003b60:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003b64:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003b68:	f108 0210 	add.w	r2, r8, #16
 8003b6c:	46f2      	mov	sl, lr
 8003b6e:	2100      	movs	r1, #0
 8003b70:	f859 3b04 	ldr.w	r3, [r9], #4
 8003b74:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003b78:	fa11 f88b 	uxtah	r8, r1, fp
 8003b7c:	b299      	uxth	r1, r3
 8003b7e:	0c1b      	lsrs	r3, r3, #16
 8003b80:	eba8 0801 	sub.w	r8, r8, r1
 8003b84:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003b88:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003b8c:	fa1f f888 	uxth.w	r8, r8
 8003b90:	1419      	asrs	r1, r3, #16
 8003b92:	454e      	cmp	r6, r9
 8003b94:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003b98:	f84a 3b04 	str.w	r3, [sl], #4
 8003b9c:	d8e8      	bhi.n	8003b70 <__mdiff+0x80>
 8003b9e:	1b33      	subs	r3, r6, r4
 8003ba0:	3b15      	subs	r3, #21
 8003ba2:	f023 0303 	bic.w	r3, r3, #3
 8003ba6:	3304      	adds	r3, #4
 8003ba8:	3415      	adds	r4, #21
 8003baa:	42a6      	cmp	r6, r4
 8003bac:	bf38      	it	cc
 8003bae:	2304      	movcc	r3, #4
 8003bb0:	441d      	add	r5, r3
 8003bb2:	4473      	add	r3, lr
 8003bb4:	469e      	mov	lr, r3
 8003bb6:	462e      	mov	r6, r5
 8003bb8:	4566      	cmp	r6, ip
 8003bba:	d30e      	bcc.n	8003bda <__mdiff+0xea>
 8003bbc:	f10c 0203 	add.w	r2, ip, #3
 8003bc0:	1b52      	subs	r2, r2, r5
 8003bc2:	f022 0203 	bic.w	r2, r2, #3
 8003bc6:	3d03      	subs	r5, #3
 8003bc8:	45ac      	cmp	ip, r5
 8003bca:	bf38      	it	cc
 8003bcc:	2200      	movcc	r2, #0
 8003bce:	4413      	add	r3, r2
 8003bd0:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003bd4:	b17a      	cbz	r2, 8003bf6 <__mdiff+0x106>
 8003bd6:	6107      	str	r7, [r0, #16]
 8003bd8:	e7a4      	b.n	8003b24 <__mdiff+0x34>
 8003bda:	f856 8b04 	ldr.w	r8, [r6], #4
 8003bde:	fa11 f288 	uxtah	r2, r1, r8
 8003be2:	1414      	asrs	r4, r2, #16
 8003be4:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003be8:	b292      	uxth	r2, r2
 8003bea:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003bee:	f84e 2b04 	str.w	r2, [lr], #4
 8003bf2:	1421      	asrs	r1, r4, #16
 8003bf4:	e7e0      	b.n	8003bb8 <__mdiff+0xc8>
 8003bf6:	3f01      	subs	r7, #1
 8003bf8:	e7ea      	b.n	8003bd0 <__mdiff+0xe0>
 8003bfa:	bf00      	nop
 8003bfc:	0800471c 	.word	0x0800471c
 8003c00:	0800473e 	.word	0x0800473e

08003c04 <__d2b>:
 8003c04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003c08:	460f      	mov	r7, r1
 8003c0a:	2101      	movs	r1, #1
 8003c0c:	ec59 8b10 	vmov	r8, r9, d0
 8003c10:	4616      	mov	r6, r2
 8003c12:	f7ff fcd5 	bl	80035c0 <_Balloc>
 8003c16:	4604      	mov	r4, r0
 8003c18:	b930      	cbnz	r0, 8003c28 <__d2b+0x24>
 8003c1a:	4602      	mov	r2, r0
 8003c1c:	4b24      	ldr	r3, [pc, #144]	; (8003cb0 <__d2b+0xac>)
 8003c1e:	4825      	ldr	r0, [pc, #148]	; (8003cb4 <__d2b+0xb0>)
 8003c20:	f240 310f 	movw	r1, #783	; 0x30f
 8003c24:	f000 fa52 	bl	80040cc <__assert_func>
 8003c28:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003c2c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003c30:	bb2d      	cbnz	r5, 8003c7e <__d2b+0x7a>
 8003c32:	9301      	str	r3, [sp, #4]
 8003c34:	f1b8 0300 	subs.w	r3, r8, #0
 8003c38:	d026      	beq.n	8003c88 <__d2b+0x84>
 8003c3a:	4668      	mov	r0, sp
 8003c3c:	9300      	str	r3, [sp, #0]
 8003c3e:	f7ff fd87 	bl	8003750 <__lo0bits>
 8003c42:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003c46:	b1e8      	cbz	r0, 8003c84 <__d2b+0x80>
 8003c48:	f1c0 0320 	rsb	r3, r0, #32
 8003c4c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c50:	430b      	orrs	r3, r1
 8003c52:	40c2      	lsrs	r2, r0
 8003c54:	6163      	str	r3, [r4, #20]
 8003c56:	9201      	str	r2, [sp, #4]
 8003c58:	9b01      	ldr	r3, [sp, #4]
 8003c5a:	61a3      	str	r3, [r4, #24]
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	bf14      	ite	ne
 8003c60:	2202      	movne	r2, #2
 8003c62:	2201      	moveq	r2, #1
 8003c64:	6122      	str	r2, [r4, #16]
 8003c66:	b1bd      	cbz	r5, 8003c98 <__d2b+0x94>
 8003c68:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003c6c:	4405      	add	r5, r0
 8003c6e:	603d      	str	r5, [r7, #0]
 8003c70:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003c74:	6030      	str	r0, [r6, #0]
 8003c76:	4620      	mov	r0, r4
 8003c78:	b003      	add	sp, #12
 8003c7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003c7e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003c82:	e7d6      	b.n	8003c32 <__d2b+0x2e>
 8003c84:	6161      	str	r1, [r4, #20]
 8003c86:	e7e7      	b.n	8003c58 <__d2b+0x54>
 8003c88:	a801      	add	r0, sp, #4
 8003c8a:	f7ff fd61 	bl	8003750 <__lo0bits>
 8003c8e:	9b01      	ldr	r3, [sp, #4]
 8003c90:	6163      	str	r3, [r4, #20]
 8003c92:	3020      	adds	r0, #32
 8003c94:	2201      	movs	r2, #1
 8003c96:	e7e5      	b.n	8003c64 <__d2b+0x60>
 8003c98:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003c9c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003ca0:	6038      	str	r0, [r7, #0]
 8003ca2:	6918      	ldr	r0, [r3, #16]
 8003ca4:	f7ff fd34 	bl	8003710 <__hi0bits>
 8003ca8:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003cac:	e7e2      	b.n	8003c74 <__d2b+0x70>
 8003cae:	bf00      	nop
 8003cb0:	0800471c 	.word	0x0800471c
 8003cb4:	0800473e 	.word	0x0800473e

08003cb8 <__sread>:
 8003cb8:	b510      	push	{r4, lr}
 8003cba:	460c      	mov	r4, r1
 8003cbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003cc0:	f000 f9c2 	bl	8004048 <_read_r>
 8003cc4:	2800      	cmp	r0, #0
 8003cc6:	bfab      	itete	ge
 8003cc8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003cca:	89a3      	ldrhlt	r3, [r4, #12]
 8003ccc:	181b      	addge	r3, r3, r0
 8003cce:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003cd2:	bfac      	ite	ge
 8003cd4:	6563      	strge	r3, [r4, #84]	; 0x54
 8003cd6:	81a3      	strhlt	r3, [r4, #12]
 8003cd8:	bd10      	pop	{r4, pc}

08003cda <__swrite>:
 8003cda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003cde:	461f      	mov	r7, r3
 8003ce0:	898b      	ldrh	r3, [r1, #12]
 8003ce2:	05db      	lsls	r3, r3, #23
 8003ce4:	4605      	mov	r5, r0
 8003ce6:	460c      	mov	r4, r1
 8003ce8:	4616      	mov	r6, r2
 8003cea:	d505      	bpl.n	8003cf8 <__swrite+0x1e>
 8003cec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003cf0:	2302      	movs	r3, #2
 8003cf2:	2200      	movs	r2, #0
 8003cf4:	f000 f996 	bl	8004024 <_lseek_r>
 8003cf8:	89a3      	ldrh	r3, [r4, #12]
 8003cfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003cfe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003d02:	81a3      	strh	r3, [r4, #12]
 8003d04:	4632      	mov	r2, r6
 8003d06:	463b      	mov	r3, r7
 8003d08:	4628      	mov	r0, r5
 8003d0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d0e:	f000 b9bd 	b.w	800408c <_write_r>

08003d12 <__sseek>:
 8003d12:	b510      	push	{r4, lr}
 8003d14:	460c      	mov	r4, r1
 8003d16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d1a:	f000 f983 	bl	8004024 <_lseek_r>
 8003d1e:	1c43      	adds	r3, r0, #1
 8003d20:	89a3      	ldrh	r3, [r4, #12]
 8003d22:	bf15      	itete	ne
 8003d24:	6560      	strne	r0, [r4, #84]	; 0x54
 8003d26:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003d2a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003d2e:	81a3      	strheq	r3, [r4, #12]
 8003d30:	bf18      	it	ne
 8003d32:	81a3      	strhne	r3, [r4, #12]
 8003d34:	bd10      	pop	{r4, pc}

08003d36 <__sclose>:
 8003d36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d3a:	f000 b941 	b.w	8003fc0 <_close_r>

08003d3e <_realloc_r>:
 8003d3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d42:	4680      	mov	r8, r0
 8003d44:	4614      	mov	r4, r2
 8003d46:	460e      	mov	r6, r1
 8003d48:	b921      	cbnz	r1, 8003d54 <_realloc_r+0x16>
 8003d4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d4e:	4611      	mov	r1, r2
 8003d50:	f7ff bafc 	b.w	800334c <_malloc_r>
 8003d54:	b92a      	cbnz	r2, 8003d62 <_realloc_r+0x24>
 8003d56:	f000 f9ed 	bl	8004134 <_free_r>
 8003d5a:	4625      	mov	r5, r4
 8003d5c:	4628      	mov	r0, r5
 8003d5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d62:	f000 fa45 	bl	80041f0 <_malloc_usable_size_r>
 8003d66:	4284      	cmp	r4, r0
 8003d68:	4607      	mov	r7, r0
 8003d6a:	d802      	bhi.n	8003d72 <_realloc_r+0x34>
 8003d6c:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003d70:	d812      	bhi.n	8003d98 <_realloc_r+0x5a>
 8003d72:	4621      	mov	r1, r4
 8003d74:	4640      	mov	r0, r8
 8003d76:	f7ff fae9 	bl	800334c <_malloc_r>
 8003d7a:	4605      	mov	r5, r0
 8003d7c:	2800      	cmp	r0, #0
 8003d7e:	d0ed      	beq.n	8003d5c <_realloc_r+0x1e>
 8003d80:	42bc      	cmp	r4, r7
 8003d82:	4622      	mov	r2, r4
 8003d84:	4631      	mov	r1, r6
 8003d86:	bf28      	it	cs
 8003d88:	463a      	movcs	r2, r7
 8003d8a:	f000 f991 	bl	80040b0 <memcpy>
 8003d8e:	4631      	mov	r1, r6
 8003d90:	4640      	mov	r0, r8
 8003d92:	f000 f9cf 	bl	8004134 <_free_r>
 8003d96:	e7e1      	b.n	8003d5c <_realloc_r+0x1e>
 8003d98:	4635      	mov	r5, r6
 8003d9a:	e7df      	b.n	8003d5c <_realloc_r+0x1e>

08003d9c <__swbuf_r>:
 8003d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d9e:	460e      	mov	r6, r1
 8003da0:	4614      	mov	r4, r2
 8003da2:	4605      	mov	r5, r0
 8003da4:	b118      	cbz	r0, 8003dae <__swbuf_r+0x12>
 8003da6:	6a03      	ldr	r3, [r0, #32]
 8003da8:	b90b      	cbnz	r3, 8003dae <__swbuf_r+0x12>
 8003daa:	f7fe f8b3 	bl	8001f14 <__sinit>
 8003dae:	69a3      	ldr	r3, [r4, #24]
 8003db0:	60a3      	str	r3, [r4, #8]
 8003db2:	89a3      	ldrh	r3, [r4, #12]
 8003db4:	071a      	lsls	r2, r3, #28
 8003db6:	d525      	bpl.n	8003e04 <__swbuf_r+0x68>
 8003db8:	6923      	ldr	r3, [r4, #16]
 8003dba:	b31b      	cbz	r3, 8003e04 <__swbuf_r+0x68>
 8003dbc:	6823      	ldr	r3, [r4, #0]
 8003dbe:	6922      	ldr	r2, [r4, #16]
 8003dc0:	1a98      	subs	r0, r3, r2
 8003dc2:	6963      	ldr	r3, [r4, #20]
 8003dc4:	b2f6      	uxtb	r6, r6
 8003dc6:	4283      	cmp	r3, r0
 8003dc8:	4637      	mov	r7, r6
 8003dca:	dc04      	bgt.n	8003dd6 <__swbuf_r+0x3a>
 8003dcc:	4621      	mov	r1, r4
 8003dce:	4628      	mov	r0, r5
 8003dd0:	f7ff fbc2 	bl	8003558 <_fflush_r>
 8003dd4:	b9e0      	cbnz	r0, 8003e10 <__swbuf_r+0x74>
 8003dd6:	68a3      	ldr	r3, [r4, #8]
 8003dd8:	3b01      	subs	r3, #1
 8003dda:	60a3      	str	r3, [r4, #8]
 8003ddc:	6823      	ldr	r3, [r4, #0]
 8003dde:	1c5a      	adds	r2, r3, #1
 8003de0:	6022      	str	r2, [r4, #0]
 8003de2:	701e      	strb	r6, [r3, #0]
 8003de4:	6962      	ldr	r2, [r4, #20]
 8003de6:	1c43      	adds	r3, r0, #1
 8003de8:	429a      	cmp	r2, r3
 8003dea:	d004      	beq.n	8003df6 <__swbuf_r+0x5a>
 8003dec:	89a3      	ldrh	r3, [r4, #12]
 8003dee:	07db      	lsls	r3, r3, #31
 8003df0:	d506      	bpl.n	8003e00 <__swbuf_r+0x64>
 8003df2:	2e0a      	cmp	r6, #10
 8003df4:	d104      	bne.n	8003e00 <__swbuf_r+0x64>
 8003df6:	4621      	mov	r1, r4
 8003df8:	4628      	mov	r0, r5
 8003dfa:	f7ff fbad 	bl	8003558 <_fflush_r>
 8003dfe:	b938      	cbnz	r0, 8003e10 <__swbuf_r+0x74>
 8003e00:	4638      	mov	r0, r7
 8003e02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e04:	4621      	mov	r1, r4
 8003e06:	4628      	mov	r0, r5
 8003e08:	f000 f806 	bl	8003e18 <__swsetup_r>
 8003e0c:	2800      	cmp	r0, #0
 8003e0e:	d0d5      	beq.n	8003dbc <__swbuf_r+0x20>
 8003e10:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8003e14:	e7f4      	b.n	8003e00 <__swbuf_r+0x64>
	...

08003e18 <__swsetup_r>:
 8003e18:	b538      	push	{r3, r4, r5, lr}
 8003e1a:	4b2a      	ldr	r3, [pc, #168]	; (8003ec4 <__swsetup_r+0xac>)
 8003e1c:	4605      	mov	r5, r0
 8003e1e:	6818      	ldr	r0, [r3, #0]
 8003e20:	460c      	mov	r4, r1
 8003e22:	b118      	cbz	r0, 8003e2c <__swsetup_r+0x14>
 8003e24:	6a03      	ldr	r3, [r0, #32]
 8003e26:	b90b      	cbnz	r3, 8003e2c <__swsetup_r+0x14>
 8003e28:	f7fe f874 	bl	8001f14 <__sinit>
 8003e2c:	89a3      	ldrh	r3, [r4, #12]
 8003e2e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003e32:	0718      	lsls	r0, r3, #28
 8003e34:	d422      	bmi.n	8003e7c <__swsetup_r+0x64>
 8003e36:	06d9      	lsls	r1, r3, #27
 8003e38:	d407      	bmi.n	8003e4a <__swsetup_r+0x32>
 8003e3a:	2309      	movs	r3, #9
 8003e3c:	602b      	str	r3, [r5, #0]
 8003e3e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003e42:	81a3      	strh	r3, [r4, #12]
 8003e44:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003e48:	e034      	b.n	8003eb4 <__swsetup_r+0x9c>
 8003e4a:	0758      	lsls	r0, r3, #29
 8003e4c:	d512      	bpl.n	8003e74 <__swsetup_r+0x5c>
 8003e4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e50:	b141      	cbz	r1, 8003e64 <__swsetup_r+0x4c>
 8003e52:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003e56:	4299      	cmp	r1, r3
 8003e58:	d002      	beq.n	8003e60 <__swsetup_r+0x48>
 8003e5a:	4628      	mov	r0, r5
 8003e5c:	f000 f96a 	bl	8004134 <_free_r>
 8003e60:	2300      	movs	r3, #0
 8003e62:	6363      	str	r3, [r4, #52]	; 0x34
 8003e64:	89a3      	ldrh	r3, [r4, #12]
 8003e66:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003e6a:	81a3      	strh	r3, [r4, #12]
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	6063      	str	r3, [r4, #4]
 8003e70:	6923      	ldr	r3, [r4, #16]
 8003e72:	6023      	str	r3, [r4, #0]
 8003e74:	89a3      	ldrh	r3, [r4, #12]
 8003e76:	f043 0308 	orr.w	r3, r3, #8
 8003e7a:	81a3      	strh	r3, [r4, #12]
 8003e7c:	6923      	ldr	r3, [r4, #16]
 8003e7e:	b94b      	cbnz	r3, 8003e94 <__swsetup_r+0x7c>
 8003e80:	89a3      	ldrh	r3, [r4, #12]
 8003e82:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003e86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003e8a:	d003      	beq.n	8003e94 <__swsetup_r+0x7c>
 8003e8c:	4621      	mov	r1, r4
 8003e8e:	4628      	mov	r0, r5
 8003e90:	f000 f840 	bl	8003f14 <__smakebuf_r>
 8003e94:	89a0      	ldrh	r0, [r4, #12]
 8003e96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003e9a:	f010 0301 	ands.w	r3, r0, #1
 8003e9e:	d00a      	beq.n	8003eb6 <__swsetup_r+0x9e>
 8003ea0:	2300      	movs	r3, #0
 8003ea2:	60a3      	str	r3, [r4, #8]
 8003ea4:	6963      	ldr	r3, [r4, #20]
 8003ea6:	425b      	negs	r3, r3
 8003ea8:	61a3      	str	r3, [r4, #24]
 8003eaa:	6923      	ldr	r3, [r4, #16]
 8003eac:	b943      	cbnz	r3, 8003ec0 <__swsetup_r+0xa8>
 8003eae:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003eb2:	d1c4      	bne.n	8003e3e <__swsetup_r+0x26>
 8003eb4:	bd38      	pop	{r3, r4, r5, pc}
 8003eb6:	0781      	lsls	r1, r0, #30
 8003eb8:	bf58      	it	pl
 8003eba:	6963      	ldrpl	r3, [r4, #20]
 8003ebc:	60a3      	str	r3, [r4, #8]
 8003ebe:	e7f4      	b.n	8003eaa <__swsetup_r+0x92>
 8003ec0:	2000      	movs	r0, #0
 8003ec2:	e7f7      	b.n	8003eb4 <__swsetup_r+0x9c>
 8003ec4:	20000058 	.word	0x20000058

08003ec8 <__swhatbuf_r>:
 8003ec8:	b570      	push	{r4, r5, r6, lr}
 8003eca:	460c      	mov	r4, r1
 8003ecc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003ed0:	2900      	cmp	r1, #0
 8003ed2:	b096      	sub	sp, #88	; 0x58
 8003ed4:	4615      	mov	r5, r2
 8003ed6:	461e      	mov	r6, r3
 8003ed8:	da0d      	bge.n	8003ef6 <__swhatbuf_r+0x2e>
 8003eda:	89a3      	ldrh	r3, [r4, #12]
 8003edc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003ee0:	f04f 0100 	mov.w	r1, #0
 8003ee4:	bf0c      	ite	eq
 8003ee6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8003eea:	2340      	movne	r3, #64	; 0x40
 8003eec:	2000      	movs	r0, #0
 8003eee:	6031      	str	r1, [r6, #0]
 8003ef0:	602b      	str	r3, [r5, #0]
 8003ef2:	b016      	add	sp, #88	; 0x58
 8003ef4:	bd70      	pop	{r4, r5, r6, pc}
 8003ef6:	466a      	mov	r2, sp
 8003ef8:	f000 f872 	bl	8003fe0 <_fstat_r>
 8003efc:	2800      	cmp	r0, #0
 8003efe:	dbec      	blt.n	8003eda <__swhatbuf_r+0x12>
 8003f00:	9901      	ldr	r1, [sp, #4]
 8003f02:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8003f06:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8003f0a:	4259      	negs	r1, r3
 8003f0c:	4159      	adcs	r1, r3
 8003f0e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003f12:	e7eb      	b.n	8003eec <__swhatbuf_r+0x24>

08003f14 <__smakebuf_r>:
 8003f14:	898b      	ldrh	r3, [r1, #12]
 8003f16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003f18:	079d      	lsls	r5, r3, #30
 8003f1a:	4606      	mov	r6, r0
 8003f1c:	460c      	mov	r4, r1
 8003f1e:	d507      	bpl.n	8003f30 <__smakebuf_r+0x1c>
 8003f20:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003f24:	6023      	str	r3, [r4, #0]
 8003f26:	6123      	str	r3, [r4, #16]
 8003f28:	2301      	movs	r3, #1
 8003f2a:	6163      	str	r3, [r4, #20]
 8003f2c:	b002      	add	sp, #8
 8003f2e:	bd70      	pop	{r4, r5, r6, pc}
 8003f30:	ab01      	add	r3, sp, #4
 8003f32:	466a      	mov	r2, sp
 8003f34:	f7ff ffc8 	bl	8003ec8 <__swhatbuf_r>
 8003f38:	9900      	ldr	r1, [sp, #0]
 8003f3a:	4605      	mov	r5, r0
 8003f3c:	4630      	mov	r0, r6
 8003f3e:	f7ff fa05 	bl	800334c <_malloc_r>
 8003f42:	b948      	cbnz	r0, 8003f58 <__smakebuf_r+0x44>
 8003f44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f48:	059a      	lsls	r2, r3, #22
 8003f4a:	d4ef      	bmi.n	8003f2c <__smakebuf_r+0x18>
 8003f4c:	f023 0303 	bic.w	r3, r3, #3
 8003f50:	f043 0302 	orr.w	r3, r3, #2
 8003f54:	81a3      	strh	r3, [r4, #12]
 8003f56:	e7e3      	b.n	8003f20 <__smakebuf_r+0xc>
 8003f58:	89a3      	ldrh	r3, [r4, #12]
 8003f5a:	6020      	str	r0, [r4, #0]
 8003f5c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003f60:	81a3      	strh	r3, [r4, #12]
 8003f62:	9b00      	ldr	r3, [sp, #0]
 8003f64:	6163      	str	r3, [r4, #20]
 8003f66:	9b01      	ldr	r3, [sp, #4]
 8003f68:	6120      	str	r0, [r4, #16]
 8003f6a:	b15b      	cbz	r3, 8003f84 <__smakebuf_r+0x70>
 8003f6c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003f70:	4630      	mov	r0, r6
 8003f72:	f000 f847 	bl	8004004 <_isatty_r>
 8003f76:	b128      	cbz	r0, 8003f84 <__smakebuf_r+0x70>
 8003f78:	89a3      	ldrh	r3, [r4, #12]
 8003f7a:	f023 0303 	bic.w	r3, r3, #3
 8003f7e:	f043 0301 	orr.w	r3, r3, #1
 8003f82:	81a3      	strh	r3, [r4, #12]
 8003f84:	89a3      	ldrh	r3, [r4, #12]
 8003f86:	431d      	orrs	r5, r3
 8003f88:	81a5      	strh	r5, [r4, #12]
 8003f8a:	e7cf      	b.n	8003f2c <__smakebuf_r+0x18>

08003f8c <memmove>:
 8003f8c:	4288      	cmp	r0, r1
 8003f8e:	b510      	push	{r4, lr}
 8003f90:	eb01 0402 	add.w	r4, r1, r2
 8003f94:	d902      	bls.n	8003f9c <memmove+0x10>
 8003f96:	4284      	cmp	r4, r0
 8003f98:	4623      	mov	r3, r4
 8003f9a:	d807      	bhi.n	8003fac <memmove+0x20>
 8003f9c:	1e43      	subs	r3, r0, #1
 8003f9e:	42a1      	cmp	r1, r4
 8003fa0:	d008      	beq.n	8003fb4 <memmove+0x28>
 8003fa2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003fa6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003faa:	e7f8      	b.n	8003f9e <memmove+0x12>
 8003fac:	4402      	add	r2, r0
 8003fae:	4601      	mov	r1, r0
 8003fb0:	428a      	cmp	r2, r1
 8003fb2:	d100      	bne.n	8003fb6 <memmove+0x2a>
 8003fb4:	bd10      	pop	{r4, pc}
 8003fb6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003fba:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003fbe:	e7f7      	b.n	8003fb0 <memmove+0x24>

08003fc0 <_close_r>:
 8003fc0:	b538      	push	{r3, r4, r5, lr}
 8003fc2:	4d06      	ldr	r5, [pc, #24]	; (8003fdc <_close_r+0x1c>)
 8003fc4:	2300      	movs	r3, #0
 8003fc6:	4604      	mov	r4, r0
 8003fc8:	4608      	mov	r0, r1
 8003fca:	602b      	str	r3, [r5, #0]
 8003fcc:	f7fd f9fb 	bl	80013c6 <_close>
 8003fd0:	1c43      	adds	r3, r0, #1
 8003fd2:	d102      	bne.n	8003fda <_close_r+0x1a>
 8003fd4:	682b      	ldr	r3, [r5, #0]
 8003fd6:	b103      	cbz	r3, 8003fda <_close_r+0x1a>
 8003fd8:	6023      	str	r3, [r4, #0]
 8003fda:	bd38      	pop	{r3, r4, r5, pc}
 8003fdc:	20000330 	.word	0x20000330

08003fe0 <_fstat_r>:
 8003fe0:	b538      	push	{r3, r4, r5, lr}
 8003fe2:	4d07      	ldr	r5, [pc, #28]	; (8004000 <_fstat_r+0x20>)
 8003fe4:	2300      	movs	r3, #0
 8003fe6:	4604      	mov	r4, r0
 8003fe8:	4608      	mov	r0, r1
 8003fea:	4611      	mov	r1, r2
 8003fec:	602b      	str	r3, [r5, #0]
 8003fee:	f7fd f9f6 	bl	80013de <_fstat>
 8003ff2:	1c43      	adds	r3, r0, #1
 8003ff4:	d102      	bne.n	8003ffc <_fstat_r+0x1c>
 8003ff6:	682b      	ldr	r3, [r5, #0]
 8003ff8:	b103      	cbz	r3, 8003ffc <_fstat_r+0x1c>
 8003ffa:	6023      	str	r3, [r4, #0]
 8003ffc:	bd38      	pop	{r3, r4, r5, pc}
 8003ffe:	bf00      	nop
 8004000:	20000330 	.word	0x20000330

08004004 <_isatty_r>:
 8004004:	b538      	push	{r3, r4, r5, lr}
 8004006:	4d06      	ldr	r5, [pc, #24]	; (8004020 <_isatty_r+0x1c>)
 8004008:	2300      	movs	r3, #0
 800400a:	4604      	mov	r4, r0
 800400c:	4608      	mov	r0, r1
 800400e:	602b      	str	r3, [r5, #0]
 8004010:	f7fd f9f5 	bl	80013fe <_isatty>
 8004014:	1c43      	adds	r3, r0, #1
 8004016:	d102      	bne.n	800401e <_isatty_r+0x1a>
 8004018:	682b      	ldr	r3, [r5, #0]
 800401a:	b103      	cbz	r3, 800401e <_isatty_r+0x1a>
 800401c:	6023      	str	r3, [r4, #0]
 800401e:	bd38      	pop	{r3, r4, r5, pc}
 8004020:	20000330 	.word	0x20000330

08004024 <_lseek_r>:
 8004024:	b538      	push	{r3, r4, r5, lr}
 8004026:	4d07      	ldr	r5, [pc, #28]	; (8004044 <_lseek_r+0x20>)
 8004028:	4604      	mov	r4, r0
 800402a:	4608      	mov	r0, r1
 800402c:	4611      	mov	r1, r2
 800402e:	2200      	movs	r2, #0
 8004030:	602a      	str	r2, [r5, #0]
 8004032:	461a      	mov	r2, r3
 8004034:	f7fd f9ee 	bl	8001414 <_lseek>
 8004038:	1c43      	adds	r3, r0, #1
 800403a:	d102      	bne.n	8004042 <_lseek_r+0x1e>
 800403c:	682b      	ldr	r3, [r5, #0]
 800403e:	b103      	cbz	r3, 8004042 <_lseek_r+0x1e>
 8004040:	6023      	str	r3, [r4, #0]
 8004042:	bd38      	pop	{r3, r4, r5, pc}
 8004044:	20000330 	.word	0x20000330

08004048 <_read_r>:
 8004048:	b538      	push	{r3, r4, r5, lr}
 800404a:	4d07      	ldr	r5, [pc, #28]	; (8004068 <_read_r+0x20>)
 800404c:	4604      	mov	r4, r0
 800404e:	4608      	mov	r0, r1
 8004050:	4611      	mov	r1, r2
 8004052:	2200      	movs	r2, #0
 8004054:	602a      	str	r2, [r5, #0]
 8004056:	461a      	mov	r2, r3
 8004058:	f7fd f998 	bl	800138c <_read>
 800405c:	1c43      	adds	r3, r0, #1
 800405e:	d102      	bne.n	8004066 <_read_r+0x1e>
 8004060:	682b      	ldr	r3, [r5, #0]
 8004062:	b103      	cbz	r3, 8004066 <_read_r+0x1e>
 8004064:	6023      	str	r3, [r4, #0]
 8004066:	bd38      	pop	{r3, r4, r5, pc}
 8004068:	20000330 	.word	0x20000330

0800406c <_sbrk_r>:
 800406c:	b538      	push	{r3, r4, r5, lr}
 800406e:	4d06      	ldr	r5, [pc, #24]	; (8004088 <_sbrk_r+0x1c>)
 8004070:	2300      	movs	r3, #0
 8004072:	4604      	mov	r4, r0
 8004074:	4608      	mov	r0, r1
 8004076:	602b      	str	r3, [r5, #0]
 8004078:	f7fd f9da 	bl	8001430 <_sbrk>
 800407c:	1c43      	adds	r3, r0, #1
 800407e:	d102      	bne.n	8004086 <_sbrk_r+0x1a>
 8004080:	682b      	ldr	r3, [r5, #0]
 8004082:	b103      	cbz	r3, 8004086 <_sbrk_r+0x1a>
 8004084:	6023      	str	r3, [r4, #0]
 8004086:	bd38      	pop	{r3, r4, r5, pc}
 8004088:	20000330 	.word	0x20000330

0800408c <_write_r>:
 800408c:	b538      	push	{r3, r4, r5, lr}
 800408e:	4d07      	ldr	r5, [pc, #28]	; (80040ac <_write_r+0x20>)
 8004090:	4604      	mov	r4, r0
 8004092:	4608      	mov	r0, r1
 8004094:	4611      	mov	r1, r2
 8004096:	2200      	movs	r2, #0
 8004098:	602a      	str	r2, [r5, #0]
 800409a:	461a      	mov	r2, r3
 800409c:	f7fc ff26 	bl	8000eec <_write>
 80040a0:	1c43      	adds	r3, r0, #1
 80040a2:	d102      	bne.n	80040aa <_write_r+0x1e>
 80040a4:	682b      	ldr	r3, [r5, #0]
 80040a6:	b103      	cbz	r3, 80040aa <_write_r+0x1e>
 80040a8:	6023      	str	r3, [r4, #0]
 80040aa:	bd38      	pop	{r3, r4, r5, pc}
 80040ac:	20000330 	.word	0x20000330

080040b0 <memcpy>:
 80040b0:	440a      	add	r2, r1
 80040b2:	4291      	cmp	r1, r2
 80040b4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80040b8:	d100      	bne.n	80040bc <memcpy+0xc>
 80040ba:	4770      	bx	lr
 80040bc:	b510      	push	{r4, lr}
 80040be:	f811 4b01 	ldrb.w	r4, [r1], #1
 80040c2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80040c6:	4291      	cmp	r1, r2
 80040c8:	d1f9      	bne.n	80040be <memcpy+0xe>
 80040ca:	bd10      	pop	{r4, pc}

080040cc <__assert_func>:
 80040cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80040ce:	4614      	mov	r4, r2
 80040d0:	461a      	mov	r2, r3
 80040d2:	4b09      	ldr	r3, [pc, #36]	; (80040f8 <__assert_func+0x2c>)
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	4605      	mov	r5, r0
 80040d8:	68d8      	ldr	r0, [r3, #12]
 80040da:	b14c      	cbz	r4, 80040f0 <__assert_func+0x24>
 80040dc:	4b07      	ldr	r3, [pc, #28]	; (80040fc <__assert_func+0x30>)
 80040de:	9100      	str	r1, [sp, #0]
 80040e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80040e4:	4906      	ldr	r1, [pc, #24]	; (8004100 <__assert_func+0x34>)
 80040e6:	462b      	mov	r3, r5
 80040e8:	f000 f88a 	bl	8004200 <fiprintf>
 80040ec:	f000 f8a7 	bl	800423e <abort>
 80040f0:	4b04      	ldr	r3, [pc, #16]	; (8004104 <__assert_func+0x38>)
 80040f2:	461c      	mov	r4, r3
 80040f4:	e7f3      	b.n	80040de <__assert_func+0x12>
 80040f6:	bf00      	nop
 80040f8:	20000058 	.word	0x20000058
 80040fc:	0800499f 	.word	0x0800499f
 8004100:	080049ac 	.word	0x080049ac
 8004104:	080049da 	.word	0x080049da

08004108 <_calloc_r>:
 8004108:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800410a:	fba1 2402 	umull	r2, r4, r1, r2
 800410e:	b94c      	cbnz	r4, 8004124 <_calloc_r+0x1c>
 8004110:	4611      	mov	r1, r2
 8004112:	9201      	str	r2, [sp, #4]
 8004114:	f7ff f91a 	bl	800334c <_malloc_r>
 8004118:	9a01      	ldr	r2, [sp, #4]
 800411a:	4605      	mov	r5, r0
 800411c:	b930      	cbnz	r0, 800412c <_calloc_r+0x24>
 800411e:	4628      	mov	r0, r5
 8004120:	b003      	add	sp, #12
 8004122:	bd30      	pop	{r4, r5, pc}
 8004124:	220c      	movs	r2, #12
 8004126:	6002      	str	r2, [r0, #0]
 8004128:	2500      	movs	r5, #0
 800412a:	e7f8      	b.n	800411e <_calloc_r+0x16>
 800412c:	4621      	mov	r1, r4
 800412e:	f7fd ff95 	bl	800205c <memset>
 8004132:	e7f4      	b.n	800411e <_calloc_r+0x16>

08004134 <_free_r>:
 8004134:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004136:	2900      	cmp	r1, #0
 8004138:	d044      	beq.n	80041c4 <_free_r+0x90>
 800413a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800413e:	9001      	str	r0, [sp, #4]
 8004140:	2b00      	cmp	r3, #0
 8004142:	f1a1 0404 	sub.w	r4, r1, #4
 8004146:	bfb8      	it	lt
 8004148:	18e4      	addlt	r4, r4, r3
 800414a:	f7ff fa2d 	bl	80035a8 <__malloc_lock>
 800414e:	4a1e      	ldr	r2, [pc, #120]	; (80041c8 <_free_r+0x94>)
 8004150:	9801      	ldr	r0, [sp, #4]
 8004152:	6813      	ldr	r3, [r2, #0]
 8004154:	b933      	cbnz	r3, 8004164 <_free_r+0x30>
 8004156:	6063      	str	r3, [r4, #4]
 8004158:	6014      	str	r4, [r2, #0]
 800415a:	b003      	add	sp, #12
 800415c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004160:	f7ff ba28 	b.w	80035b4 <__malloc_unlock>
 8004164:	42a3      	cmp	r3, r4
 8004166:	d908      	bls.n	800417a <_free_r+0x46>
 8004168:	6825      	ldr	r5, [r4, #0]
 800416a:	1961      	adds	r1, r4, r5
 800416c:	428b      	cmp	r3, r1
 800416e:	bf01      	itttt	eq
 8004170:	6819      	ldreq	r1, [r3, #0]
 8004172:	685b      	ldreq	r3, [r3, #4]
 8004174:	1949      	addeq	r1, r1, r5
 8004176:	6021      	streq	r1, [r4, #0]
 8004178:	e7ed      	b.n	8004156 <_free_r+0x22>
 800417a:	461a      	mov	r2, r3
 800417c:	685b      	ldr	r3, [r3, #4]
 800417e:	b10b      	cbz	r3, 8004184 <_free_r+0x50>
 8004180:	42a3      	cmp	r3, r4
 8004182:	d9fa      	bls.n	800417a <_free_r+0x46>
 8004184:	6811      	ldr	r1, [r2, #0]
 8004186:	1855      	adds	r5, r2, r1
 8004188:	42a5      	cmp	r5, r4
 800418a:	d10b      	bne.n	80041a4 <_free_r+0x70>
 800418c:	6824      	ldr	r4, [r4, #0]
 800418e:	4421      	add	r1, r4
 8004190:	1854      	adds	r4, r2, r1
 8004192:	42a3      	cmp	r3, r4
 8004194:	6011      	str	r1, [r2, #0]
 8004196:	d1e0      	bne.n	800415a <_free_r+0x26>
 8004198:	681c      	ldr	r4, [r3, #0]
 800419a:	685b      	ldr	r3, [r3, #4]
 800419c:	6053      	str	r3, [r2, #4]
 800419e:	440c      	add	r4, r1
 80041a0:	6014      	str	r4, [r2, #0]
 80041a2:	e7da      	b.n	800415a <_free_r+0x26>
 80041a4:	d902      	bls.n	80041ac <_free_r+0x78>
 80041a6:	230c      	movs	r3, #12
 80041a8:	6003      	str	r3, [r0, #0]
 80041aa:	e7d6      	b.n	800415a <_free_r+0x26>
 80041ac:	6825      	ldr	r5, [r4, #0]
 80041ae:	1961      	adds	r1, r4, r5
 80041b0:	428b      	cmp	r3, r1
 80041b2:	bf04      	itt	eq
 80041b4:	6819      	ldreq	r1, [r3, #0]
 80041b6:	685b      	ldreq	r3, [r3, #4]
 80041b8:	6063      	str	r3, [r4, #4]
 80041ba:	bf04      	itt	eq
 80041bc:	1949      	addeq	r1, r1, r5
 80041be:	6021      	streq	r1, [r4, #0]
 80041c0:	6054      	str	r4, [r2, #4]
 80041c2:	e7ca      	b.n	800415a <_free_r+0x26>
 80041c4:	b003      	add	sp, #12
 80041c6:	bd30      	pop	{r4, r5, pc}
 80041c8:	20000328 	.word	0x20000328

080041cc <__ascii_mbtowc>:
 80041cc:	b082      	sub	sp, #8
 80041ce:	b901      	cbnz	r1, 80041d2 <__ascii_mbtowc+0x6>
 80041d0:	a901      	add	r1, sp, #4
 80041d2:	b142      	cbz	r2, 80041e6 <__ascii_mbtowc+0x1a>
 80041d4:	b14b      	cbz	r3, 80041ea <__ascii_mbtowc+0x1e>
 80041d6:	7813      	ldrb	r3, [r2, #0]
 80041d8:	600b      	str	r3, [r1, #0]
 80041da:	7812      	ldrb	r2, [r2, #0]
 80041dc:	1e10      	subs	r0, r2, #0
 80041de:	bf18      	it	ne
 80041e0:	2001      	movne	r0, #1
 80041e2:	b002      	add	sp, #8
 80041e4:	4770      	bx	lr
 80041e6:	4610      	mov	r0, r2
 80041e8:	e7fb      	b.n	80041e2 <__ascii_mbtowc+0x16>
 80041ea:	f06f 0001 	mvn.w	r0, #1
 80041ee:	e7f8      	b.n	80041e2 <__ascii_mbtowc+0x16>

080041f0 <_malloc_usable_size_r>:
 80041f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80041f4:	1f18      	subs	r0, r3, #4
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	bfbc      	itt	lt
 80041fa:	580b      	ldrlt	r3, [r1, r0]
 80041fc:	18c0      	addlt	r0, r0, r3
 80041fe:	4770      	bx	lr

08004200 <fiprintf>:
 8004200:	b40e      	push	{r1, r2, r3}
 8004202:	b503      	push	{r0, r1, lr}
 8004204:	4601      	mov	r1, r0
 8004206:	ab03      	add	r3, sp, #12
 8004208:	4805      	ldr	r0, [pc, #20]	; (8004220 <fiprintf+0x20>)
 800420a:	f853 2b04 	ldr.w	r2, [r3], #4
 800420e:	6800      	ldr	r0, [r0, #0]
 8004210:	9301      	str	r3, [sp, #4]
 8004212:	f7fe ff59 	bl	80030c8 <_vfiprintf_r>
 8004216:	b002      	add	sp, #8
 8004218:	f85d eb04 	ldr.w	lr, [sp], #4
 800421c:	b003      	add	sp, #12
 800421e:	4770      	bx	lr
 8004220:	20000058 	.word	0x20000058

08004224 <__ascii_wctomb>:
 8004224:	b149      	cbz	r1, 800423a <__ascii_wctomb+0x16>
 8004226:	2aff      	cmp	r2, #255	; 0xff
 8004228:	bf85      	ittet	hi
 800422a:	238a      	movhi	r3, #138	; 0x8a
 800422c:	6003      	strhi	r3, [r0, #0]
 800422e:	700a      	strbls	r2, [r1, #0]
 8004230:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8004234:	bf98      	it	ls
 8004236:	2001      	movls	r0, #1
 8004238:	4770      	bx	lr
 800423a:	4608      	mov	r0, r1
 800423c:	4770      	bx	lr

0800423e <abort>:
 800423e:	b508      	push	{r3, lr}
 8004240:	2006      	movs	r0, #6
 8004242:	f000 f82b 	bl	800429c <raise>
 8004246:	2001      	movs	r0, #1
 8004248:	f7fd f896 	bl	8001378 <_exit>

0800424c <_raise_r>:
 800424c:	291f      	cmp	r1, #31
 800424e:	b538      	push	{r3, r4, r5, lr}
 8004250:	4604      	mov	r4, r0
 8004252:	460d      	mov	r5, r1
 8004254:	d904      	bls.n	8004260 <_raise_r+0x14>
 8004256:	2316      	movs	r3, #22
 8004258:	6003      	str	r3, [r0, #0]
 800425a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800425e:	bd38      	pop	{r3, r4, r5, pc}
 8004260:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004262:	b112      	cbz	r2, 800426a <_raise_r+0x1e>
 8004264:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004268:	b94b      	cbnz	r3, 800427e <_raise_r+0x32>
 800426a:	4620      	mov	r0, r4
 800426c:	f000 f830 	bl	80042d0 <_getpid_r>
 8004270:	462a      	mov	r2, r5
 8004272:	4601      	mov	r1, r0
 8004274:	4620      	mov	r0, r4
 8004276:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800427a:	f000 b817 	b.w	80042ac <_kill_r>
 800427e:	2b01      	cmp	r3, #1
 8004280:	d00a      	beq.n	8004298 <_raise_r+0x4c>
 8004282:	1c59      	adds	r1, r3, #1
 8004284:	d103      	bne.n	800428e <_raise_r+0x42>
 8004286:	2316      	movs	r3, #22
 8004288:	6003      	str	r3, [r0, #0]
 800428a:	2001      	movs	r0, #1
 800428c:	e7e7      	b.n	800425e <_raise_r+0x12>
 800428e:	2400      	movs	r4, #0
 8004290:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004294:	4628      	mov	r0, r5
 8004296:	4798      	blx	r3
 8004298:	2000      	movs	r0, #0
 800429a:	e7e0      	b.n	800425e <_raise_r+0x12>

0800429c <raise>:
 800429c:	4b02      	ldr	r3, [pc, #8]	; (80042a8 <raise+0xc>)
 800429e:	4601      	mov	r1, r0
 80042a0:	6818      	ldr	r0, [r3, #0]
 80042a2:	f7ff bfd3 	b.w	800424c <_raise_r>
 80042a6:	bf00      	nop
 80042a8:	20000058 	.word	0x20000058

080042ac <_kill_r>:
 80042ac:	b538      	push	{r3, r4, r5, lr}
 80042ae:	4d07      	ldr	r5, [pc, #28]	; (80042cc <_kill_r+0x20>)
 80042b0:	2300      	movs	r3, #0
 80042b2:	4604      	mov	r4, r0
 80042b4:	4608      	mov	r0, r1
 80042b6:	4611      	mov	r1, r2
 80042b8:	602b      	str	r3, [r5, #0]
 80042ba:	f7fd f84d 	bl	8001358 <_kill>
 80042be:	1c43      	adds	r3, r0, #1
 80042c0:	d102      	bne.n	80042c8 <_kill_r+0x1c>
 80042c2:	682b      	ldr	r3, [r5, #0]
 80042c4:	b103      	cbz	r3, 80042c8 <_kill_r+0x1c>
 80042c6:	6023      	str	r3, [r4, #0]
 80042c8:	bd38      	pop	{r3, r4, r5, pc}
 80042ca:	bf00      	nop
 80042cc:	20000330 	.word	0x20000330

080042d0 <_getpid_r>:
 80042d0:	f7fd b83a 	b.w	8001348 <_getpid>

080042d4 <_init>:
 80042d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042d6:	bf00      	nop
 80042d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80042da:	bc08      	pop	{r3}
 80042dc:	469e      	mov	lr, r3
 80042de:	4770      	bx	lr

080042e0 <_fini>:
 80042e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042e2:	bf00      	nop
 80042e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80042e6:	bc08      	pop	{r3}
 80042e8:	469e      	mov	lr, r3
 80042ea:	4770      	bx	lr
