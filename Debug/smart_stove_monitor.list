
smart_stove_monitor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000416c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006ec  08004300  08004300  00014300  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080049ec  080049ec  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  080049ec  080049ec  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080049ec  080049ec  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080049ec  080049ec  000149ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080049f0  080049f0  000149f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  080049f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000201c8  2**0
                  CONTENTS
 10 .bss          0000016c  200001c8  200001c8  000201c8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000334  20000334  000201c8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
 14 .debug_info   000023a4  00000000  00000000  0002023b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000a66  00000000  00000000  000225df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000240  00000000  00000000  00023048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000187  00000000  00000000  00023288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0000c4f6  00000000  00000000  0002340f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000031c6  00000000  00000000  0002f905  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0003c5bf  00000000  00000000  00032acb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000018f8  00000000  00000000  0006f08c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006c  00000000  00000000  00070984  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001c8 	.word	0x200001c8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080042e4 	.word	0x080042e4

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001cc 	.word	0x200001cc
 80001cc:	080042e4 	.word	0x080042e4

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <ADC_init>:
#include <stdint.h>
#include <stdio.h>


// ADC initialization
void ADC_init(void) {
 8000ba8:	b480      	push	{r7}
 8000baa:	af00      	add	r7, sp, #0

    // Enable ADC1 clock
    RCC -> APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000bac:	4b0f      	ldr	r3, [pc, #60]	; (8000bec <ADC_init+0x44>)
 8000bae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000bb0:	4a0e      	ldr	r2, [pc, #56]	; (8000bec <ADC_init+0x44>)
 8000bb2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000bb6:	6453      	str	r3, [r2, #68]	; 0x44

    // Set regular channel sequence length to 1 conversion since we only have 1 sensor
    ADC1 -> SQR1 &= ~ADC_SQR1_L;
 8000bb8:	4b0d      	ldr	r3, [pc, #52]	; (8000bf0 <ADC_init+0x48>)
 8000bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000bbc:	4a0c      	ldr	r2, [pc, #48]	; (8000bf0 <ADC_init+0x48>)
 8000bbe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000bc2:	62d3      	str	r3, [r2, #44]	; 0x2c

    // Set ADC1's 1st conversion in regular sequence to ch4 (mapped to PA4)
    ADC1 -> SQR3 = 4;
 8000bc4:	4b0a      	ldr	r3, [pc, #40]	; (8000bf0 <ADC_init+0x48>)
 8000bc6:	2204      	movs	r2, #4
 8000bc8:	635a      	str	r2, [r3, #52]	; 0x34

    // Set ch4 sample time to be 84 cycles
    ADC1 -> SMPR2 |= ADC_SMPR2_SMP4_2;
 8000bca:	4b09      	ldr	r3, [pc, #36]	; (8000bf0 <ADC_init+0x48>)
 8000bcc:	691b      	ldr	r3, [r3, #16]
 8000bce:	4a08      	ldr	r2, [pc, #32]	; (8000bf0 <ADC_init+0x48>)
 8000bd0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000bd4:	6113      	str	r3, [r2, #16]

    // Enable ADC1
    ADC1 -> CR2 |= ADC_CR2_ADON;
 8000bd6:	4b06      	ldr	r3, [pc, #24]	; (8000bf0 <ADC_init+0x48>)
 8000bd8:	689b      	ldr	r3, [r3, #8]
 8000bda:	4a05      	ldr	r2, [pc, #20]	; (8000bf0 <ADC_init+0x48>)
 8000bdc:	f043 0301 	orr.w	r3, r3, #1
 8000be0:	6093      	str	r3, [r2, #8]
}
 8000be2:	bf00      	nop
 8000be4:	46bd      	mov	sp, r7
 8000be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bea:	4770      	bx	lr
 8000bec:	40023800 	.word	0x40023800
 8000bf0:	40012000 	.word	0x40012000

08000bf4 <start_ADC_conversion>:

// Start ADC Conversion
void start_ADC_conversion(void) {
 8000bf4:	b480      	push	{r7}
 8000bf6:	af00      	add	r7, sp, #0

    // Continuous conversion mode
    ADC1 -> CR2 |= ADC_CR2_CONT;
 8000bf8:	4b08      	ldr	r3, [pc, #32]	; (8000c1c <start_ADC_conversion+0x28>)
 8000bfa:	689b      	ldr	r3, [r3, #8]
 8000bfc:	4a07      	ldr	r2, [pc, #28]	; (8000c1c <start_ADC_conversion+0x28>)
 8000bfe:	f043 0302 	orr.w	r3, r3, #2
 8000c02:	6093      	str	r3, [r2, #8]

    // Start conversion of regular channels
    ADC1 -> CR2 |=  ADC_CR2_SWSTART;
 8000c04:	4b05      	ldr	r3, [pc, #20]	; (8000c1c <start_ADC_conversion+0x28>)
 8000c06:	689b      	ldr	r3, [r3, #8]
 8000c08:	4a04      	ldr	r2, [pc, #16]	; (8000c1c <start_ADC_conversion+0x28>)
 8000c0a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000c0e:	6093      	str	r3, [r2, #8]

}
 8000c10:	bf00      	nop
 8000c12:	46bd      	mov	sp, r7
 8000c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c18:	4770      	bx	lr
 8000c1a:	bf00      	nop
 8000c1c:	40012000 	.word	0x40012000

08000c20 <ADC_IRQHandler>:
    // Enable ADC interrupt in NVIC
    NVIC_EnableIRQ(ADC_IRQn);
}

// ADC interrupt handler
void ADC_IRQHandler(void) {
 8000c20:	b580      	push	{r7, lr}
 8000c22:	b082      	sub	sp, #8
 8000c24:	af00      	add	r7, sp, #0

    // Check if AWD flag is set
    if (ADC1 -> SR & ADC_SR_AWD) {
 8000c26:	4b1f      	ldr	r3, [pc, #124]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	f003 0301 	and.w	r3, r3, #1
 8000c2e:	2b00      	cmp	r3, #0
 8000c30:	d027      	beq.n	8000c82 <ADC_IRQHandler+0x62>

    	// For debug purpose
    	//printf("SR value before clearing AWD flag: ADC1->SR = %lu\n", ADC1->SR);

        // Clear the flag before handling the event
        ADC1 -> SR &= ~ADC_SR_AWD;
 8000c32:	4b1c      	ldr	r3, [pc, #112]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c34:	681b      	ldr	r3, [r3, #0]
 8000c36:	4a1b      	ldr	r2, [pc, #108]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c38:	f023 0301 	bic.w	r3, r3, #1
 8000c3c:	6013      	str	r3, [r2, #0]
        // For debug purpose
        //printf("SR value after clearing AWD flag: ADC1->SR = %lu\n", ADC1->SR);

        // If ADC value is outside the threshold: turn on the buzzer & LED
        // Otherwise, ensure buzzer & LED are off state
        uint16_t adc_value = read_ADC();
 8000c3e:	f000 f835 	bl	8000cac <read_ADC>
 8000c42:	4603      	mov	r3, r0
 8000c44:	80fb      	strh	r3, [r7, #6]
        if (adc_value > 1109 || adc_value < 0) {
 8000c46:	88fb      	ldrh	r3, [r7, #6]
 8000c48:	f240 4255 	movw	r2, #1109	; 0x455
 8000c4c:	4293      	cmp	r3, r2
 8000c4e:	d90c      	bls.n	8000c6a <ADC_IRQHandler+0x4a>

        	// Turn on the buzzer connected to PA5
        	GPIOA -> ODR |= GPIO_ODR_ODR_5;
 8000c50:	4b15      	ldr	r3, [pc, #84]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c52:	695b      	ldr	r3, [r3, #20]
 8000c54:	4a14      	ldr	r2, [pc, #80]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c56:	f043 0320 	orr.w	r3, r3, #32
 8000c5a:	6153      	str	r3, [r2, #20]

        	// Turn on the LED connected to PA6
        	GPIOA -> ODR |= GPIO_ODR_ODR_6;
 8000c5c:	4b12      	ldr	r3, [pc, #72]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c5e:	695b      	ldr	r3, [r3, #20]
 8000c60:	4a11      	ldr	r2, [pc, #68]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c66:	6153      	str	r3, [r2, #20]
 8000c68:	e00b      	b.n	8000c82 <ADC_IRQHandler+0x62>
        }
        else {

        	// Turn off the buzzer connected to PA5
        	GPIOA -> ODR &= GPIO_ODR_ODR_5;
 8000c6a:	4b0f      	ldr	r3, [pc, #60]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c6c:	695b      	ldr	r3, [r3, #20]
 8000c6e:	4a0e      	ldr	r2, [pc, #56]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c70:	f003 0320 	and.w	r3, r3, #32
 8000c74:	6153      	str	r3, [r2, #20]

        	// Turn off the LED connected to PA6
        	GPIOA -> ODR &= GPIO_ODR_ODR_6;
 8000c76:	4b0c      	ldr	r3, [pc, #48]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c78:	695b      	ldr	r3, [r3, #20]
 8000c7a:	4a0b      	ldr	r2, [pc, #44]	; (8000ca8 <ADC_IRQHandler+0x88>)
 8000c7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000c80:	6153      	str	r3, [r2, #20]
        // For debug purpose
        //printf("ADC value when interrupt is triggered. ADC Value: %lu\n", ADC1->DR);
    }

    // Check if the EOC interrupt flag is set
    if (ADC1->SR & ADC_SR_EOC) {
 8000c82:	4b08      	ldr	r3, [pc, #32]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c84:	681b      	ldr	r3, [r3, #0]
 8000c86:	f003 0302 	and.w	r3, r3, #2
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	d005      	beq.n	8000c9a <ADC_IRQHandler+0x7a>

        // Clear the EOC interrupt flag
        ADC1->SR &= ~ADC_SR_EOC;
 8000c8e:	4b05      	ldr	r3, [pc, #20]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c90:	681b      	ldr	r3, [r3, #0]
 8000c92:	4a04      	ldr	r2, [pc, #16]	; (8000ca4 <ADC_IRQHandler+0x84>)
 8000c94:	f023 0302 	bic.w	r3, r3, #2
 8000c98:	6013      	str	r3, [r2, #0]

        // No specific handling
    }
}
 8000c9a:	bf00      	nop
 8000c9c:	3708      	adds	r7, #8
 8000c9e:	46bd      	mov	sp, r7
 8000ca0:	bd80      	pop	{r7, pc}
 8000ca2:	bf00      	nop
 8000ca4:	40012000 	.word	0x40012000
 8000ca8:	40020000 	.word	0x40020000

08000cac <read_ADC>:


// Read ADC value
uint16_t read_ADC(void) {
 8000cac:	b480      	push	{r7}
 8000cae:	af00      	add	r7, sp, #0

    // Keep looping till conversion completes on regular channel
    while (!(ADC1->SR & ADC_SR_EOC));
 8000cb0:	bf00      	nop
 8000cb2:	4b07      	ldr	r3, [pc, #28]	; (8000cd0 <read_ADC+0x24>)
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	f003 0302 	and.w	r3, r3, #2
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d0f9      	beq.n	8000cb2 <read_ADC+0x6>

    // Return ADC value
    return ADC1->DR;
 8000cbe:	4b04      	ldr	r3, [pc, #16]	; (8000cd0 <read_ADC+0x24>)
 8000cc0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000cc2:	b29b      	uxth	r3, r3

}
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop
 8000cd0:	40012000 	.word	0x40012000

08000cd4 <read_temp>:



// Read temperature
int read_temp(void) {
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	b084      	sub	sp, #16
 8000cd8:	af00      	add	r7, sp, #0
    uint16_t adc_value = read_ADC();
 8000cda:	f7ff ffe7 	bl	8000cac <read_ADC>
 8000cde:	4603      	mov	r3, r0
 8000ce0:	81fb      	strh	r3, [r7, #14]
    int voltage_mv = adc_value * 3000 / 4095;
 8000ce2:	89fb      	ldrh	r3, [r7, #14]
 8000ce4:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000ce8:	fb02 f303 	mul.w	r3, r2, r3
 8000cec:	4a0b      	ldr	r2, [pc, #44]	; (8000d1c <read_temp+0x48>)
 8000cee:	fb82 1203 	smull	r1, r2, r2, r3
 8000cf2:	441a      	add	r2, r3
 8000cf4:	12d2      	asrs	r2, r2, #11
 8000cf6:	17db      	asrs	r3, r3, #31
 8000cf8:	1ad3      	subs	r3, r2, r3
 8000cfa:	60bb      	str	r3, [r7, #8]
    int temp_celsius = (voltage_mv - 500) / 10;
 8000cfc:	68bb      	ldr	r3, [r7, #8]
 8000cfe:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8000d02:	4a07      	ldr	r2, [pc, #28]	; (8000d20 <read_temp+0x4c>)
 8000d04:	fb82 1203 	smull	r1, r2, r2, r3
 8000d08:	1092      	asrs	r2, r2, #2
 8000d0a:	17db      	asrs	r3, r3, #31
 8000d0c:	1ad3      	subs	r3, r2, r3
 8000d0e:	607b      	str	r3, [r7, #4]
    return temp_celsius;
 8000d10:	687b      	ldr	r3, [r7, #4]
}
 8000d12:	4618      	mov	r0, r3
 8000d14:	3710      	adds	r7, #16
 8000d16:	46bd      	mov	sp, r7
 8000d18:	bd80      	pop	{r7, pc}
 8000d1a:	bf00      	nop
 8000d1c:	80080081 	.word	0x80080081
 8000d20:	66666667 	.word	0x66666667

08000d24 <GPIO_init>:
#include "gpio.h"



// GPIO initialization
void GPIO_init(void) {
 8000d24:	b480      	push	{r7}
 8000d26:	af00      	add	r7, sp, #0

    // Enable clock for GPIOA
    RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000d28:	4b3b      	ldr	r3, [pc, #236]	; (8000e18 <GPIO_init+0xf4>)
 8000d2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d2c:	4a3a      	ldr	r2, [pc, #232]	; (8000e18 <GPIO_init+0xf4>)
 8000d2e:	f043 0301 	orr.w	r3, r3, #1
 8000d32:	6313      	str	r3, [r2, #48]	; 0x30

    // Set PA0 as input for motion sensor: bits 1:0 of MODER set to 00
    GPIOA -> MODER &= ~(GPIO_MODER_MODER0);
 8000d34:	4b39      	ldr	r3, [pc, #228]	; (8000e1c <GPIO_init+0xf8>)
 8000d36:	681b      	ldr	r3, [r3, #0]
 8000d38:	4a38      	ldr	r2, [pc, #224]	; (8000e1c <GPIO_init+0xf8>)
 8000d3a:	f023 0303 	bic.w	r3, r3, #3
 8000d3e:	6013      	str	r3, [r2, #0]

    // Set PA1 as output for LED: bits 3:2 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER1_0;
 8000d40:	4b36      	ldr	r3, [pc, #216]	; (8000e1c <GPIO_init+0xf8>)
 8000d42:	681b      	ldr	r3, [r3, #0]
 8000d44:	4a35      	ldr	r2, [pc, #212]	; (8000e1c <GPIO_init+0xf8>)
 8000d46:	f043 0304 	orr.w	r3, r3, #4
 8000d4a:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER1_1);
 8000d4c:	4b33      	ldr	r3, [pc, #204]	; (8000e1c <GPIO_init+0xf8>)
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	4a32      	ldr	r2, [pc, #200]	; (8000e1c <GPIO_init+0xf8>)
 8000d52:	f023 0308 	bic.w	r3, r3, #8
 8000d56:	6013      	str	r3, [r2, #0]

    // Set PA4 as analog input for temp sensor: bits 9:8 set to 11
    GPIOA -> MODER |= GPIO_MODER_MODER4;
 8000d58:	4b30      	ldr	r3, [pc, #192]	; (8000e1c <GPIO_init+0xf8>)
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	4a2f      	ldr	r2, [pc, #188]	; (8000e1c <GPIO_init+0xf8>)
 8000d5e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000d62:	6013      	str	r3, [r2, #0]

    // Set PA5 as output for buzzer: bits 11:10 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER5_0;
 8000d64:	4b2d      	ldr	r3, [pc, #180]	; (8000e1c <GPIO_init+0xf8>)
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	4a2c      	ldr	r2, [pc, #176]	; (8000e1c <GPIO_init+0xf8>)
 8000d6a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000d6e:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER5_1);
 8000d70:	4b2a      	ldr	r3, [pc, #168]	; (8000e1c <GPIO_init+0xf8>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	4a29      	ldr	r2, [pc, #164]	; (8000e1c <GPIO_init+0xf8>)
 8000d76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000d7a:	6013      	str	r3, [r2, #0]

    // Set PA6 as output for debug LED: bits 13:12 set to 01
    GPIOA -> MODER |= GPIO_MODER_MODER6_0;
 8000d7c:	4b27      	ldr	r3, [pc, #156]	; (8000e1c <GPIO_init+0xf8>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	4a26      	ldr	r2, [pc, #152]	; (8000e1c <GPIO_init+0xf8>)
 8000d82:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000d86:	6013      	str	r3, [r2, #0]
    GPIOA -> MODER &= ~(GPIO_MODER_MODER6_1);
 8000d88:	4b24      	ldr	r3, [pc, #144]	; (8000e1c <GPIO_init+0xf8>)
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	4a23      	ldr	r2, [pc, #140]	; (8000e1c <GPIO_init+0xf8>)
 8000d8e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000d92:	6013      	str	r3, [r2, #0]

    //-----------------------------I2C CONFIG--------------------------------

    // Enable clock for I2C1
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000d94:	4b20      	ldr	r3, [pc, #128]	; (8000e18 <GPIO_init+0xf4>)
 8000d96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d98:	4a1f      	ldr	r2, [pc, #124]	; (8000e18 <GPIO_init+0xf4>)
 8000d9a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000d9e:	6413      	str	r3, [r2, #64]	; 0x40

    // Enable clock for GPIOB
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000da0:	4b1d      	ldr	r3, [pc, #116]	; (8000e18 <GPIO_init+0xf4>)
 8000da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000da4:	4a1c      	ldr	r2, [pc, #112]	; (8000e18 <GPIO_init+0xf4>)
 8000da6:	f043 0302 	orr.w	r3, r3, #2
 8000daa:	6313      	str	r3, [r2, #48]	; 0x30

    // Set PB6 & PB7 to alternate function (AF) Mode
    GPIOB -> MODER &= ~(GPIO_MODER_MODER6);
 8000dac:	4b1c      	ldr	r3, [pc, #112]	; (8000e20 <GPIO_init+0xfc>)
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	4a1b      	ldr	r2, [pc, #108]	; (8000e20 <GPIO_init+0xfc>)
 8000db2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000db6:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER |= GPIO_MODER_MODER6_1;
 8000db8:	4b19      	ldr	r3, [pc, #100]	; (8000e20 <GPIO_init+0xfc>)
 8000dba:	681b      	ldr	r3, [r3, #0]
 8000dbc:	4a18      	ldr	r2, [pc, #96]	; (8000e20 <GPIO_init+0xfc>)
 8000dbe:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000dc2:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER &= ~(GPIO_MODER_MODER7);
 8000dc4:	4b16      	ldr	r3, [pc, #88]	; (8000e20 <GPIO_init+0xfc>)
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	4a15      	ldr	r2, [pc, #84]	; (8000e20 <GPIO_init+0xfc>)
 8000dca:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000dce:	6013      	str	r3, [r2, #0]
    GPIOB -> MODER |= GPIO_MODER_MODER7_1;
 8000dd0:	4b13      	ldr	r3, [pc, #76]	; (8000e20 <GPIO_init+0xfc>)
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	4a12      	ldr	r2, [pc, #72]	; (8000e20 <GPIO_init+0xfc>)
 8000dd6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000dda:	6013      	str	r3, [r2, #0]

    // Set PB6 to AF4 (SCL) and PB7 to AF4 (SDA)
    GPIOB -> AFR[0] |= (4 << 24)| (4 << 28);
 8000ddc:	4b10      	ldr	r3, [pc, #64]	; (8000e20 <GPIO_init+0xfc>)
 8000dde:	6a1b      	ldr	r3, [r3, #32]
 8000de0:	4a0f      	ldr	r2, [pc, #60]	; (8000e20 <GPIO_init+0xfc>)
 8000de2:	f043 4388 	orr.w	r3, r3, #1140850688	; 0x44000000
 8000de6:	6213      	str	r3, [r2, #32]

    // Set PB6 & PB7 output type to be open-drain
    GPIOB->OTYPER |= (GPIO_OTYPER_OT_6 | GPIO_OTYPER_OT_7);
 8000de8:	4b0d      	ldr	r3, [pc, #52]	; (8000e20 <GPIO_init+0xfc>)
 8000dea:	685b      	ldr	r3, [r3, #4]
 8000dec:	4a0c      	ldr	r2, [pc, #48]	; (8000e20 <GPIO_init+0xfc>)
 8000dee:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8000df2:	6053      	str	r3, [r2, #4]

    // Enable pull-up resistors for SCL & SDA lines
    GPIOB -> PUPDR &= ~(GPIO_PUPDR_PUPDR6 | GPIO_PUPDR_PUPDR7);
 8000df4:	4b0a      	ldr	r3, [pc, #40]	; (8000e20 <GPIO_init+0xfc>)
 8000df6:	68db      	ldr	r3, [r3, #12]
 8000df8:	4a09      	ldr	r2, [pc, #36]	; (8000e20 <GPIO_init+0xfc>)
 8000dfa:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8000dfe:	60d3      	str	r3, [r2, #12]
    GPIOB -> PUPDR |= GPIO_PUPDR_PUPDR6_0 | GPIO_PUPDR_PUPDR7_0;
 8000e00:	4b07      	ldr	r3, [pc, #28]	; (8000e20 <GPIO_init+0xfc>)
 8000e02:	68db      	ldr	r3, [r3, #12]
 8000e04:	4a06      	ldr	r2, [pc, #24]	; (8000e20 <GPIO_init+0xfc>)
 8000e06:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
 8000e0a:	60d3      	str	r3, [r2, #12]


}
 8000e0c:	bf00      	nop
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e14:	4770      	bx	lr
 8000e16:	bf00      	nop
 8000e18:	40023800 	.word	0x40023800
 8000e1c:	40020000 	.word	0x40020000
 8000e20:	40020400 	.word	0x40020400

08000e24 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000e24:	b480      	push	{r7}
 8000e26:	b083      	sub	sp, #12
 8000e28:	af00      	add	r7, sp, #0
 8000e2a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e2c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e30:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000e34:	f003 0301 	and.w	r3, r3, #1
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	d014      	beq.n	8000e66 <ITM_SendChar+0x42>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000e3c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e40:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000e44:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d00c      	beq.n	8000e66 <ITM_SendChar+0x42>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000e4c:	e001      	b.n	8000e52 <ITM_SendChar+0x2e>
  \brief   No Operation
  \details No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
 8000e4e:	bf00      	nop
}
 8000e50:	bf00      	nop
 8000e52:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	2b00      	cmp	r3, #0
 8000e5a:	d0f8      	beq.n	8000e4e <ITM_SendChar+0x2a>
    {
      __NOP();
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000e5c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e60:	687a      	ldr	r2, [r7, #4]
 8000e62:	b2d2      	uxtb	r2, r2
 8000e64:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000e66:	687b      	ldr	r3, [r7, #4]
}
 8000e68:	4618      	mov	r0, r3
 8000e6a:	370c      	adds	r7, #12
 8000e6c:	46bd      	mov	sp, r7
 8000e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e72:	4770      	bx	lr

08000e74 <timer_delay_ms>:
#include <stdio.h>



// ms delay using timer
void timer_delay_ms(uint32_t delay_ms) {
 8000e74:	b480      	push	{r7}
 8000e76:	b083      	sub	sp, #12
 8000e78:	af00      	add	r7, sp, #0
 8000e7a:	6078      	str	r0, [r7, #4]
    // Enable TIM2 clock
    RCC -> APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000e7c:	4b1a      	ldr	r3, [pc, #104]	; (8000ee8 <timer_delay_ms+0x74>)
 8000e7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e80:	4a19      	ldr	r2, [pc, #100]	; (8000ee8 <timer_delay_ms+0x74>)
 8000e82:	f043 0301 	orr.w	r3, r3, #1
 8000e86:	6413      	str	r3, [r2, #64]	; 0x40

    // Set 1kHz (from 16MHz source) to achieve 1ms for each count
    TIM2 -> PSC = (16000000 / 1000) - 1;
 8000e88:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e8c:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8000e90:	851a      	strh	r2, [r3, #40]	; 0x28

    // Load the desired delay
    TIM2 -> ARR = delay_ms;
 8000e92:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e96:	687b      	ldr	r3, [r7, #4]
 8000e98:	62d3      	str	r3, [r2, #44]	; 0x2c

    // Start counting from 0
    TIM2 -> CNT = 0;
 8000e9a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	625a      	str	r2, [r3, #36]	; 0x24

    // Enable the counter: bit 0 of CR1 is set
    TIM2 -> CR1 |= TIM_CR1_CEN;
 8000ea2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ea6:	881b      	ldrh	r3, [r3, #0]
 8000ea8:	b29b      	uxth	r3, r3
 8000eaa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000eae:	f043 0301 	orr.w	r3, r3, #1
 8000eb2:	b29b      	uxth	r3, r3
 8000eb4:	8013      	strh	r3, [r2, #0]

    // Keep looping while Update Interrupt Flag (UIF) is not set in Status Register (SR)
    while (!(TIM2 -> SR & TIM_SR_UIF)) {}
 8000eb6:	bf00      	nop
 8000eb8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ebc:	8a1b      	ldrh	r3, [r3, #16]
 8000ebe:	b29b      	uxth	r3, r3
 8000ec0:	f003 0301 	and.w	r3, r3, #1
 8000ec4:	2b00      	cmp	r3, #0
 8000ec6:	d0f7      	beq.n	8000eb8 <timer_delay_ms+0x44>

    // Clear UIF after it is set
    TIM2 -> SR &= ~(TIM_SR_UIF);
 8000ec8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000ecc:	8a1b      	ldrh	r3, [r3, #16]
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000ed4:	f023 0301 	bic.w	r3, r3, #1
 8000ed8:	b29b      	uxth	r3, r3
 8000eda:	8213      	strh	r3, [r2, #16]
}
 8000edc:	bf00      	nop
 8000ede:	370c      	adds	r7, #12
 8000ee0:	46bd      	mov	sp, r7
 8000ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee6:	4770      	bx	lr
 8000ee8:	40023800 	.word	0x40023800

08000eec <_write>:




// Redirect printf to ITM
int _write(int file, char *ptr, int len) {
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b086      	sub	sp, #24
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	60f8      	str	r0, [r7, #12]
 8000ef4:	60b9      	str	r1, [r7, #8]
 8000ef6:	607a      	str	r2, [r7, #4]

    for (int i = 0; i < len; i++) {
 8000ef8:	2300      	movs	r3, #0
 8000efa:	617b      	str	r3, [r7, #20]
 8000efc:	e009      	b.n	8000f12 <_write+0x26>

        ITM_SendChar(*ptr++);
 8000efe:	68bb      	ldr	r3, [r7, #8]
 8000f00:	1c5a      	adds	r2, r3, #1
 8000f02:	60ba      	str	r2, [r7, #8]
 8000f04:	781b      	ldrb	r3, [r3, #0]
 8000f06:	4618      	mov	r0, r3
 8000f08:	f7ff ff8c 	bl	8000e24 <ITM_SendChar>
    for (int i = 0; i < len; i++) {
 8000f0c:	697b      	ldr	r3, [r7, #20]
 8000f0e:	3301      	adds	r3, #1
 8000f10:	617b      	str	r3, [r7, #20]
 8000f12:	697a      	ldr	r2, [r7, #20]
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	429a      	cmp	r2, r3
 8000f18:	dbf1      	blt.n	8000efe <_write+0x12>
    }

    return len;
 8000f1a:	687b      	ldr	r3, [r7, #4]
}
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	3718      	adds	r7, #24
 8000f20:	46bd      	mov	sp, r7
 8000f22:	bd80      	pop	{r7, pc}

08000f24 <format_temp_str>:


void format_temp_str(int temp, char *str) {
 8000f24:	b580      	push	{r7, lr}
 8000f26:	b082      	sub	sp, #8
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	6078      	str	r0, [r7, #4]
 8000f2c:	6039      	str	r1, [r7, #0]
    sprintf(str, " %d C", temp);
 8000f2e:	687a      	ldr	r2, [r7, #4]
 8000f30:	4903      	ldr	r1, [pc, #12]	; (8000f40 <format_temp_str+0x1c>)
 8000f32:	6838      	ldr	r0, [r7, #0]
 8000f34:	f000 ff4a 	bl	8001dcc <siprintf>
}
 8000f38:	bf00      	nop
 8000f3a:	3708      	adds	r7, #8
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bd80      	pop	{r7, pc}
 8000f40:	08004300 	.word	0x08004300

08000f44 <I2C_init>:
#include <stdint.h>
#include <stdio.h>
#define TIMEOUT 100000


void I2C_init(void) {
 8000f44:	b480      	push	{r7}
 8000f46:	af00      	add	r7, sp, #0

    // Reset I2C1
    RCC->APB1RSTR |= RCC_APB1RSTR_I2C1RST;
 8000f48:	4b14      	ldr	r3, [pc, #80]	; (8000f9c <I2C_init+0x58>)
 8000f4a:	6a1b      	ldr	r3, [r3, #32]
 8000f4c:	4a13      	ldr	r2, [pc, #76]	; (8000f9c <I2C_init+0x58>)
 8000f4e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000f52:	6213      	str	r3, [r2, #32]
    RCC->APB1RSTR &= ~RCC_APB1RSTR_I2C1RST;
 8000f54:	4b11      	ldr	r3, [pc, #68]	; (8000f9c <I2C_init+0x58>)
 8000f56:	6a1b      	ldr	r3, [r3, #32]
 8000f58:	4a10      	ldr	r2, [pc, #64]	; (8000f9c <I2C_init+0x58>)
 8000f5a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8000f5e:	6213      	str	r3, [r2, #32]

    // Set the peripheral clock frequency to be the default 16 MHz
    I2C1 -> CR2 = 16;
 8000f60:	4b0f      	ldr	r3, [pc, #60]	; (8000fa0 <I2C_init+0x5c>)
 8000f62:	2210      	movs	r2, #16
 8000f64:	809a      	strh	r2, [r3, #4]

    // Set SCL frequency to be 100 kHz (Sm mode)
    I2C1 -> CCR = 80;
 8000f66:	4b0e      	ldr	r3, [pc, #56]	; (8000fa0 <I2C_init+0x5c>)
 8000f68:	2250      	movs	r2, #80	; 0x50
 8000f6a:	839a      	strh	r2, [r3, #28]

    // Set max rise time
    I2C1 -> TRISE = 17;
 8000f6c:	4b0c      	ldr	r3, [pc, #48]	; (8000fa0 <I2C_init+0x5c>)
 8000f6e:	2211      	movs	r2, #17
 8000f70:	841a      	strh	r2, [r3, #32]

    // Enable ACK
    I2C1->CR1 |= I2C_CR1_ACK;
 8000f72:	4b0b      	ldr	r3, [pc, #44]	; (8000fa0 <I2C_init+0x5c>)
 8000f74:	881b      	ldrh	r3, [r3, #0]
 8000f76:	b29b      	uxth	r3, r3
 8000f78:	4a09      	ldr	r2, [pc, #36]	; (8000fa0 <I2C_init+0x5c>)
 8000f7a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000f7e:	b29b      	uxth	r3, r3
 8000f80:	8013      	strh	r3, [r2, #0]

    // Enable I2C1
    I2C1->CR1 |= I2C_CR1_PE;
 8000f82:	4b07      	ldr	r3, [pc, #28]	; (8000fa0 <I2C_init+0x5c>)
 8000f84:	881b      	ldrh	r3, [r3, #0]
 8000f86:	b29b      	uxth	r3, r3
 8000f88:	4a05      	ldr	r2, [pc, #20]	; (8000fa0 <I2C_init+0x5c>)
 8000f8a:	f043 0301 	orr.w	r3, r3, #1
 8000f8e:	b29b      	uxth	r3, r3
 8000f90:	8013      	strh	r3, [r2, #0]

}
 8000f92:	bf00      	nop
 8000f94:	46bd      	mov	sp, r7
 8000f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f9a:	4770      	bx	lr
 8000f9c:	40023800 	.word	0x40023800
 8000fa0:	40005400 	.word	0x40005400

08000fa4 <I2C_start>:


// I2C start condition
void I2C_start(void){
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b082      	sub	sp, #8
 8000fa8:	af00      	add	r7, sp, #0

	// Generate a start condition
	I2C1 -> CR1 |= I2C_CR1_START;
 8000faa:	4b12      	ldr	r3, [pc, #72]	; (8000ff4 <I2C_start+0x50>)
 8000fac:	881b      	ldrh	r3, [r3, #0]
 8000fae:	b29b      	uxth	r3, r3
 8000fb0:	4a10      	ldr	r2, [pc, #64]	; (8000ff4 <I2C_start+0x50>)
 8000fb2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000fb6:	b29b      	uxth	r3, r3
 8000fb8:	8013      	strh	r3, [r2, #0]

	// Keep looping till the SB flag is set (i.e. start condition generated)
	uint32_t SB_timeout = TIMEOUT;
 8000fba:	4b0f      	ldr	r3, [pc, #60]	; (8000ff8 <I2C_start+0x54>)
 8000fbc:	607b      	str	r3, [r7, #4]
	while(!(I2C1 -> SR1 & I2C_SR1_SB)){
 8000fbe:	e009      	b.n	8000fd4 <I2C_start+0x30>
		if(--SB_timeout == 0){
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	3b01      	subs	r3, #1
 8000fc4:	607b      	str	r3, [r7, #4]
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d103      	bne.n	8000fd4 <I2C_start+0x30>
			printf("Timeout waiting for SB flag to be set in start condition. \n");
 8000fcc:	480b      	ldr	r0, [pc, #44]	; (8000ffc <I2C_start+0x58>)
 8000fce:	f001 f845 	bl	800205c <puts>
			return;
 8000fd2:	e00b      	b.n	8000fec <I2C_start+0x48>
	while(!(I2C1 -> SR1 & I2C_SR1_SB)){
 8000fd4:	4b07      	ldr	r3, [pc, #28]	; (8000ff4 <I2C_start+0x50>)
 8000fd6:	8a9b      	ldrh	r3, [r3, #20]
 8000fd8:	b29b      	uxth	r3, r3
 8000fda:	f003 0301 	and.w	r3, r3, #1
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	d0ee      	beq.n	8000fc0 <I2C_start+0x1c>
		}
	}

	// Clear SB flag by reading SR1
	(void)I2C1->SR1;
 8000fe2:	4b04      	ldr	r3, [pc, #16]	; (8000ff4 <I2C_start+0x50>)
 8000fe4:	8a9b      	ldrh	r3, [r3, #20]
	printf("Start condition generated. \n");
 8000fe6:	4806      	ldr	r0, [pc, #24]	; (8001000 <I2C_start+0x5c>)
 8000fe8:	f001 f838 	bl	800205c <puts>

}
 8000fec:	3708      	adds	r7, #8
 8000fee:	46bd      	mov	sp, r7
 8000ff0:	bd80      	pop	{r7, pc}
 8000ff2:	bf00      	nop
 8000ff4:	40005400 	.word	0x40005400
 8000ff8:	000186a0 	.word	0x000186a0
 8000ffc:	08004308 	.word	0x08004308
 8001000:	08004344 	.word	0x08004344

08001004 <I2C_stop>:

// I2C stop condition
void I2C_stop(void){
 8001004:	b580      	push	{r7, lr}
 8001006:	af00      	add	r7, sp, #0

	// Generate a stop condition
	I2C1 -> CR1 |= I2C_CR1_STOP;
 8001008:	4b06      	ldr	r3, [pc, #24]	; (8001024 <I2C_stop+0x20>)
 800100a:	881b      	ldrh	r3, [r3, #0]
 800100c:	b29b      	uxth	r3, r3
 800100e:	4a05      	ldr	r2, [pc, #20]	; (8001024 <I2C_stop+0x20>)
 8001010:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001014:	b29b      	uxth	r3, r3
 8001016:	8013      	strh	r3, [r2, #0]
	printf("Stop condition generated. \n");
 8001018:	4803      	ldr	r0, [pc, #12]	; (8001028 <I2C_stop+0x24>)
 800101a:	f001 f81f 	bl	800205c <puts>

}
 800101e:	bf00      	nop
 8001020:	bd80      	pop	{r7, pc}
 8001022:	bf00      	nop
 8001024:	40005400 	.word	0x40005400
 8001028:	08004360 	.word	0x08004360

0800102c <I2C_write_address>:

// I2C 7-bit address transmission
void I2C_write_address(uint8_t address){
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	4603      	mov	r3, r0
 8001034:	71fb      	strb	r3, [r7, #7]

	uint8_t slave_addr = address << 1;
 8001036:	79fb      	ldrb	r3, [r7, #7]
 8001038:	005b      	lsls	r3, r3, #1
 800103a:	72fb      	strb	r3, [r7, #11]
	slave_addr &= ~(1); // master write to slave: lsb = 0
 800103c:	7afb      	ldrb	r3, [r7, #11]
 800103e:	f023 0301 	bic.w	r3, r3, #1
 8001042:	72fb      	strb	r3, [r7, #11]

	// Write DR register with the slave address
	I2C1 -> DR = slave_addr;
 8001044:	4b10      	ldr	r3, [pc, #64]	; (8001088 <I2C_write_address+0x5c>)
 8001046:	7afa      	ldrb	r2, [r7, #11]
 8001048:	b292      	uxth	r2, r2
 800104a:	821a      	strh	r2, [r3, #16]

	uint32_t ADDR_timeout = TIMEOUT;
 800104c:	4b0f      	ldr	r3, [pc, #60]	; (800108c <I2C_write_address+0x60>)
 800104e:	60fb      	str	r3, [r7, #12]

	// Keep looping till ADDR flag is set (i.e. address sent)
	while(!(I2C1 -> SR1 & I2C_SR1_ADDR)) {
 8001050:	e009      	b.n	8001066 <I2C_write_address+0x3a>

		if (--ADDR_timeout == 0){
 8001052:	68fb      	ldr	r3, [r7, #12]
 8001054:	3b01      	subs	r3, #1
 8001056:	60fb      	str	r3, [r7, #12]
 8001058:	68fb      	ldr	r3, [r7, #12]
 800105a:	2b00      	cmp	r3, #0
 800105c:	d103      	bne.n	8001066 <I2C_write_address+0x3a>
			printf("Timeout waiting for ADDR flag to be set in address transmission. \n");
 800105e:	480c      	ldr	r0, [pc, #48]	; (8001090 <I2C_write_address+0x64>)
 8001060:	f000 fffc 	bl	800205c <puts>
			return;
 8001064:	e00d      	b.n	8001082 <I2C_write_address+0x56>
	while(!(I2C1 -> SR1 & I2C_SR1_ADDR)) {
 8001066:	4b08      	ldr	r3, [pc, #32]	; (8001088 <I2C_write_address+0x5c>)
 8001068:	8a9b      	ldrh	r3, [r3, #20]
 800106a:	b29b      	uxth	r3, r3
 800106c:	f003 0302 	and.w	r3, r3, #2
 8001070:	2b00      	cmp	r3, #0
 8001072:	d0ee      	beq.n	8001052 <I2C_write_address+0x26>
			}
		}

	// Clear ADDR flag by reading SR1 and SR2
	(void)I2C1->SR1;
 8001074:	4b04      	ldr	r3, [pc, #16]	; (8001088 <I2C_write_address+0x5c>)
 8001076:	8a9b      	ldrh	r3, [r3, #20]
	(void)I2C1->SR2;
 8001078:	4b03      	ldr	r3, [pc, #12]	; (8001088 <I2C_write_address+0x5c>)
 800107a:	8b1b      	ldrh	r3, [r3, #24]

	printf("I2C address sent\n");
 800107c:	4805      	ldr	r0, [pc, #20]	; (8001094 <I2C_write_address+0x68>)
 800107e:	f000 ffed 	bl	800205c <puts>

}
 8001082:	3710      	adds	r7, #16
 8001084:	46bd      	mov	sp, r7
 8001086:	bd80      	pop	{r7, pc}
 8001088:	40005400 	.word	0x40005400
 800108c:	000186a0 	.word	0x000186a0
 8001090:	0800437c 	.word	0x0800437c
 8001094:	080043c0 	.word	0x080043c0

08001098 <I2C_write_data>:


// I2C data transmission
void I2C_write_data(uint8_t data){
 8001098:	b580      	push	{r7, lr}
 800109a:	b084      	sub	sp, #16
 800109c:	af00      	add	r7, sp, #0
 800109e:	4603      	mov	r3, r0
 80010a0:	71fb      	strb	r3, [r7, #7]

	uint32_t TXE_timeout = TIMEOUT;
 80010a2:	4b1a      	ldr	r3, [pc, #104]	; (800110c <I2C_write_data+0x74>)
 80010a4:	60fb      	str	r3, [r7, #12]
	// Keep looping till TXE flag is set (i.e. data register is empty)
	while(!(I2C1 -> SR1 & I2C_SR1_TXE)){
 80010a6:	e009      	b.n	80010bc <I2C_write_data+0x24>

		if(--TXE_timeout == 0){
 80010a8:	68fb      	ldr	r3, [r7, #12]
 80010aa:	3b01      	subs	r3, #1
 80010ac:	60fb      	str	r3, [r7, #12]
 80010ae:	68fb      	ldr	r3, [r7, #12]
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d103      	bne.n	80010bc <I2C_write_data+0x24>
			printf("Timeout waiting for TXE flag to be set in data transmission. \n");
 80010b4:	4816      	ldr	r0, [pc, #88]	; (8001110 <I2C_write_data+0x78>)
 80010b6:	f000 ffd1 	bl	800205c <puts>
			return;
 80010ba:	e023      	b.n	8001104 <I2C_write_data+0x6c>
	while(!(I2C1 -> SR1 & I2C_SR1_TXE)){
 80010bc:	4b15      	ldr	r3, [pc, #84]	; (8001114 <I2C_write_data+0x7c>)
 80010be:	8a9b      	ldrh	r3, [r3, #20]
 80010c0:	b29b      	uxth	r3, r3
 80010c2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d0ee      	beq.n	80010a8 <I2C_write_data+0x10>
		}
	}

	// Write data (TXE flag is cleared by writing DR register)
	I2C1 -> DR = data;
 80010ca:	4b12      	ldr	r3, [pc, #72]	; (8001114 <I2C_write_data+0x7c>)
 80010cc:	79fa      	ldrb	r2, [r7, #7]
 80010ce:	b292      	uxth	r2, r2
 80010d0:	821a      	strh	r2, [r3, #16]

	uint32_t BTF_timeout = TIMEOUT;
 80010d2:	4b0e      	ldr	r3, [pc, #56]	; (800110c <I2C_write_data+0x74>)
 80010d4:	60bb      	str	r3, [r7, #8]
	// Keep looping till BTF flag is set (i.e. byte transfer is finished)
	while(!(I2C1 -> SR1 & I2C_SR1_BTF)){
 80010d6:	e009      	b.n	80010ec <I2C_write_data+0x54>

		if (--BTF_timeout == 0){
 80010d8:	68bb      	ldr	r3, [r7, #8]
 80010da:	3b01      	subs	r3, #1
 80010dc:	60bb      	str	r3, [r7, #8]
 80010de:	68bb      	ldr	r3, [r7, #8]
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	d103      	bne.n	80010ec <I2C_write_data+0x54>
			printf("Timeout waiting for BEF flag to be set in data transmission. \n");
 80010e4:	480c      	ldr	r0, [pc, #48]	; (8001118 <I2C_write_data+0x80>)
 80010e6:	f000 ffb9 	bl	800205c <puts>
			return;
 80010ea:	e00b      	b.n	8001104 <I2C_write_data+0x6c>
	while(!(I2C1 -> SR1 & I2C_SR1_BTF)){
 80010ec:	4b09      	ldr	r3, [pc, #36]	; (8001114 <I2C_write_data+0x7c>)
 80010ee:	8a9b      	ldrh	r3, [r3, #20]
 80010f0:	b29b      	uxth	r3, r3
 80010f2:	f003 0304 	and.w	r3, r3, #4
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d0ee      	beq.n	80010d8 <I2C_write_data+0x40>
		}
	}

	printf("I2C data sent: 0x%02X\n", data);
 80010fa:	79fb      	ldrb	r3, [r7, #7]
 80010fc:	4619      	mov	r1, r3
 80010fe:	4807      	ldr	r0, [pc, #28]	; (800111c <I2C_write_data+0x84>)
 8001100:	f000 ff46 	bl	8001f90 <iprintf>

}
 8001104:	3710      	adds	r7, #16
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	000186a0 	.word	0x000186a0
 8001110:	080043d4 	.word	0x080043d4
 8001114:	40005400 	.word	0x40005400
 8001118:	08004414 	.word	0x08004414
 800111c:	08004454 	.word	0x08004454

08001120 <main>:
#include "i2c.h"
#include "adc.h"
#include "helper.h"
#include "oled.h"

int main(void) {
 8001120:	b580      	push	{r7, lr}
 8001122:	b088      	sub	sp, #32
 8001124:	af00      	add	r7, sp, #0
    // System initialization
    GPIO_init();
 8001126:	f7ff fdfd 	bl	8000d24 <GPIO_init>
    I2C_init();
 800112a:	f7ff ff0b 	bl	8000f44 <I2C_init>
    ADC_init();
 800112e:	f7ff fd3b 	bl	8000ba8 <ADC_init>
    OLED_init();
 8001132:	f000 f85f 	bl	80011f4 <OLED_init>
    start_ADC_conversion();
 8001136:	f7ff fd5d 	bl	8000bf4 <start_ADC_conversion>
    OLED_clear(); // Clear the display at the start
 800113a:	f000 f8a7 	bl	800128c <OLED_clear>

    const char* msg = "Smart Stove Monitor:)";
 800113e:	4b14      	ldr	r3, [pc, #80]	; (8001190 <main+0x70>)
 8001140:	61fb      	str	r3, [r7, #28]
    const char* temp_msg = "Current Temperature:";
 8001142:	4b14      	ldr	r3, [pc, #80]	; (8001194 <main+0x74>)
 8001144:	61bb      	str	r3, [r7, #24]
	OLED_set_cursor(0, 0);
 8001146:	2100      	movs	r1, #0
 8001148:	2000      	movs	r0, #0
 800114a:	f000 f8e3 	bl	8001314 <OLED_set_cursor>
	OLED_print_str(msg);
 800114e:	69f8      	ldr	r0, [r7, #28]
 8001150:	f000 f8b2 	bl	80012b8 <OLED_print_str>
	OLED_set_cursor(0, 2);
 8001154:	2102      	movs	r1, #2
 8001156:	2000      	movs	r0, #0
 8001158:	f000 f8dc 	bl	8001314 <OLED_set_cursor>
	OLED_print_str(temp_msg);
 800115c:	69b8      	ldr	r0, [r7, #24]
 800115e:	f000 f8ab 	bl	80012b8 <OLED_print_str>

    while (1) {

    	int temp = read_temp();
 8001162:	f7ff fdb7 	bl	8000cd4 <read_temp>
 8001166:	6178      	str	r0, [r7, #20]
    	char temp_str[16];
    	format_temp_str(temp, temp_str);
 8001168:	1d3b      	adds	r3, r7, #4
 800116a:	4619      	mov	r1, r3
 800116c:	6978      	ldr	r0, [r7, #20]
 800116e:	f7ff fed9 	bl	8000f24 <format_temp_str>
    	OLED_set_cursor(45, 5);
 8001172:	2105      	movs	r1, #5
 8001174:	202d      	movs	r0, #45	; 0x2d
 8001176:	f000 f8cd 	bl	8001314 <OLED_set_cursor>
    	OLED_clear();
 800117a:	f000 f887 	bl	800128c <OLED_clear>
    	OLED_print_str(temp_str);
 800117e:	1d3b      	adds	r3, r7, #4
 8001180:	4618      	mov	r0, r3
 8001182:	f000 f899 	bl	80012b8 <OLED_print_str>
    	timer_delay_ms(5000);
 8001186:	f241 3088 	movw	r0, #5000	; 0x1388
 800118a:	f7ff fe73 	bl	8000e74 <timer_delay_ms>
    while (1) {
 800118e:	e7e8      	b.n	8001162 <main+0x42>
 8001190:	0800446c 	.word	0x0800446c
 8001194:	08004484 	.word	0x08004484

08001198 <OLED_send_cmd>:

#define OLED_WIDTH 128
#define OLED_HEIGHT 64


void OLED_send_cmd(uint8_t cmd) {
 8001198:	b580      	push	{r7, lr}
 800119a:	b082      	sub	sp, #8
 800119c:	af00      	add	r7, sp, #0
 800119e:	4603      	mov	r3, r0
 80011a0:	71fb      	strb	r3, [r7, #7]
    I2C_start();
 80011a2:	f7ff feff 	bl	8000fa4 <I2C_start>
    I2C_write_address(OLED_ADDRESS);
 80011a6:	203c      	movs	r0, #60	; 0x3c
 80011a8:	f7ff ff40 	bl	800102c <I2C_write_address>
    I2C_write_data(OLED_CMD_BYTE);
 80011ac:	2000      	movs	r0, #0
 80011ae:	f7ff ff73 	bl	8001098 <I2C_write_data>
    I2C_write_data(cmd);
 80011b2:	79fb      	ldrb	r3, [r7, #7]
 80011b4:	4618      	mov	r0, r3
 80011b6:	f7ff ff6f 	bl	8001098 <I2C_write_data>
    I2C_stop();
 80011ba:	f7ff ff23 	bl	8001004 <I2C_stop>
}
 80011be:	bf00      	nop
 80011c0:	3708      	adds	r7, #8
 80011c2:	46bd      	mov	sp, r7
 80011c4:	bd80      	pop	{r7, pc}

080011c6 <OLED_send_data>:

void OLED_send_data(uint8_t data) {
 80011c6:	b580      	push	{r7, lr}
 80011c8:	b082      	sub	sp, #8
 80011ca:	af00      	add	r7, sp, #0
 80011cc:	4603      	mov	r3, r0
 80011ce:	71fb      	strb	r3, [r7, #7]
    I2C_start();
 80011d0:	f7ff fee8 	bl	8000fa4 <I2C_start>
    I2C_write_address(OLED_ADDRESS);
 80011d4:	203c      	movs	r0, #60	; 0x3c
 80011d6:	f7ff ff29 	bl	800102c <I2C_write_address>
    I2C_write_data(OLED_DATA_BYTE);
 80011da:	2040      	movs	r0, #64	; 0x40
 80011dc:	f7ff ff5c 	bl	8001098 <I2C_write_data>
    I2C_write_data(data);
 80011e0:	79fb      	ldrb	r3, [r7, #7]
 80011e2:	4618      	mov	r0, r3
 80011e4:	f7ff ff58 	bl	8001098 <I2C_write_data>
    I2C_stop();
 80011e8:	f7ff ff0c 	bl	8001004 <I2C_stop>
}
 80011ec:	bf00      	nop
 80011ee:	3708      	adds	r7, #8
 80011f0:	46bd      	mov	sp, r7
 80011f2:	bd80      	pop	{r7, pc}

080011f4 <OLED_init>:

void OLED_init(void) {
 80011f4:	b580      	push	{r7, lr}
 80011f6:	af00      	add	r7, sp, #0

    timer_delay_ms(100); // Ensure pwr is stable
 80011f8:	2064      	movs	r0, #100	; 0x64
 80011fa:	f7ff fe3b 	bl	8000e74 <timer_delay_ms>
    OLED_send_cmd(OLED_DISPLAY_OFF);
 80011fe:	20ae      	movs	r0, #174	; 0xae
 8001200:	f7ff ffca 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_MUX_RATIO);
 8001204:	20a8      	movs	r0, #168	; 0xa8
 8001206:	f7ff ffc7 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_MUX_RATIO_DEFAULT); // 1:64
 800120a:	203f      	movs	r0, #63	; 0x3f
 800120c:	f7ff ffc4 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_DISPLAY_OFFSET);
 8001210:	20d3      	movs	r0, #211	; 0xd3
 8001212:	f7ff ffc1 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_DISPLAY_OFFSET_DEFAULT); // No offset
 8001216:	2000      	movs	r0, #0
 8001218:	f7ff ffbe 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_DISPLAY_START_LINE_DEFAULT); // Start line 0
 800121c:	2040      	movs	r0, #64	; 0x40
 800121e:	f7ff ffbb 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_SEGMENT_REMAP_REMAPPED_MODE);
 8001222:	20a1      	movs	r0, #161	; 0xa1
 8001224:	f7ff ffb8 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_COM_OUTPUT_SCAN_DIRECTION_REMAPPED_MODE);
 8001228:	20c8      	movs	r0, #200	; 0xc8
 800122a:	f7ff ffb5 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_COM_PINS_HW_CONFIG);
 800122e:	20da      	movs	r0, #218	; 0xda
 8001230:	f7ff ffb2 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_COM_PINS_HW_CONFIG_SEQUENTIAL);
 8001234:	2012      	movs	r0, #18
 8001236:	f7ff ffaf 	bl	8001198 <OLED_send_cmd>

    OLED_send_cmd(OLED_SET_MEM_ADDR_MODE);
 800123a:	2020      	movs	r0, #32
 800123c:	f7ff ffac 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_MEM_ADDR_MODE_PAGE);
 8001240:	2002      	movs	r0, #2
 8001242:	f7ff ffa9 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_LOWER_COL_START_ADDR_DEFAULT);
 8001246:	2000      	movs	r0, #0
 8001248:	f7ff ffa6 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_HIGHER_COL_START_ADDR_DEFAULT);
 800124c:	2010      	movs	r0, #16
 800124e:	f7ff ffa3 	bl	8001198 <OLED_send_cmd>

    OLED_send_cmd(OLED_SET_CONTRAST_CTRL);
 8001252:	2081      	movs	r0, #129	; 0x81
 8001254:	f7ff ffa0 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_CONTRAST_CTRL_DEFAULT);
 8001258:	207f      	movs	r0, #127	; 0x7f
 800125a:	f7ff ff9d 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_ENTIRE_DISPLAY_ON);
 800125e:	20a4      	movs	r0, #164	; 0xa4
 8001260:	f7ff ff9a 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_NORMAL_DISPLAY);
 8001264:	20a6      	movs	r0, #166	; 0xa6
 8001266:	f7ff ff97 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_OSC_FREQ);
 800126a:	20d5      	movs	r0, #213	; 0xd5
 800126c:	f7ff ff94 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_OSC_FREQ_DEFAULT);
 8001270:	2080      	movs	r0, #128	; 0x80
 8001272:	f7ff ff91 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_SET_CHARGE_PUMP);
 8001276:	208d      	movs	r0, #141	; 0x8d
 8001278:	f7ff ff8e 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_ENABLE_CHARGE_PUMP);
 800127c:	2014      	movs	r0, #20
 800127e:	f7ff ff8b 	bl	8001198 <OLED_send_cmd>
    OLED_send_cmd(OLED_DISPLAY_ON);
 8001282:	20af      	movs	r0, #175	; 0xaf
 8001284:	f7ff ff88 	bl	8001198 <OLED_send_cmd>

}
 8001288:	bf00      	nop
 800128a:	bd80      	pop	{r7, pc}

0800128c <OLED_clear>:


// Clear entire display
void OLED_clear(void) {
 800128c:	b580      	push	{r7, lr}
 800128e:	b082      	sub	sp, #8
 8001290:	af00      	add	r7, sp, #0
	// Loop through the entire display
    for (uint16_t i = 0; i < OLED_WIDTH * OLED_HEIGHT / 8; i++) {
 8001292:	2300      	movs	r3, #0
 8001294:	80fb      	strh	r3, [r7, #6]
 8001296:	e005      	b.n	80012a4 <OLED_clear+0x18>
    	// Turn the pixel off
        OLED_send_data(0x00);
 8001298:	2000      	movs	r0, #0
 800129a:	f7ff ff94 	bl	80011c6 <OLED_send_data>
    for (uint16_t i = 0; i < OLED_WIDTH * OLED_HEIGHT / 8; i++) {
 800129e:	88fb      	ldrh	r3, [r7, #6]
 80012a0:	3301      	adds	r3, #1
 80012a2:	80fb      	strh	r3, [r7, #6]
 80012a4:	88fb      	ldrh	r3, [r7, #6]
 80012a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80012aa:	d3f5      	bcc.n	8001298 <OLED_clear+0xc>
    }
}
 80012ac:	bf00      	nop
 80012ae:	bf00      	nop
 80012b0:	3708      	adds	r7, #8
 80012b2:	46bd      	mov	sp, r7
 80012b4:	bd80      	pop	{r7, pc}
	...

080012b8 <OLED_print_str>:


void OLED_print_str(const char* str) {
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b084      	sub	sp, #16
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
	// Loop through all the chars pointed by str till '\0' is reached
    while (*str) {
 80012c0:	e01d      	b.n	80012fe <OLED_print_str+0x46>
    	// Loop through 5 columns defined in font array
        for (uint8_t i = 0; i < 5; i++) {
 80012c2:	2300      	movs	r3, #0
 80012c4:	73fb      	strb	r3, [r7, #15]
 80012c6:	e011      	b.n	80012ec <OLED_print_str+0x34>

        	// row 0 of the font array is 'space', which has ASCII number of 32
            OLED_send_data(font[*str - 32][i]);
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	781b      	ldrb	r3, [r3, #0]
 80012cc:	f1a3 0220 	sub.w	r2, r3, #32
 80012d0:	7bf9      	ldrb	r1, [r7, #15]
 80012d2:	480f      	ldr	r0, [pc, #60]	; (8001310 <OLED_print_str+0x58>)
 80012d4:	4613      	mov	r3, r2
 80012d6:	009b      	lsls	r3, r3, #2
 80012d8:	4413      	add	r3, r2
 80012da:	4403      	add	r3, r0
 80012dc:	440b      	add	r3, r1
 80012de:	781b      	ldrb	r3, [r3, #0]
 80012e0:	4618      	mov	r0, r3
 80012e2:	f7ff ff70 	bl	80011c6 <OLED_send_data>
        for (uint8_t i = 0; i < 5; i++) {
 80012e6:	7bfb      	ldrb	r3, [r7, #15]
 80012e8:	3301      	adds	r3, #1
 80012ea:	73fb      	strb	r3, [r7, #15]
 80012ec:	7bfb      	ldrb	r3, [r7, #15]
 80012ee:	2b04      	cmp	r3, #4
 80012f0:	d9ea      	bls.n	80012c8 <OLED_print_str+0x10>
        }
        // Add space between each character
        OLED_send_data(0x00);
 80012f2:	2000      	movs	r0, #0
 80012f4:	f7ff ff67 	bl	80011c6 <OLED_send_data>
        str++;
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	3301      	adds	r3, #1
 80012fc:	607b      	str	r3, [r7, #4]
    while (*str) {
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	781b      	ldrb	r3, [r3, #0]
 8001302:	2b00      	cmp	r3, #0
 8001304:	d1dd      	bne.n	80012c2 <OLED_print_str+0xa>
    }
}
 8001306:	bf00      	nop
 8001308:	bf00      	nop
 800130a:	3710      	adds	r7, #16
 800130c:	46bd      	mov	sp, r7
 800130e:	bd80      	pop	{r7, pc}
 8001310:	0800449c 	.word	0x0800449c

08001314 <OLED_set_cursor>:


// Set cursor position for where the next data byte will be written
// Note: GDDRAM has a total of 7 pages with 8 rows & 128 columns per page
void OLED_set_cursor(uint8_t col, uint8_t page) {
 8001314:	b580      	push	{r7, lr}
 8001316:	b082      	sub	sp, #8
 8001318:	af00      	add	r7, sp, #0
 800131a:	4603      	mov	r3, r0
 800131c:	460a      	mov	r2, r1
 800131e:	71fb      	strb	r3, [r7, #7]
 8001320:	4613      	mov	r3, r2
 8001322:	71bb      	strb	r3, [r7, #6]
    OLED_send_cmd(OLED_SET_PAGE_START_ADDR_0 + page);
 8001324:	79bb      	ldrb	r3, [r7, #6]
 8001326:	3b50      	subs	r3, #80	; 0x50
 8001328:	b2db      	uxtb	r3, r3
 800132a:	4618      	mov	r0, r3
 800132c:	f7ff ff34 	bl	8001198 <OLED_send_cmd>

    // Set higher col start address (higher nibble)
    OLED_send_cmd(((col & 0xF0) >> 4) | OLED_SET_HIGHER_COL_START_ADDR_DEFAULT);
 8001330:	79fb      	ldrb	r3, [r7, #7]
 8001332:	091b      	lsrs	r3, r3, #4
 8001334:	b2db      	uxtb	r3, r3
 8001336:	f043 0310 	orr.w	r3, r3, #16
 800133a:	b2db      	uxtb	r3, r3
 800133c:	4618      	mov	r0, r3
 800133e:	f7ff ff2b 	bl	8001198 <OLED_send_cmd>

    // Set lower col start address (lower nibble)
    OLED_send_cmd((col & 0x0F) | OLED_SET_LOWER_COL_START_ADDR_DEFAULT);
 8001342:	79fb      	ldrb	r3, [r7, #7]
 8001344:	f003 030f 	and.w	r3, r3, #15
 8001348:	b2db      	uxtb	r3, r3
 800134a:	4618      	mov	r0, r3
 800134c:	f7ff ff24 	bl	8001198 <OLED_send_cmd>
}
 8001350:	bf00      	nop
 8001352:	3708      	adds	r7, #8
 8001354:	46bd      	mov	sp, r7
 8001356:	bd80      	pop	{r7, pc}

08001358 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001358:	b480      	push	{r7}
 800135a:	af00      	add	r7, sp, #0
  return 1;
 800135c:	2301      	movs	r3, #1
}
 800135e:	4618      	mov	r0, r3
 8001360:	46bd      	mov	sp, r7
 8001362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001366:	4770      	bx	lr

08001368 <_kill>:

int _kill(int pid, int sig)
{
 8001368:	b580      	push	{r7, lr}
 800136a:	b082      	sub	sp, #8
 800136c:	af00      	add	r7, sp, #0
 800136e:	6078      	str	r0, [r7, #4]
 8001370:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001372:	f000 fe87 	bl	8002084 <__errno>
 8001376:	4603      	mov	r3, r0
 8001378:	2216      	movs	r2, #22
 800137a:	601a      	str	r2, [r3, #0]
  return -1;
 800137c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8001380:	4618      	mov	r0, r3
 8001382:	3708      	adds	r7, #8
 8001384:	46bd      	mov	sp, r7
 8001386:	bd80      	pop	{r7, pc}

08001388 <_exit>:

void _exit (int status)
{
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001390:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001394:	6878      	ldr	r0, [r7, #4]
 8001396:	f7ff ffe7 	bl	8001368 <_kill>
  while (1) {}    /* Make sure we hang here */
 800139a:	e7fe      	b.n	800139a <_exit+0x12>

0800139c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800139c:	b580      	push	{r7, lr}
 800139e:	b086      	sub	sp, #24
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	60f8      	str	r0, [r7, #12]
 80013a4:	60b9      	str	r1, [r7, #8]
 80013a6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013a8:	2300      	movs	r3, #0
 80013aa:	617b      	str	r3, [r7, #20]
 80013ac:	e00a      	b.n	80013c4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80013ae:	f3af 8000 	nop.w
 80013b2:	4601      	mov	r1, r0
 80013b4:	68bb      	ldr	r3, [r7, #8]
 80013b6:	1c5a      	adds	r2, r3, #1
 80013b8:	60ba      	str	r2, [r7, #8]
 80013ba:	b2ca      	uxtb	r2, r1
 80013bc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013be:	697b      	ldr	r3, [r7, #20]
 80013c0:	3301      	adds	r3, #1
 80013c2:	617b      	str	r3, [r7, #20]
 80013c4:	697a      	ldr	r2, [r7, #20]
 80013c6:	687b      	ldr	r3, [r7, #4]
 80013c8:	429a      	cmp	r2, r3
 80013ca:	dbf0      	blt.n	80013ae <_read+0x12>
  }

  return len;
 80013cc:	687b      	ldr	r3, [r7, #4]
}
 80013ce:	4618      	mov	r0, r3
 80013d0:	3718      	adds	r7, #24
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bd80      	pop	{r7, pc}

080013d6 <_close>:
  }
  return len;
}

int _close(int file)
{
 80013d6:	b480      	push	{r7}
 80013d8:	b083      	sub	sp, #12
 80013da:	af00      	add	r7, sp, #0
 80013dc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80013de:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80013e2:	4618      	mov	r0, r3
 80013e4:	370c      	adds	r7, #12
 80013e6:	46bd      	mov	sp, r7
 80013e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ec:	4770      	bx	lr

080013ee <_fstat>:


int _fstat(int file, struct stat *st)
{
 80013ee:	b480      	push	{r7}
 80013f0:	b083      	sub	sp, #12
 80013f2:	af00      	add	r7, sp, #0
 80013f4:	6078      	str	r0, [r7, #4]
 80013f6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80013f8:	683b      	ldr	r3, [r7, #0]
 80013fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80013fe:	605a      	str	r2, [r3, #4]
  return 0;
 8001400:	2300      	movs	r3, #0
}
 8001402:	4618      	mov	r0, r3
 8001404:	370c      	adds	r7, #12
 8001406:	46bd      	mov	sp, r7
 8001408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800140c:	4770      	bx	lr

0800140e <_isatty>:

int _isatty(int file)
{
 800140e:	b480      	push	{r7}
 8001410:	b083      	sub	sp, #12
 8001412:	af00      	add	r7, sp, #0
 8001414:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001416:	2301      	movs	r3, #1
}
 8001418:	4618      	mov	r0, r3
 800141a:	370c      	adds	r7, #12
 800141c:	46bd      	mov	sp, r7
 800141e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001422:	4770      	bx	lr

08001424 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001424:	b480      	push	{r7}
 8001426:	b085      	sub	sp, #20
 8001428:	af00      	add	r7, sp, #0
 800142a:	60f8      	str	r0, [r7, #12]
 800142c:	60b9      	str	r1, [r7, #8]
 800142e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001430:	2300      	movs	r3, #0
}
 8001432:	4618      	mov	r0, r3
 8001434:	3714      	adds	r7, #20
 8001436:	46bd      	mov	sp, r7
 8001438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800143c:	4770      	bx	lr
	...

08001440 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001440:	b580      	push	{r7, lr}
 8001442:	b086      	sub	sp, #24
 8001444:	af00      	add	r7, sp, #0
 8001446:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001448:	4a14      	ldr	r2, [pc, #80]	; (800149c <_sbrk+0x5c>)
 800144a:	4b15      	ldr	r3, [pc, #84]	; (80014a0 <_sbrk+0x60>)
 800144c:	1ad3      	subs	r3, r2, r3
 800144e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001450:	697b      	ldr	r3, [r7, #20]
 8001452:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001454:	4b13      	ldr	r3, [pc, #76]	; (80014a4 <_sbrk+0x64>)
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	2b00      	cmp	r3, #0
 800145a:	d102      	bne.n	8001462 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800145c:	4b11      	ldr	r3, [pc, #68]	; (80014a4 <_sbrk+0x64>)
 800145e:	4a12      	ldr	r2, [pc, #72]	; (80014a8 <_sbrk+0x68>)
 8001460:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001462:	4b10      	ldr	r3, [pc, #64]	; (80014a4 <_sbrk+0x64>)
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	4413      	add	r3, r2
 800146a:	693a      	ldr	r2, [r7, #16]
 800146c:	429a      	cmp	r2, r3
 800146e:	d207      	bcs.n	8001480 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001470:	f000 fe08 	bl	8002084 <__errno>
 8001474:	4603      	mov	r3, r0
 8001476:	220c      	movs	r2, #12
 8001478:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800147a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800147e:	e009      	b.n	8001494 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001480:	4b08      	ldr	r3, [pc, #32]	; (80014a4 <_sbrk+0x64>)
 8001482:	681b      	ldr	r3, [r3, #0]
 8001484:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001486:	4b07      	ldr	r3, [pc, #28]	; (80014a4 <_sbrk+0x64>)
 8001488:	681a      	ldr	r2, [r3, #0]
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	4413      	add	r3, r2
 800148e:	4a05      	ldr	r2, [pc, #20]	; (80014a4 <_sbrk+0x64>)
 8001490:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001492:	68fb      	ldr	r3, [r7, #12]
}
 8001494:	4618      	mov	r0, r3
 8001496:	3718      	adds	r7, #24
 8001498:	46bd      	mov	sp, r7
 800149a:	bd80      	pop	{r7, pc}
 800149c:	20020000 	.word	0x20020000
 80014a0:	00000400 	.word	0x00000400
 80014a4:	200001e4 	.word	0x200001e4
 80014a8:	20000338 	.word	0x20000338

080014ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80014ac:	480d      	ldr	r0, [pc, #52]	; (80014e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80014ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80014b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80014b4:	480c      	ldr	r0, [pc, #48]	; (80014e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80014b6:	490d      	ldr	r1, [pc, #52]	; (80014ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80014b8:	4a0d      	ldr	r2, [pc, #52]	; (80014f0 <LoopForever+0xe>)
  movs r3, #0
 80014ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80014bc:	e002      	b.n	80014c4 <LoopCopyDataInit>

080014be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80014be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80014c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80014c2:	3304      	adds	r3, #4

080014c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80014c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80014c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80014c8:	d3f9      	bcc.n	80014be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80014ca:	4a0a      	ldr	r2, [pc, #40]	; (80014f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80014cc:	4c0a      	ldr	r4, [pc, #40]	; (80014f8 <LoopForever+0x16>)
  movs r3, #0
 80014ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80014d0:	e001      	b.n	80014d6 <LoopFillZerobss>

080014d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80014d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80014d4:	3204      	adds	r2, #4

080014d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80014d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80014d8:	d3fb      	bcc.n	80014d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80014da:	f000 fdd9 	bl	8002090 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80014de:	f7ff fe1f 	bl	8001120 <main>

080014e2 <LoopForever>:

LoopForever:
  b LoopForever
 80014e2:	e7fe      	b.n	80014e2 <LoopForever>
  ldr   r0, =_estack
 80014e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80014e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80014ec:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80014f0:	080049f4 	.word	0x080049f4
  ldr r2, =_sbss
 80014f4:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80014f8:	20000334 	.word	0x20000334

080014fc <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80014fc:	e7fe      	b.n	80014fc <BusFault_Handler>

080014fe <__cvt>:
 80014fe:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001502:	ec55 4b10 	vmov	r4, r5, d0
 8001506:	2d00      	cmp	r5, #0
 8001508:	460e      	mov	r6, r1
 800150a:	4619      	mov	r1, r3
 800150c:	462b      	mov	r3, r5
 800150e:	bfbb      	ittet	lt
 8001510:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001514:	461d      	movlt	r5, r3
 8001516:	2300      	movge	r3, #0
 8001518:	232d      	movlt	r3, #45	; 0x2d
 800151a:	700b      	strb	r3, [r1, #0]
 800151c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800151e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001522:	4691      	mov	r9, r2
 8001524:	f023 0820 	bic.w	r8, r3, #32
 8001528:	bfbc      	itt	lt
 800152a:	4622      	movlt	r2, r4
 800152c:	4614      	movlt	r4, r2
 800152e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001532:	d005      	beq.n	8001540 <__cvt+0x42>
 8001534:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001538:	d100      	bne.n	800153c <__cvt+0x3e>
 800153a:	3601      	adds	r6, #1
 800153c:	2102      	movs	r1, #2
 800153e:	e000      	b.n	8001542 <__cvt+0x44>
 8001540:	2103      	movs	r1, #3
 8001542:	ab03      	add	r3, sp, #12
 8001544:	9301      	str	r3, [sp, #4]
 8001546:	ab02      	add	r3, sp, #8
 8001548:	9300      	str	r3, [sp, #0]
 800154a:	ec45 4b10 	vmov	d0, r4, r5
 800154e:	4653      	mov	r3, sl
 8001550:	4632      	mov	r2, r6
 8001552:	f000 fe4d 	bl	80021f0 <_dtoa_r>
 8001556:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800155a:	4607      	mov	r7, r0
 800155c:	d102      	bne.n	8001564 <__cvt+0x66>
 800155e:	f019 0f01 	tst.w	r9, #1
 8001562:	d022      	beq.n	80015aa <__cvt+0xac>
 8001564:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001568:	eb07 0906 	add.w	r9, r7, r6
 800156c:	d110      	bne.n	8001590 <__cvt+0x92>
 800156e:	783b      	ldrb	r3, [r7, #0]
 8001570:	2b30      	cmp	r3, #48	; 0x30
 8001572:	d10a      	bne.n	800158a <__cvt+0x8c>
 8001574:	2200      	movs	r2, #0
 8001576:	2300      	movs	r3, #0
 8001578:	4620      	mov	r0, r4
 800157a:	4629      	mov	r1, r5
 800157c:	f7ff faa4 	bl	8000ac8 <__aeabi_dcmpeq>
 8001580:	b918      	cbnz	r0, 800158a <__cvt+0x8c>
 8001582:	f1c6 0601 	rsb	r6, r6, #1
 8001586:	f8ca 6000 	str.w	r6, [sl]
 800158a:	f8da 3000 	ldr.w	r3, [sl]
 800158e:	4499      	add	r9, r3
 8001590:	2200      	movs	r2, #0
 8001592:	2300      	movs	r3, #0
 8001594:	4620      	mov	r0, r4
 8001596:	4629      	mov	r1, r5
 8001598:	f7ff fa96 	bl	8000ac8 <__aeabi_dcmpeq>
 800159c:	b108      	cbz	r0, 80015a2 <__cvt+0xa4>
 800159e:	f8cd 900c 	str.w	r9, [sp, #12]
 80015a2:	2230      	movs	r2, #48	; 0x30
 80015a4:	9b03      	ldr	r3, [sp, #12]
 80015a6:	454b      	cmp	r3, r9
 80015a8:	d307      	bcc.n	80015ba <__cvt+0xbc>
 80015aa:	9b03      	ldr	r3, [sp, #12]
 80015ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80015ae:	1bdb      	subs	r3, r3, r7
 80015b0:	4638      	mov	r0, r7
 80015b2:	6013      	str	r3, [r2, #0]
 80015b4:	b004      	add	sp, #16
 80015b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80015ba:	1c59      	adds	r1, r3, #1
 80015bc:	9103      	str	r1, [sp, #12]
 80015be:	701a      	strb	r2, [r3, #0]
 80015c0:	e7f0      	b.n	80015a4 <__cvt+0xa6>

080015c2 <__exponent>:
 80015c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015c4:	4603      	mov	r3, r0
 80015c6:	2900      	cmp	r1, #0
 80015c8:	bfb8      	it	lt
 80015ca:	4249      	neglt	r1, r1
 80015cc:	f803 2b02 	strb.w	r2, [r3], #2
 80015d0:	bfb4      	ite	lt
 80015d2:	222d      	movlt	r2, #45	; 0x2d
 80015d4:	222b      	movge	r2, #43	; 0x2b
 80015d6:	2909      	cmp	r1, #9
 80015d8:	7042      	strb	r2, [r0, #1]
 80015da:	dd2a      	ble.n	8001632 <__exponent+0x70>
 80015dc:	f10d 0207 	add.w	r2, sp, #7
 80015e0:	4617      	mov	r7, r2
 80015e2:	260a      	movs	r6, #10
 80015e4:	4694      	mov	ip, r2
 80015e6:	fb91 f5f6 	sdiv	r5, r1, r6
 80015ea:	fb06 1415 	mls	r4, r6, r5, r1
 80015ee:	3430      	adds	r4, #48	; 0x30
 80015f0:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80015f4:	460c      	mov	r4, r1
 80015f6:	2c63      	cmp	r4, #99	; 0x63
 80015f8:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80015fc:	4629      	mov	r1, r5
 80015fe:	dcf1      	bgt.n	80015e4 <__exponent+0x22>
 8001600:	3130      	adds	r1, #48	; 0x30
 8001602:	f1ac 0402 	sub.w	r4, ip, #2
 8001606:	f802 1c01 	strb.w	r1, [r2, #-1]
 800160a:	1c41      	adds	r1, r0, #1
 800160c:	4622      	mov	r2, r4
 800160e:	42ba      	cmp	r2, r7
 8001610:	d30a      	bcc.n	8001628 <__exponent+0x66>
 8001612:	f10d 0209 	add.w	r2, sp, #9
 8001616:	eba2 020c 	sub.w	r2, r2, ip
 800161a:	42bc      	cmp	r4, r7
 800161c:	bf88      	it	hi
 800161e:	2200      	movhi	r2, #0
 8001620:	4413      	add	r3, r2
 8001622:	1a18      	subs	r0, r3, r0
 8001624:	b003      	add	sp, #12
 8001626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001628:	f812 5b01 	ldrb.w	r5, [r2], #1
 800162c:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001630:	e7ed      	b.n	800160e <__exponent+0x4c>
 8001632:	2330      	movs	r3, #48	; 0x30
 8001634:	3130      	adds	r1, #48	; 0x30
 8001636:	7083      	strb	r3, [r0, #2]
 8001638:	70c1      	strb	r1, [r0, #3]
 800163a:	1d03      	adds	r3, r0, #4
 800163c:	e7f1      	b.n	8001622 <__exponent+0x60>
	...

08001640 <_printf_float>:
 8001640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001644:	ed2d 8b02 	vpush	{d8}
 8001648:	b08d      	sub	sp, #52	; 0x34
 800164a:	460c      	mov	r4, r1
 800164c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001650:	4616      	mov	r6, r2
 8001652:	461f      	mov	r7, r3
 8001654:	4605      	mov	r5, r0
 8001656:	f000 fd11 	bl	800207c <_localeconv_r>
 800165a:	f8d0 a000 	ldr.w	sl, [r0]
 800165e:	4650      	mov	r0, sl
 8001660:	f7fe fe06 	bl	8000270 <strlen>
 8001664:	2300      	movs	r3, #0
 8001666:	930a      	str	r3, [sp, #40]	; 0x28
 8001668:	6823      	ldr	r3, [r4, #0]
 800166a:	9305      	str	r3, [sp, #20]
 800166c:	f8d8 3000 	ldr.w	r3, [r8]
 8001670:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001674:	3307      	adds	r3, #7
 8001676:	f023 0307 	bic.w	r3, r3, #7
 800167a:	f103 0208 	add.w	r2, r3, #8
 800167e:	f8c8 2000 	str.w	r2, [r8]
 8001682:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001686:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800168a:	9307      	str	r3, [sp, #28]
 800168c:	f8cd 8018 	str.w	r8, [sp, #24]
 8001690:	ee08 0a10 	vmov	s16, r0
 8001694:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001698:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800169c:	4b9e      	ldr	r3, [pc, #632]	; (8001918 <_printf_float+0x2d8>)
 800169e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80016a2:	f7ff fa43 	bl	8000b2c <__aeabi_dcmpun>
 80016a6:	bb88      	cbnz	r0, 800170c <_printf_float+0xcc>
 80016a8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80016ac:	4b9a      	ldr	r3, [pc, #616]	; (8001918 <_printf_float+0x2d8>)
 80016ae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80016b2:	f7ff fa1d 	bl	8000af0 <__aeabi_dcmple>
 80016b6:	bb48      	cbnz	r0, 800170c <_printf_float+0xcc>
 80016b8:	2200      	movs	r2, #0
 80016ba:	2300      	movs	r3, #0
 80016bc:	4640      	mov	r0, r8
 80016be:	4649      	mov	r1, r9
 80016c0:	f7ff fa0c 	bl	8000adc <__aeabi_dcmplt>
 80016c4:	b110      	cbz	r0, 80016cc <_printf_float+0x8c>
 80016c6:	232d      	movs	r3, #45	; 0x2d
 80016c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016cc:	4a93      	ldr	r2, [pc, #588]	; (800191c <_printf_float+0x2dc>)
 80016ce:	4b94      	ldr	r3, [pc, #592]	; (8001920 <_printf_float+0x2e0>)
 80016d0:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80016d4:	bf94      	ite	ls
 80016d6:	4690      	movls	r8, r2
 80016d8:	4698      	movhi	r8, r3
 80016da:	2303      	movs	r3, #3
 80016dc:	6123      	str	r3, [r4, #16]
 80016de:	9b05      	ldr	r3, [sp, #20]
 80016e0:	f023 0304 	bic.w	r3, r3, #4
 80016e4:	6023      	str	r3, [r4, #0]
 80016e6:	f04f 0900 	mov.w	r9, #0
 80016ea:	9700      	str	r7, [sp, #0]
 80016ec:	4633      	mov	r3, r6
 80016ee:	aa0b      	add	r2, sp, #44	; 0x2c
 80016f0:	4621      	mov	r1, r4
 80016f2:	4628      	mov	r0, r5
 80016f4:	f000 f9da 	bl	8001aac <_printf_common>
 80016f8:	3001      	adds	r0, #1
 80016fa:	f040 8090 	bne.w	800181e <_printf_float+0x1de>
 80016fe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001702:	b00d      	add	sp, #52	; 0x34
 8001704:	ecbd 8b02 	vpop	{d8}
 8001708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800170c:	4642      	mov	r2, r8
 800170e:	464b      	mov	r3, r9
 8001710:	4640      	mov	r0, r8
 8001712:	4649      	mov	r1, r9
 8001714:	f7ff fa0a 	bl	8000b2c <__aeabi_dcmpun>
 8001718:	b140      	cbz	r0, 800172c <_printf_float+0xec>
 800171a:	464b      	mov	r3, r9
 800171c:	2b00      	cmp	r3, #0
 800171e:	bfbc      	itt	lt
 8001720:	232d      	movlt	r3, #45	; 0x2d
 8001722:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001726:	4a7f      	ldr	r2, [pc, #508]	; (8001924 <_printf_float+0x2e4>)
 8001728:	4b7f      	ldr	r3, [pc, #508]	; (8001928 <_printf_float+0x2e8>)
 800172a:	e7d1      	b.n	80016d0 <_printf_float+0x90>
 800172c:	6863      	ldr	r3, [r4, #4]
 800172e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001732:	9206      	str	r2, [sp, #24]
 8001734:	1c5a      	adds	r2, r3, #1
 8001736:	d13f      	bne.n	80017b8 <_printf_float+0x178>
 8001738:	2306      	movs	r3, #6
 800173a:	6063      	str	r3, [r4, #4]
 800173c:	9b05      	ldr	r3, [sp, #20]
 800173e:	6861      	ldr	r1, [r4, #4]
 8001740:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001744:	2300      	movs	r3, #0
 8001746:	9303      	str	r3, [sp, #12]
 8001748:	ab0a      	add	r3, sp, #40	; 0x28
 800174a:	e9cd b301 	strd	fp, r3, [sp, #4]
 800174e:	ab09      	add	r3, sp, #36	; 0x24
 8001750:	ec49 8b10 	vmov	d0, r8, r9
 8001754:	9300      	str	r3, [sp, #0]
 8001756:	6022      	str	r2, [r4, #0]
 8001758:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800175c:	4628      	mov	r0, r5
 800175e:	f7ff fece 	bl	80014fe <__cvt>
 8001762:	9b06      	ldr	r3, [sp, #24]
 8001764:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001766:	2b47      	cmp	r3, #71	; 0x47
 8001768:	4680      	mov	r8, r0
 800176a:	d108      	bne.n	800177e <_printf_float+0x13e>
 800176c:	1cc8      	adds	r0, r1, #3
 800176e:	db02      	blt.n	8001776 <_printf_float+0x136>
 8001770:	6863      	ldr	r3, [r4, #4]
 8001772:	4299      	cmp	r1, r3
 8001774:	dd41      	ble.n	80017fa <_printf_float+0x1ba>
 8001776:	f1ab 0302 	sub.w	r3, fp, #2
 800177a:	fa5f fb83 	uxtb.w	fp, r3
 800177e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001782:	d820      	bhi.n	80017c6 <_printf_float+0x186>
 8001784:	3901      	subs	r1, #1
 8001786:	465a      	mov	r2, fp
 8001788:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800178c:	9109      	str	r1, [sp, #36]	; 0x24
 800178e:	f7ff ff18 	bl	80015c2 <__exponent>
 8001792:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001794:	1813      	adds	r3, r2, r0
 8001796:	2a01      	cmp	r2, #1
 8001798:	4681      	mov	r9, r0
 800179a:	6123      	str	r3, [r4, #16]
 800179c:	dc02      	bgt.n	80017a4 <_printf_float+0x164>
 800179e:	6822      	ldr	r2, [r4, #0]
 80017a0:	07d2      	lsls	r2, r2, #31
 80017a2:	d501      	bpl.n	80017a8 <_printf_float+0x168>
 80017a4:	3301      	adds	r3, #1
 80017a6:	6123      	str	r3, [r4, #16]
 80017a8:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80017ac:	2b00      	cmp	r3, #0
 80017ae:	d09c      	beq.n	80016ea <_printf_float+0xaa>
 80017b0:	232d      	movs	r3, #45	; 0x2d
 80017b2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80017b6:	e798      	b.n	80016ea <_printf_float+0xaa>
 80017b8:	9a06      	ldr	r2, [sp, #24]
 80017ba:	2a47      	cmp	r2, #71	; 0x47
 80017bc:	d1be      	bne.n	800173c <_printf_float+0xfc>
 80017be:	2b00      	cmp	r3, #0
 80017c0:	d1bc      	bne.n	800173c <_printf_float+0xfc>
 80017c2:	2301      	movs	r3, #1
 80017c4:	e7b9      	b.n	800173a <_printf_float+0xfa>
 80017c6:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80017ca:	d118      	bne.n	80017fe <_printf_float+0x1be>
 80017cc:	2900      	cmp	r1, #0
 80017ce:	6863      	ldr	r3, [r4, #4]
 80017d0:	dd0b      	ble.n	80017ea <_printf_float+0x1aa>
 80017d2:	6121      	str	r1, [r4, #16]
 80017d4:	b913      	cbnz	r3, 80017dc <_printf_float+0x19c>
 80017d6:	6822      	ldr	r2, [r4, #0]
 80017d8:	07d0      	lsls	r0, r2, #31
 80017da:	d502      	bpl.n	80017e2 <_printf_float+0x1a2>
 80017dc:	3301      	adds	r3, #1
 80017de:	440b      	add	r3, r1
 80017e0:	6123      	str	r3, [r4, #16]
 80017e2:	65a1      	str	r1, [r4, #88]	; 0x58
 80017e4:	f04f 0900 	mov.w	r9, #0
 80017e8:	e7de      	b.n	80017a8 <_printf_float+0x168>
 80017ea:	b913      	cbnz	r3, 80017f2 <_printf_float+0x1b2>
 80017ec:	6822      	ldr	r2, [r4, #0]
 80017ee:	07d2      	lsls	r2, r2, #31
 80017f0:	d501      	bpl.n	80017f6 <_printf_float+0x1b6>
 80017f2:	3302      	adds	r3, #2
 80017f4:	e7f4      	b.n	80017e0 <_printf_float+0x1a0>
 80017f6:	2301      	movs	r3, #1
 80017f8:	e7f2      	b.n	80017e0 <_printf_float+0x1a0>
 80017fa:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80017fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001800:	4299      	cmp	r1, r3
 8001802:	db05      	blt.n	8001810 <_printf_float+0x1d0>
 8001804:	6823      	ldr	r3, [r4, #0]
 8001806:	6121      	str	r1, [r4, #16]
 8001808:	07d8      	lsls	r0, r3, #31
 800180a:	d5ea      	bpl.n	80017e2 <_printf_float+0x1a2>
 800180c:	1c4b      	adds	r3, r1, #1
 800180e:	e7e7      	b.n	80017e0 <_printf_float+0x1a0>
 8001810:	2900      	cmp	r1, #0
 8001812:	bfd4      	ite	le
 8001814:	f1c1 0202 	rsble	r2, r1, #2
 8001818:	2201      	movgt	r2, #1
 800181a:	4413      	add	r3, r2
 800181c:	e7e0      	b.n	80017e0 <_printf_float+0x1a0>
 800181e:	6823      	ldr	r3, [r4, #0]
 8001820:	055a      	lsls	r2, r3, #21
 8001822:	d407      	bmi.n	8001834 <_printf_float+0x1f4>
 8001824:	6923      	ldr	r3, [r4, #16]
 8001826:	4642      	mov	r2, r8
 8001828:	4631      	mov	r1, r6
 800182a:	4628      	mov	r0, r5
 800182c:	47b8      	blx	r7
 800182e:	3001      	adds	r0, #1
 8001830:	d12c      	bne.n	800188c <_printf_float+0x24c>
 8001832:	e764      	b.n	80016fe <_printf_float+0xbe>
 8001834:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001838:	f240 80e0 	bls.w	80019fc <_printf_float+0x3bc>
 800183c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001840:	2200      	movs	r2, #0
 8001842:	2300      	movs	r3, #0
 8001844:	f7ff f940 	bl	8000ac8 <__aeabi_dcmpeq>
 8001848:	2800      	cmp	r0, #0
 800184a:	d034      	beq.n	80018b6 <_printf_float+0x276>
 800184c:	4a37      	ldr	r2, [pc, #220]	; (800192c <_printf_float+0x2ec>)
 800184e:	2301      	movs	r3, #1
 8001850:	4631      	mov	r1, r6
 8001852:	4628      	mov	r0, r5
 8001854:	47b8      	blx	r7
 8001856:	3001      	adds	r0, #1
 8001858:	f43f af51 	beq.w	80016fe <_printf_float+0xbe>
 800185c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001860:	429a      	cmp	r2, r3
 8001862:	db02      	blt.n	800186a <_printf_float+0x22a>
 8001864:	6823      	ldr	r3, [r4, #0]
 8001866:	07d8      	lsls	r0, r3, #31
 8001868:	d510      	bpl.n	800188c <_printf_float+0x24c>
 800186a:	ee18 3a10 	vmov	r3, s16
 800186e:	4652      	mov	r2, sl
 8001870:	4631      	mov	r1, r6
 8001872:	4628      	mov	r0, r5
 8001874:	47b8      	blx	r7
 8001876:	3001      	adds	r0, #1
 8001878:	f43f af41 	beq.w	80016fe <_printf_float+0xbe>
 800187c:	f04f 0800 	mov.w	r8, #0
 8001880:	f104 091a 	add.w	r9, r4, #26
 8001884:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001886:	3b01      	subs	r3, #1
 8001888:	4543      	cmp	r3, r8
 800188a:	dc09      	bgt.n	80018a0 <_printf_float+0x260>
 800188c:	6823      	ldr	r3, [r4, #0]
 800188e:	079b      	lsls	r3, r3, #30
 8001890:	f100 8107 	bmi.w	8001aa2 <_printf_float+0x462>
 8001894:	68e0      	ldr	r0, [r4, #12]
 8001896:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001898:	4298      	cmp	r0, r3
 800189a:	bfb8      	it	lt
 800189c:	4618      	movlt	r0, r3
 800189e:	e730      	b.n	8001702 <_printf_float+0xc2>
 80018a0:	2301      	movs	r3, #1
 80018a2:	464a      	mov	r2, r9
 80018a4:	4631      	mov	r1, r6
 80018a6:	4628      	mov	r0, r5
 80018a8:	47b8      	blx	r7
 80018aa:	3001      	adds	r0, #1
 80018ac:	f43f af27 	beq.w	80016fe <_printf_float+0xbe>
 80018b0:	f108 0801 	add.w	r8, r8, #1
 80018b4:	e7e6      	b.n	8001884 <_printf_float+0x244>
 80018b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	dc39      	bgt.n	8001930 <_printf_float+0x2f0>
 80018bc:	4a1b      	ldr	r2, [pc, #108]	; (800192c <_printf_float+0x2ec>)
 80018be:	2301      	movs	r3, #1
 80018c0:	4631      	mov	r1, r6
 80018c2:	4628      	mov	r0, r5
 80018c4:	47b8      	blx	r7
 80018c6:	3001      	adds	r0, #1
 80018c8:	f43f af19 	beq.w	80016fe <_printf_float+0xbe>
 80018cc:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80018d0:	4313      	orrs	r3, r2
 80018d2:	d102      	bne.n	80018da <_printf_float+0x29a>
 80018d4:	6823      	ldr	r3, [r4, #0]
 80018d6:	07d9      	lsls	r1, r3, #31
 80018d8:	d5d8      	bpl.n	800188c <_printf_float+0x24c>
 80018da:	ee18 3a10 	vmov	r3, s16
 80018de:	4652      	mov	r2, sl
 80018e0:	4631      	mov	r1, r6
 80018e2:	4628      	mov	r0, r5
 80018e4:	47b8      	blx	r7
 80018e6:	3001      	adds	r0, #1
 80018e8:	f43f af09 	beq.w	80016fe <_printf_float+0xbe>
 80018ec:	f04f 0900 	mov.w	r9, #0
 80018f0:	f104 0a1a 	add.w	sl, r4, #26
 80018f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80018f6:	425b      	negs	r3, r3
 80018f8:	454b      	cmp	r3, r9
 80018fa:	dc01      	bgt.n	8001900 <_printf_float+0x2c0>
 80018fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018fe:	e792      	b.n	8001826 <_printf_float+0x1e6>
 8001900:	2301      	movs	r3, #1
 8001902:	4652      	mov	r2, sl
 8001904:	4631      	mov	r1, r6
 8001906:	4628      	mov	r0, r5
 8001908:	47b8      	blx	r7
 800190a:	3001      	adds	r0, #1
 800190c:	f43f aef7 	beq.w	80016fe <_printf_float+0xbe>
 8001910:	f109 0901 	add.w	r9, r9, #1
 8001914:	e7ee      	b.n	80018f4 <_printf_float+0x2b4>
 8001916:	bf00      	nop
 8001918:	7fefffff 	.word	0x7fefffff
 800191c:	0800467c 	.word	0x0800467c
 8001920:	08004680 	.word	0x08004680
 8001924:	08004684 	.word	0x08004684
 8001928:	08004688 	.word	0x08004688
 800192c:	0800468c 	.word	0x0800468c
 8001930:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001932:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001934:	429a      	cmp	r2, r3
 8001936:	bfa8      	it	ge
 8001938:	461a      	movge	r2, r3
 800193a:	2a00      	cmp	r2, #0
 800193c:	4691      	mov	r9, r2
 800193e:	dc37      	bgt.n	80019b0 <_printf_float+0x370>
 8001940:	f04f 0b00 	mov.w	fp, #0
 8001944:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001948:	f104 021a 	add.w	r2, r4, #26
 800194c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800194e:	9305      	str	r3, [sp, #20]
 8001950:	eba3 0309 	sub.w	r3, r3, r9
 8001954:	455b      	cmp	r3, fp
 8001956:	dc33      	bgt.n	80019c0 <_printf_float+0x380>
 8001958:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800195c:	429a      	cmp	r2, r3
 800195e:	db3b      	blt.n	80019d8 <_printf_float+0x398>
 8001960:	6823      	ldr	r3, [r4, #0]
 8001962:	07da      	lsls	r2, r3, #31
 8001964:	d438      	bmi.n	80019d8 <_printf_float+0x398>
 8001966:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800196a:	eba2 0903 	sub.w	r9, r2, r3
 800196e:	9b05      	ldr	r3, [sp, #20]
 8001970:	1ad2      	subs	r2, r2, r3
 8001972:	4591      	cmp	r9, r2
 8001974:	bfa8      	it	ge
 8001976:	4691      	movge	r9, r2
 8001978:	f1b9 0f00 	cmp.w	r9, #0
 800197c:	dc35      	bgt.n	80019ea <_printf_float+0x3aa>
 800197e:	f04f 0800 	mov.w	r8, #0
 8001982:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001986:	f104 0a1a 	add.w	sl, r4, #26
 800198a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800198e:	1a9b      	subs	r3, r3, r2
 8001990:	eba3 0309 	sub.w	r3, r3, r9
 8001994:	4543      	cmp	r3, r8
 8001996:	f77f af79 	ble.w	800188c <_printf_float+0x24c>
 800199a:	2301      	movs	r3, #1
 800199c:	4652      	mov	r2, sl
 800199e:	4631      	mov	r1, r6
 80019a0:	4628      	mov	r0, r5
 80019a2:	47b8      	blx	r7
 80019a4:	3001      	adds	r0, #1
 80019a6:	f43f aeaa 	beq.w	80016fe <_printf_float+0xbe>
 80019aa:	f108 0801 	add.w	r8, r8, #1
 80019ae:	e7ec      	b.n	800198a <_printf_float+0x34a>
 80019b0:	4613      	mov	r3, r2
 80019b2:	4631      	mov	r1, r6
 80019b4:	4642      	mov	r2, r8
 80019b6:	4628      	mov	r0, r5
 80019b8:	47b8      	blx	r7
 80019ba:	3001      	adds	r0, #1
 80019bc:	d1c0      	bne.n	8001940 <_printf_float+0x300>
 80019be:	e69e      	b.n	80016fe <_printf_float+0xbe>
 80019c0:	2301      	movs	r3, #1
 80019c2:	4631      	mov	r1, r6
 80019c4:	4628      	mov	r0, r5
 80019c6:	9205      	str	r2, [sp, #20]
 80019c8:	47b8      	blx	r7
 80019ca:	3001      	adds	r0, #1
 80019cc:	f43f ae97 	beq.w	80016fe <_printf_float+0xbe>
 80019d0:	9a05      	ldr	r2, [sp, #20]
 80019d2:	f10b 0b01 	add.w	fp, fp, #1
 80019d6:	e7b9      	b.n	800194c <_printf_float+0x30c>
 80019d8:	ee18 3a10 	vmov	r3, s16
 80019dc:	4652      	mov	r2, sl
 80019de:	4631      	mov	r1, r6
 80019e0:	4628      	mov	r0, r5
 80019e2:	47b8      	blx	r7
 80019e4:	3001      	adds	r0, #1
 80019e6:	d1be      	bne.n	8001966 <_printf_float+0x326>
 80019e8:	e689      	b.n	80016fe <_printf_float+0xbe>
 80019ea:	9a05      	ldr	r2, [sp, #20]
 80019ec:	464b      	mov	r3, r9
 80019ee:	4442      	add	r2, r8
 80019f0:	4631      	mov	r1, r6
 80019f2:	4628      	mov	r0, r5
 80019f4:	47b8      	blx	r7
 80019f6:	3001      	adds	r0, #1
 80019f8:	d1c1      	bne.n	800197e <_printf_float+0x33e>
 80019fa:	e680      	b.n	80016fe <_printf_float+0xbe>
 80019fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80019fe:	2a01      	cmp	r2, #1
 8001a00:	dc01      	bgt.n	8001a06 <_printf_float+0x3c6>
 8001a02:	07db      	lsls	r3, r3, #31
 8001a04:	d53a      	bpl.n	8001a7c <_printf_float+0x43c>
 8001a06:	2301      	movs	r3, #1
 8001a08:	4642      	mov	r2, r8
 8001a0a:	4631      	mov	r1, r6
 8001a0c:	4628      	mov	r0, r5
 8001a0e:	47b8      	blx	r7
 8001a10:	3001      	adds	r0, #1
 8001a12:	f43f ae74 	beq.w	80016fe <_printf_float+0xbe>
 8001a16:	ee18 3a10 	vmov	r3, s16
 8001a1a:	4652      	mov	r2, sl
 8001a1c:	4631      	mov	r1, r6
 8001a1e:	4628      	mov	r0, r5
 8001a20:	47b8      	blx	r7
 8001a22:	3001      	adds	r0, #1
 8001a24:	f43f ae6b 	beq.w	80016fe <_printf_float+0xbe>
 8001a28:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001a2c:	2200      	movs	r2, #0
 8001a2e:	2300      	movs	r3, #0
 8001a30:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001a34:	f7ff f848 	bl	8000ac8 <__aeabi_dcmpeq>
 8001a38:	b9d8      	cbnz	r0, 8001a72 <_printf_float+0x432>
 8001a3a:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 8001a3e:	f108 0201 	add.w	r2, r8, #1
 8001a42:	4631      	mov	r1, r6
 8001a44:	4628      	mov	r0, r5
 8001a46:	47b8      	blx	r7
 8001a48:	3001      	adds	r0, #1
 8001a4a:	d10e      	bne.n	8001a6a <_printf_float+0x42a>
 8001a4c:	e657      	b.n	80016fe <_printf_float+0xbe>
 8001a4e:	2301      	movs	r3, #1
 8001a50:	4652      	mov	r2, sl
 8001a52:	4631      	mov	r1, r6
 8001a54:	4628      	mov	r0, r5
 8001a56:	47b8      	blx	r7
 8001a58:	3001      	adds	r0, #1
 8001a5a:	f43f ae50 	beq.w	80016fe <_printf_float+0xbe>
 8001a5e:	f108 0801 	add.w	r8, r8, #1
 8001a62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001a64:	3b01      	subs	r3, #1
 8001a66:	4543      	cmp	r3, r8
 8001a68:	dcf1      	bgt.n	8001a4e <_printf_float+0x40e>
 8001a6a:	464b      	mov	r3, r9
 8001a6c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001a70:	e6da      	b.n	8001828 <_printf_float+0x1e8>
 8001a72:	f04f 0800 	mov.w	r8, #0
 8001a76:	f104 0a1a 	add.w	sl, r4, #26
 8001a7a:	e7f2      	b.n	8001a62 <_printf_float+0x422>
 8001a7c:	2301      	movs	r3, #1
 8001a7e:	4642      	mov	r2, r8
 8001a80:	e7df      	b.n	8001a42 <_printf_float+0x402>
 8001a82:	2301      	movs	r3, #1
 8001a84:	464a      	mov	r2, r9
 8001a86:	4631      	mov	r1, r6
 8001a88:	4628      	mov	r0, r5
 8001a8a:	47b8      	blx	r7
 8001a8c:	3001      	adds	r0, #1
 8001a8e:	f43f ae36 	beq.w	80016fe <_printf_float+0xbe>
 8001a92:	f108 0801 	add.w	r8, r8, #1
 8001a96:	68e3      	ldr	r3, [r4, #12]
 8001a98:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001a9a:	1a5b      	subs	r3, r3, r1
 8001a9c:	4543      	cmp	r3, r8
 8001a9e:	dcf0      	bgt.n	8001a82 <_printf_float+0x442>
 8001aa0:	e6f8      	b.n	8001894 <_printf_float+0x254>
 8001aa2:	f04f 0800 	mov.w	r8, #0
 8001aa6:	f104 0919 	add.w	r9, r4, #25
 8001aaa:	e7f4      	b.n	8001a96 <_printf_float+0x456>

08001aac <_printf_common>:
 8001aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001ab0:	4616      	mov	r6, r2
 8001ab2:	4699      	mov	r9, r3
 8001ab4:	688a      	ldr	r2, [r1, #8]
 8001ab6:	690b      	ldr	r3, [r1, #16]
 8001ab8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001abc:	4293      	cmp	r3, r2
 8001abe:	bfb8      	it	lt
 8001ac0:	4613      	movlt	r3, r2
 8001ac2:	6033      	str	r3, [r6, #0]
 8001ac4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001ac8:	4607      	mov	r7, r0
 8001aca:	460c      	mov	r4, r1
 8001acc:	b10a      	cbz	r2, 8001ad2 <_printf_common+0x26>
 8001ace:	3301      	adds	r3, #1
 8001ad0:	6033      	str	r3, [r6, #0]
 8001ad2:	6823      	ldr	r3, [r4, #0]
 8001ad4:	0699      	lsls	r1, r3, #26
 8001ad6:	bf42      	ittt	mi
 8001ad8:	6833      	ldrmi	r3, [r6, #0]
 8001ada:	3302      	addmi	r3, #2
 8001adc:	6033      	strmi	r3, [r6, #0]
 8001ade:	6825      	ldr	r5, [r4, #0]
 8001ae0:	f015 0506 	ands.w	r5, r5, #6
 8001ae4:	d106      	bne.n	8001af4 <_printf_common+0x48>
 8001ae6:	f104 0a19 	add.w	sl, r4, #25
 8001aea:	68e3      	ldr	r3, [r4, #12]
 8001aec:	6832      	ldr	r2, [r6, #0]
 8001aee:	1a9b      	subs	r3, r3, r2
 8001af0:	42ab      	cmp	r3, r5
 8001af2:	dc26      	bgt.n	8001b42 <_printf_common+0x96>
 8001af4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001af8:	1e13      	subs	r3, r2, #0
 8001afa:	6822      	ldr	r2, [r4, #0]
 8001afc:	bf18      	it	ne
 8001afe:	2301      	movne	r3, #1
 8001b00:	0692      	lsls	r2, r2, #26
 8001b02:	d42b      	bmi.n	8001b5c <_printf_common+0xb0>
 8001b04:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001b08:	4649      	mov	r1, r9
 8001b0a:	4638      	mov	r0, r7
 8001b0c:	47c0      	blx	r8
 8001b0e:	3001      	adds	r0, #1
 8001b10:	d01e      	beq.n	8001b50 <_printf_common+0xa4>
 8001b12:	6823      	ldr	r3, [r4, #0]
 8001b14:	6922      	ldr	r2, [r4, #16]
 8001b16:	f003 0306 	and.w	r3, r3, #6
 8001b1a:	2b04      	cmp	r3, #4
 8001b1c:	bf02      	ittt	eq
 8001b1e:	68e5      	ldreq	r5, [r4, #12]
 8001b20:	6833      	ldreq	r3, [r6, #0]
 8001b22:	1aed      	subeq	r5, r5, r3
 8001b24:	68a3      	ldr	r3, [r4, #8]
 8001b26:	bf0c      	ite	eq
 8001b28:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001b2c:	2500      	movne	r5, #0
 8001b2e:	4293      	cmp	r3, r2
 8001b30:	bfc4      	itt	gt
 8001b32:	1a9b      	subgt	r3, r3, r2
 8001b34:	18ed      	addgt	r5, r5, r3
 8001b36:	2600      	movs	r6, #0
 8001b38:	341a      	adds	r4, #26
 8001b3a:	42b5      	cmp	r5, r6
 8001b3c:	d11a      	bne.n	8001b74 <_printf_common+0xc8>
 8001b3e:	2000      	movs	r0, #0
 8001b40:	e008      	b.n	8001b54 <_printf_common+0xa8>
 8001b42:	2301      	movs	r3, #1
 8001b44:	4652      	mov	r2, sl
 8001b46:	4649      	mov	r1, r9
 8001b48:	4638      	mov	r0, r7
 8001b4a:	47c0      	blx	r8
 8001b4c:	3001      	adds	r0, #1
 8001b4e:	d103      	bne.n	8001b58 <_printf_common+0xac>
 8001b50:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b58:	3501      	adds	r5, #1
 8001b5a:	e7c6      	b.n	8001aea <_printf_common+0x3e>
 8001b5c:	18e1      	adds	r1, r4, r3
 8001b5e:	1c5a      	adds	r2, r3, #1
 8001b60:	2030      	movs	r0, #48	; 0x30
 8001b62:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001b66:	4422      	add	r2, r4
 8001b68:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001b6c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001b70:	3302      	adds	r3, #2
 8001b72:	e7c7      	b.n	8001b04 <_printf_common+0x58>
 8001b74:	2301      	movs	r3, #1
 8001b76:	4622      	mov	r2, r4
 8001b78:	4649      	mov	r1, r9
 8001b7a:	4638      	mov	r0, r7
 8001b7c:	47c0      	blx	r8
 8001b7e:	3001      	adds	r0, #1
 8001b80:	d0e6      	beq.n	8001b50 <_printf_common+0xa4>
 8001b82:	3601      	adds	r6, #1
 8001b84:	e7d9      	b.n	8001b3a <_printf_common+0x8e>
	...

08001b88 <_printf_i>:
 8001b88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b8c:	7e0f      	ldrb	r7, [r1, #24]
 8001b8e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001b90:	2f78      	cmp	r7, #120	; 0x78
 8001b92:	4691      	mov	r9, r2
 8001b94:	4680      	mov	r8, r0
 8001b96:	460c      	mov	r4, r1
 8001b98:	469a      	mov	sl, r3
 8001b9a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001b9e:	d807      	bhi.n	8001bb0 <_printf_i+0x28>
 8001ba0:	2f62      	cmp	r7, #98	; 0x62
 8001ba2:	d80a      	bhi.n	8001bba <_printf_i+0x32>
 8001ba4:	2f00      	cmp	r7, #0
 8001ba6:	f000 80d4 	beq.w	8001d52 <_printf_i+0x1ca>
 8001baa:	2f58      	cmp	r7, #88	; 0x58
 8001bac:	f000 80c0 	beq.w	8001d30 <_printf_i+0x1a8>
 8001bb0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001bb4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001bb8:	e03a      	b.n	8001c30 <_printf_i+0xa8>
 8001bba:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001bbe:	2b15      	cmp	r3, #21
 8001bc0:	d8f6      	bhi.n	8001bb0 <_printf_i+0x28>
 8001bc2:	a101      	add	r1, pc, #4	; (adr r1, 8001bc8 <_printf_i+0x40>)
 8001bc4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001bc8:	08001c21 	.word	0x08001c21
 8001bcc:	08001c35 	.word	0x08001c35
 8001bd0:	08001bb1 	.word	0x08001bb1
 8001bd4:	08001bb1 	.word	0x08001bb1
 8001bd8:	08001bb1 	.word	0x08001bb1
 8001bdc:	08001bb1 	.word	0x08001bb1
 8001be0:	08001c35 	.word	0x08001c35
 8001be4:	08001bb1 	.word	0x08001bb1
 8001be8:	08001bb1 	.word	0x08001bb1
 8001bec:	08001bb1 	.word	0x08001bb1
 8001bf0:	08001bb1 	.word	0x08001bb1
 8001bf4:	08001d39 	.word	0x08001d39
 8001bf8:	08001c61 	.word	0x08001c61
 8001bfc:	08001cf3 	.word	0x08001cf3
 8001c00:	08001bb1 	.word	0x08001bb1
 8001c04:	08001bb1 	.word	0x08001bb1
 8001c08:	08001d5b 	.word	0x08001d5b
 8001c0c:	08001bb1 	.word	0x08001bb1
 8001c10:	08001c61 	.word	0x08001c61
 8001c14:	08001bb1 	.word	0x08001bb1
 8001c18:	08001bb1 	.word	0x08001bb1
 8001c1c:	08001cfb 	.word	0x08001cfb
 8001c20:	682b      	ldr	r3, [r5, #0]
 8001c22:	1d1a      	adds	r2, r3, #4
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	602a      	str	r2, [r5, #0]
 8001c28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001c2c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001c30:	2301      	movs	r3, #1
 8001c32:	e09f      	b.n	8001d74 <_printf_i+0x1ec>
 8001c34:	6820      	ldr	r0, [r4, #0]
 8001c36:	682b      	ldr	r3, [r5, #0]
 8001c38:	0607      	lsls	r7, r0, #24
 8001c3a:	f103 0104 	add.w	r1, r3, #4
 8001c3e:	6029      	str	r1, [r5, #0]
 8001c40:	d501      	bpl.n	8001c46 <_printf_i+0xbe>
 8001c42:	681e      	ldr	r6, [r3, #0]
 8001c44:	e003      	b.n	8001c4e <_printf_i+0xc6>
 8001c46:	0646      	lsls	r6, r0, #25
 8001c48:	d5fb      	bpl.n	8001c42 <_printf_i+0xba>
 8001c4a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001c4e:	2e00      	cmp	r6, #0
 8001c50:	da03      	bge.n	8001c5a <_printf_i+0xd2>
 8001c52:	232d      	movs	r3, #45	; 0x2d
 8001c54:	4276      	negs	r6, r6
 8001c56:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c5a:	485a      	ldr	r0, [pc, #360]	; (8001dc4 <_printf_i+0x23c>)
 8001c5c:	230a      	movs	r3, #10
 8001c5e:	e012      	b.n	8001c86 <_printf_i+0xfe>
 8001c60:	682b      	ldr	r3, [r5, #0]
 8001c62:	6820      	ldr	r0, [r4, #0]
 8001c64:	1d19      	adds	r1, r3, #4
 8001c66:	6029      	str	r1, [r5, #0]
 8001c68:	0605      	lsls	r5, r0, #24
 8001c6a:	d501      	bpl.n	8001c70 <_printf_i+0xe8>
 8001c6c:	681e      	ldr	r6, [r3, #0]
 8001c6e:	e002      	b.n	8001c76 <_printf_i+0xee>
 8001c70:	0641      	lsls	r1, r0, #25
 8001c72:	d5fb      	bpl.n	8001c6c <_printf_i+0xe4>
 8001c74:	881e      	ldrh	r6, [r3, #0]
 8001c76:	4853      	ldr	r0, [pc, #332]	; (8001dc4 <_printf_i+0x23c>)
 8001c78:	2f6f      	cmp	r7, #111	; 0x6f
 8001c7a:	bf0c      	ite	eq
 8001c7c:	2308      	moveq	r3, #8
 8001c7e:	230a      	movne	r3, #10
 8001c80:	2100      	movs	r1, #0
 8001c82:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001c86:	6865      	ldr	r5, [r4, #4]
 8001c88:	60a5      	str	r5, [r4, #8]
 8001c8a:	2d00      	cmp	r5, #0
 8001c8c:	bfa2      	ittt	ge
 8001c8e:	6821      	ldrge	r1, [r4, #0]
 8001c90:	f021 0104 	bicge.w	r1, r1, #4
 8001c94:	6021      	strge	r1, [r4, #0]
 8001c96:	b90e      	cbnz	r6, 8001c9c <_printf_i+0x114>
 8001c98:	2d00      	cmp	r5, #0
 8001c9a:	d04b      	beq.n	8001d34 <_printf_i+0x1ac>
 8001c9c:	4615      	mov	r5, r2
 8001c9e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001ca2:	fb03 6711 	mls	r7, r3, r1, r6
 8001ca6:	5dc7      	ldrb	r7, [r0, r7]
 8001ca8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001cac:	4637      	mov	r7, r6
 8001cae:	42bb      	cmp	r3, r7
 8001cb0:	460e      	mov	r6, r1
 8001cb2:	d9f4      	bls.n	8001c9e <_printf_i+0x116>
 8001cb4:	2b08      	cmp	r3, #8
 8001cb6:	d10b      	bne.n	8001cd0 <_printf_i+0x148>
 8001cb8:	6823      	ldr	r3, [r4, #0]
 8001cba:	07de      	lsls	r6, r3, #31
 8001cbc:	d508      	bpl.n	8001cd0 <_printf_i+0x148>
 8001cbe:	6923      	ldr	r3, [r4, #16]
 8001cc0:	6861      	ldr	r1, [r4, #4]
 8001cc2:	4299      	cmp	r1, r3
 8001cc4:	bfde      	ittt	le
 8001cc6:	2330      	movle	r3, #48	; 0x30
 8001cc8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001ccc:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8001cd0:	1b52      	subs	r2, r2, r5
 8001cd2:	6122      	str	r2, [r4, #16]
 8001cd4:	f8cd a000 	str.w	sl, [sp]
 8001cd8:	464b      	mov	r3, r9
 8001cda:	aa03      	add	r2, sp, #12
 8001cdc:	4621      	mov	r1, r4
 8001cde:	4640      	mov	r0, r8
 8001ce0:	f7ff fee4 	bl	8001aac <_printf_common>
 8001ce4:	3001      	adds	r0, #1
 8001ce6:	d14a      	bne.n	8001d7e <_printf_i+0x1f6>
 8001ce8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001cec:	b004      	add	sp, #16
 8001cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001cf2:	6823      	ldr	r3, [r4, #0]
 8001cf4:	f043 0320 	orr.w	r3, r3, #32
 8001cf8:	6023      	str	r3, [r4, #0]
 8001cfa:	4833      	ldr	r0, [pc, #204]	; (8001dc8 <_printf_i+0x240>)
 8001cfc:	2778      	movs	r7, #120	; 0x78
 8001cfe:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001d02:	6823      	ldr	r3, [r4, #0]
 8001d04:	6829      	ldr	r1, [r5, #0]
 8001d06:	061f      	lsls	r7, r3, #24
 8001d08:	f851 6b04 	ldr.w	r6, [r1], #4
 8001d0c:	d402      	bmi.n	8001d14 <_printf_i+0x18c>
 8001d0e:	065f      	lsls	r7, r3, #25
 8001d10:	bf48      	it	mi
 8001d12:	b2b6      	uxthmi	r6, r6
 8001d14:	07df      	lsls	r7, r3, #31
 8001d16:	bf48      	it	mi
 8001d18:	f043 0320 	orrmi.w	r3, r3, #32
 8001d1c:	6029      	str	r1, [r5, #0]
 8001d1e:	bf48      	it	mi
 8001d20:	6023      	strmi	r3, [r4, #0]
 8001d22:	b91e      	cbnz	r6, 8001d2c <_printf_i+0x1a4>
 8001d24:	6823      	ldr	r3, [r4, #0]
 8001d26:	f023 0320 	bic.w	r3, r3, #32
 8001d2a:	6023      	str	r3, [r4, #0]
 8001d2c:	2310      	movs	r3, #16
 8001d2e:	e7a7      	b.n	8001c80 <_printf_i+0xf8>
 8001d30:	4824      	ldr	r0, [pc, #144]	; (8001dc4 <_printf_i+0x23c>)
 8001d32:	e7e4      	b.n	8001cfe <_printf_i+0x176>
 8001d34:	4615      	mov	r5, r2
 8001d36:	e7bd      	b.n	8001cb4 <_printf_i+0x12c>
 8001d38:	682b      	ldr	r3, [r5, #0]
 8001d3a:	6826      	ldr	r6, [r4, #0]
 8001d3c:	6961      	ldr	r1, [r4, #20]
 8001d3e:	1d18      	adds	r0, r3, #4
 8001d40:	6028      	str	r0, [r5, #0]
 8001d42:	0635      	lsls	r5, r6, #24
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	d501      	bpl.n	8001d4c <_printf_i+0x1c4>
 8001d48:	6019      	str	r1, [r3, #0]
 8001d4a:	e002      	b.n	8001d52 <_printf_i+0x1ca>
 8001d4c:	0670      	lsls	r0, r6, #25
 8001d4e:	d5fb      	bpl.n	8001d48 <_printf_i+0x1c0>
 8001d50:	8019      	strh	r1, [r3, #0]
 8001d52:	2300      	movs	r3, #0
 8001d54:	6123      	str	r3, [r4, #16]
 8001d56:	4615      	mov	r5, r2
 8001d58:	e7bc      	b.n	8001cd4 <_printf_i+0x14c>
 8001d5a:	682b      	ldr	r3, [r5, #0]
 8001d5c:	1d1a      	adds	r2, r3, #4
 8001d5e:	602a      	str	r2, [r5, #0]
 8001d60:	681d      	ldr	r5, [r3, #0]
 8001d62:	6862      	ldr	r2, [r4, #4]
 8001d64:	2100      	movs	r1, #0
 8001d66:	4628      	mov	r0, r5
 8001d68:	f7fe fa32 	bl	80001d0 <memchr>
 8001d6c:	b108      	cbz	r0, 8001d72 <_printf_i+0x1ea>
 8001d6e:	1b40      	subs	r0, r0, r5
 8001d70:	6060      	str	r0, [r4, #4]
 8001d72:	6863      	ldr	r3, [r4, #4]
 8001d74:	6123      	str	r3, [r4, #16]
 8001d76:	2300      	movs	r3, #0
 8001d78:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d7c:	e7aa      	b.n	8001cd4 <_printf_i+0x14c>
 8001d7e:	6923      	ldr	r3, [r4, #16]
 8001d80:	462a      	mov	r2, r5
 8001d82:	4649      	mov	r1, r9
 8001d84:	4640      	mov	r0, r8
 8001d86:	47d0      	blx	sl
 8001d88:	3001      	adds	r0, #1
 8001d8a:	d0ad      	beq.n	8001ce8 <_printf_i+0x160>
 8001d8c:	6823      	ldr	r3, [r4, #0]
 8001d8e:	079b      	lsls	r3, r3, #30
 8001d90:	d413      	bmi.n	8001dba <_printf_i+0x232>
 8001d92:	68e0      	ldr	r0, [r4, #12]
 8001d94:	9b03      	ldr	r3, [sp, #12]
 8001d96:	4298      	cmp	r0, r3
 8001d98:	bfb8      	it	lt
 8001d9a:	4618      	movlt	r0, r3
 8001d9c:	e7a6      	b.n	8001cec <_printf_i+0x164>
 8001d9e:	2301      	movs	r3, #1
 8001da0:	4632      	mov	r2, r6
 8001da2:	4649      	mov	r1, r9
 8001da4:	4640      	mov	r0, r8
 8001da6:	47d0      	blx	sl
 8001da8:	3001      	adds	r0, #1
 8001daa:	d09d      	beq.n	8001ce8 <_printf_i+0x160>
 8001dac:	3501      	adds	r5, #1
 8001dae:	68e3      	ldr	r3, [r4, #12]
 8001db0:	9903      	ldr	r1, [sp, #12]
 8001db2:	1a5b      	subs	r3, r3, r1
 8001db4:	42ab      	cmp	r3, r5
 8001db6:	dcf2      	bgt.n	8001d9e <_printf_i+0x216>
 8001db8:	e7eb      	b.n	8001d92 <_printf_i+0x20a>
 8001dba:	2500      	movs	r5, #0
 8001dbc:	f104 0619 	add.w	r6, r4, #25
 8001dc0:	e7f5      	b.n	8001dae <_printf_i+0x226>
 8001dc2:	bf00      	nop
 8001dc4:	0800468e 	.word	0x0800468e
 8001dc8:	0800469f 	.word	0x0800469f

08001dcc <siprintf>:
 8001dcc:	b40e      	push	{r1, r2, r3}
 8001dce:	b500      	push	{lr}
 8001dd0:	b09c      	sub	sp, #112	; 0x70
 8001dd2:	ab1d      	add	r3, sp, #116	; 0x74
 8001dd4:	9002      	str	r0, [sp, #8]
 8001dd6:	9006      	str	r0, [sp, #24]
 8001dd8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8001ddc:	4809      	ldr	r0, [pc, #36]	; (8001e04 <siprintf+0x38>)
 8001dde:	9107      	str	r1, [sp, #28]
 8001de0:	9104      	str	r1, [sp, #16]
 8001de2:	4909      	ldr	r1, [pc, #36]	; (8001e08 <siprintf+0x3c>)
 8001de4:	f853 2b04 	ldr.w	r2, [r3], #4
 8001de8:	9105      	str	r1, [sp, #20]
 8001dea:	6800      	ldr	r0, [r0, #0]
 8001dec:	9301      	str	r3, [sp, #4]
 8001dee:	a902      	add	r1, sp, #8
 8001df0:	f001 f84a 	bl	8002e88 <_svfiprintf_r>
 8001df4:	9b02      	ldr	r3, [sp, #8]
 8001df6:	2200      	movs	r2, #0
 8001df8:	701a      	strb	r2, [r3, #0]
 8001dfa:	b01c      	add	sp, #112	; 0x70
 8001dfc:	f85d eb04 	ldr.w	lr, [sp], #4
 8001e00:	b003      	add	sp, #12
 8001e02:	4770      	bx	lr
 8001e04:	20000058 	.word	0x20000058
 8001e08:	ffff0208 	.word	0xffff0208

08001e0c <std>:
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	b510      	push	{r4, lr}
 8001e10:	4604      	mov	r4, r0
 8001e12:	e9c0 3300 	strd	r3, r3, [r0]
 8001e16:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001e1a:	6083      	str	r3, [r0, #8]
 8001e1c:	8181      	strh	r1, [r0, #12]
 8001e1e:	6643      	str	r3, [r0, #100]	; 0x64
 8001e20:	81c2      	strh	r2, [r0, #14]
 8001e22:	6183      	str	r3, [r0, #24]
 8001e24:	4619      	mov	r1, r3
 8001e26:	2208      	movs	r2, #8
 8001e28:	305c      	adds	r0, #92	; 0x5c
 8001e2a:	f000 f91f 	bl	800206c <memset>
 8001e2e:	4b0d      	ldr	r3, [pc, #52]	; (8001e64 <std+0x58>)
 8001e30:	6263      	str	r3, [r4, #36]	; 0x24
 8001e32:	4b0d      	ldr	r3, [pc, #52]	; (8001e68 <std+0x5c>)
 8001e34:	62a3      	str	r3, [r4, #40]	; 0x28
 8001e36:	4b0d      	ldr	r3, [pc, #52]	; (8001e6c <std+0x60>)
 8001e38:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001e3a:	4b0d      	ldr	r3, [pc, #52]	; (8001e70 <std+0x64>)
 8001e3c:	6323      	str	r3, [r4, #48]	; 0x30
 8001e3e:	4b0d      	ldr	r3, [pc, #52]	; (8001e74 <std+0x68>)
 8001e40:	6224      	str	r4, [r4, #32]
 8001e42:	429c      	cmp	r4, r3
 8001e44:	d006      	beq.n	8001e54 <std+0x48>
 8001e46:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001e4a:	4294      	cmp	r4, r2
 8001e4c:	d002      	beq.n	8001e54 <std+0x48>
 8001e4e:	33d0      	adds	r3, #208	; 0xd0
 8001e50:	429c      	cmp	r4, r3
 8001e52:	d105      	bne.n	8001e60 <std+0x54>
 8001e54:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e5c:	f000 b93c 	b.w	80020d8 <__retarget_lock_init_recursive>
 8001e60:	bd10      	pop	{r4, pc}
 8001e62:	bf00      	nop
 8001e64:	08003cc9 	.word	0x08003cc9
 8001e68:	08003ceb 	.word	0x08003ceb
 8001e6c:	08003d23 	.word	0x08003d23
 8001e70:	08003d47 	.word	0x08003d47
 8001e74:	200001e8 	.word	0x200001e8

08001e78 <stdio_exit_handler>:
 8001e78:	4a02      	ldr	r2, [pc, #8]	; (8001e84 <stdio_exit_handler+0xc>)
 8001e7a:	4903      	ldr	r1, [pc, #12]	; (8001e88 <stdio_exit_handler+0x10>)
 8001e7c:	4803      	ldr	r0, [pc, #12]	; (8001e8c <stdio_exit_handler+0x14>)
 8001e7e:	f000 b869 	b.w	8001f54 <_fwalk_sglue>
 8001e82:	bf00      	nop
 8001e84:	20000000 	.word	0x20000000
 8001e88:	08003569 	.word	0x08003569
 8001e8c:	2000000c 	.word	0x2000000c

08001e90 <cleanup_stdio>:
 8001e90:	6841      	ldr	r1, [r0, #4]
 8001e92:	4b0c      	ldr	r3, [pc, #48]	; (8001ec4 <cleanup_stdio+0x34>)
 8001e94:	4299      	cmp	r1, r3
 8001e96:	b510      	push	{r4, lr}
 8001e98:	4604      	mov	r4, r0
 8001e9a:	d001      	beq.n	8001ea0 <cleanup_stdio+0x10>
 8001e9c:	f001 fb64 	bl	8003568 <_fflush_r>
 8001ea0:	68a1      	ldr	r1, [r4, #8]
 8001ea2:	4b09      	ldr	r3, [pc, #36]	; (8001ec8 <cleanup_stdio+0x38>)
 8001ea4:	4299      	cmp	r1, r3
 8001ea6:	d002      	beq.n	8001eae <cleanup_stdio+0x1e>
 8001ea8:	4620      	mov	r0, r4
 8001eaa:	f001 fb5d 	bl	8003568 <_fflush_r>
 8001eae:	68e1      	ldr	r1, [r4, #12]
 8001eb0:	4b06      	ldr	r3, [pc, #24]	; (8001ecc <cleanup_stdio+0x3c>)
 8001eb2:	4299      	cmp	r1, r3
 8001eb4:	d004      	beq.n	8001ec0 <cleanup_stdio+0x30>
 8001eb6:	4620      	mov	r0, r4
 8001eb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ebc:	f001 bb54 	b.w	8003568 <_fflush_r>
 8001ec0:	bd10      	pop	{r4, pc}
 8001ec2:	bf00      	nop
 8001ec4:	200001e8 	.word	0x200001e8
 8001ec8:	20000250 	.word	0x20000250
 8001ecc:	200002b8 	.word	0x200002b8

08001ed0 <global_stdio_init.part.0>:
 8001ed0:	b510      	push	{r4, lr}
 8001ed2:	4b0b      	ldr	r3, [pc, #44]	; (8001f00 <global_stdio_init.part.0+0x30>)
 8001ed4:	4c0b      	ldr	r4, [pc, #44]	; (8001f04 <global_stdio_init.part.0+0x34>)
 8001ed6:	4a0c      	ldr	r2, [pc, #48]	; (8001f08 <global_stdio_init.part.0+0x38>)
 8001ed8:	601a      	str	r2, [r3, #0]
 8001eda:	4620      	mov	r0, r4
 8001edc:	2200      	movs	r2, #0
 8001ede:	2104      	movs	r1, #4
 8001ee0:	f7ff ff94 	bl	8001e0c <std>
 8001ee4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001ee8:	2201      	movs	r2, #1
 8001eea:	2109      	movs	r1, #9
 8001eec:	f7ff ff8e 	bl	8001e0c <std>
 8001ef0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001ef4:	2202      	movs	r2, #2
 8001ef6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001efa:	2112      	movs	r1, #18
 8001efc:	f7ff bf86 	b.w	8001e0c <std>
 8001f00:	20000320 	.word	0x20000320
 8001f04:	200001e8 	.word	0x200001e8
 8001f08:	08001e79 	.word	0x08001e79

08001f0c <__sfp_lock_acquire>:
 8001f0c:	4801      	ldr	r0, [pc, #4]	; (8001f14 <__sfp_lock_acquire+0x8>)
 8001f0e:	f000 b8e4 	b.w	80020da <__retarget_lock_acquire_recursive>
 8001f12:	bf00      	nop
 8001f14:	20000325 	.word	0x20000325

08001f18 <__sfp_lock_release>:
 8001f18:	4801      	ldr	r0, [pc, #4]	; (8001f20 <__sfp_lock_release+0x8>)
 8001f1a:	f000 b8df 	b.w	80020dc <__retarget_lock_release_recursive>
 8001f1e:	bf00      	nop
 8001f20:	20000325 	.word	0x20000325

08001f24 <__sinit>:
 8001f24:	b510      	push	{r4, lr}
 8001f26:	4604      	mov	r4, r0
 8001f28:	f7ff fff0 	bl	8001f0c <__sfp_lock_acquire>
 8001f2c:	6a23      	ldr	r3, [r4, #32]
 8001f2e:	b11b      	cbz	r3, 8001f38 <__sinit+0x14>
 8001f30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f34:	f7ff bff0 	b.w	8001f18 <__sfp_lock_release>
 8001f38:	4b04      	ldr	r3, [pc, #16]	; (8001f4c <__sinit+0x28>)
 8001f3a:	6223      	str	r3, [r4, #32]
 8001f3c:	4b04      	ldr	r3, [pc, #16]	; (8001f50 <__sinit+0x2c>)
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	2b00      	cmp	r3, #0
 8001f42:	d1f5      	bne.n	8001f30 <__sinit+0xc>
 8001f44:	f7ff ffc4 	bl	8001ed0 <global_stdio_init.part.0>
 8001f48:	e7f2      	b.n	8001f30 <__sinit+0xc>
 8001f4a:	bf00      	nop
 8001f4c:	08001e91 	.word	0x08001e91
 8001f50:	20000320 	.word	0x20000320

08001f54 <_fwalk_sglue>:
 8001f54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001f58:	4607      	mov	r7, r0
 8001f5a:	4688      	mov	r8, r1
 8001f5c:	4614      	mov	r4, r2
 8001f5e:	2600      	movs	r6, #0
 8001f60:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001f64:	f1b9 0901 	subs.w	r9, r9, #1
 8001f68:	d505      	bpl.n	8001f76 <_fwalk_sglue+0x22>
 8001f6a:	6824      	ldr	r4, [r4, #0]
 8001f6c:	2c00      	cmp	r4, #0
 8001f6e:	d1f7      	bne.n	8001f60 <_fwalk_sglue+0xc>
 8001f70:	4630      	mov	r0, r6
 8001f72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001f76:	89ab      	ldrh	r3, [r5, #12]
 8001f78:	2b01      	cmp	r3, #1
 8001f7a:	d907      	bls.n	8001f8c <_fwalk_sglue+0x38>
 8001f7c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001f80:	3301      	adds	r3, #1
 8001f82:	d003      	beq.n	8001f8c <_fwalk_sglue+0x38>
 8001f84:	4629      	mov	r1, r5
 8001f86:	4638      	mov	r0, r7
 8001f88:	47c0      	blx	r8
 8001f8a:	4306      	orrs	r6, r0
 8001f8c:	3568      	adds	r5, #104	; 0x68
 8001f8e:	e7e9      	b.n	8001f64 <_fwalk_sglue+0x10>

08001f90 <iprintf>:
 8001f90:	b40f      	push	{r0, r1, r2, r3}
 8001f92:	b507      	push	{r0, r1, r2, lr}
 8001f94:	4906      	ldr	r1, [pc, #24]	; (8001fb0 <iprintf+0x20>)
 8001f96:	ab04      	add	r3, sp, #16
 8001f98:	6808      	ldr	r0, [r1, #0]
 8001f9a:	f853 2b04 	ldr.w	r2, [r3], #4
 8001f9e:	6881      	ldr	r1, [r0, #8]
 8001fa0:	9301      	str	r3, [sp, #4]
 8001fa2:	f001 f899 	bl	80030d8 <_vfiprintf_r>
 8001fa6:	b003      	add	sp, #12
 8001fa8:	f85d eb04 	ldr.w	lr, [sp], #4
 8001fac:	b004      	add	sp, #16
 8001fae:	4770      	bx	lr
 8001fb0:	20000058 	.word	0x20000058

08001fb4 <_puts_r>:
 8001fb4:	6a03      	ldr	r3, [r0, #32]
 8001fb6:	b570      	push	{r4, r5, r6, lr}
 8001fb8:	6884      	ldr	r4, [r0, #8]
 8001fba:	4605      	mov	r5, r0
 8001fbc:	460e      	mov	r6, r1
 8001fbe:	b90b      	cbnz	r3, 8001fc4 <_puts_r+0x10>
 8001fc0:	f7ff ffb0 	bl	8001f24 <__sinit>
 8001fc4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001fc6:	07db      	lsls	r3, r3, #31
 8001fc8:	d405      	bmi.n	8001fd6 <_puts_r+0x22>
 8001fca:	89a3      	ldrh	r3, [r4, #12]
 8001fcc:	0598      	lsls	r0, r3, #22
 8001fce:	d402      	bmi.n	8001fd6 <_puts_r+0x22>
 8001fd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001fd2:	f000 f882 	bl	80020da <__retarget_lock_acquire_recursive>
 8001fd6:	89a3      	ldrh	r3, [r4, #12]
 8001fd8:	0719      	lsls	r1, r3, #28
 8001fda:	d513      	bpl.n	8002004 <_puts_r+0x50>
 8001fdc:	6923      	ldr	r3, [r4, #16]
 8001fde:	b18b      	cbz	r3, 8002004 <_puts_r+0x50>
 8001fe0:	3e01      	subs	r6, #1
 8001fe2:	68a3      	ldr	r3, [r4, #8]
 8001fe4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001fe8:	3b01      	subs	r3, #1
 8001fea:	60a3      	str	r3, [r4, #8]
 8001fec:	b9e9      	cbnz	r1, 800202a <_puts_r+0x76>
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	da2e      	bge.n	8002050 <_puts_r+0x9c>
 8001ff2:	4622      	mov	r2, r4
 8001ff4:	210a      	movs	r1, #10
 8001ff6:	4628      	mov	r0, r5
 8001ff8:	f001 fed8 	bl	8003dac <__swbuf_r>
 8001ffc:	3001      	adds	r0, #1
 8001ffe:	d007      	beq.n	8002010 <_puts_r+0x5c>
 8002000:	250a      	movs	r5, #10
 8002002:	e007      	b.n	8002014 <_puts_r+0x60>
 8002004:	4621      	mov	r1, r4
 8002006:	4628      	mov	r0, r5
 8002008:	f001 ff0e 	bl	8003e28 <__swsetup_r>
 800200c:	2800      	cmp	r0, #0
 800200e:	d0e7      	beq.n	8001fe0 <_puts_r+0x2c>
 8002010:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8002014:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002016:	07da      	lsls	r2, r3, #31
 8002018:	d405      	bmi.n	8002026 <_puts_r+0x72>
 800201a:	89a3      	ldrh	r3, [r4, #12]
 800201c:	059b      	lsls	r3, r3, #22
 800201e:	d402      	bmi.n	8002026 <_puts_r+0x72>
 8002020:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002022:	f000 f85b 	bl	80020dc <__retarget_lock_release_recursive>
 8002026:	4628      	mov	r0, r5
 8002028:	bd70      	pop	{r4, r5, r6, pc}
 800202a:	2b00      	cmp	r3, #0
 800202c:	da04      	bge.n	8002038 <_puts_r+0x84>
 800202e:	69a2      	ldr	r2, [r4, #24]
 8002030:	429a      	cmp	r2, r3
 8002032:	dc06      	bgt.n	8002042 <_puts_r+0x8e>
 8002034:	290a      	cmp	r1, #10
 8002036:	d004      	beq.n	8002042 <_puts_r+0x8e>
 8002038:	6823      	ldr	r3, [r4, #0]
 800203a:	1c5a      	adds	r2, r3, #1
 800203c:	6022      	str	r2, [r4, #0]
 800203e:	7019      	strb	r1, [r3, #0]
 8002040:	e7cf      	b.n	8001fe2 <_puts_r+0x2e>
 8002042:	4622      	mov	r2, r4
 8002044:	4628      	mov	r0, r5
 8002046:	f001 feb1 	bl	8003dac <__swbuf_r>
 800204a:	3001      	adds	r0, #1
 800204c:	d1c9      	bne.n	8001fe2 <_puts_r+0x2e>
 800204e:	e7df      	b.n	8002010 <_puts_r+0x5c>
 8002050:	6823      	ldr	r3, [r4, #0]
 8002052:	250a      	movs	r5, #10
 8002054:	1c5a      	adds	r2, r3, #1
 8002056:	6022      	str	r2, [r4, #0]
 8002058:	701d      	strb	r5, [r3, #0]
 800205a:	e7db      	b.n	8002014 <_puts_r+0x60>

0800205c <puts>:
 800205c:	4b02      	ldr	r3, [pc, #8]	; (8002068 <puts+0xc>)
 800205e:	4601      	mov	r1, r0
 8002060:	6818      	ldr	r0, [r3, #0]
 8002062:	f7ff bfa7 	b.w	8001fb4 <_puts_r>
 8002066:	bf00      	nop
 8002068:	20000058 	.word	0x20000058

0800206c <memset>:
 800206c:	4402      	add	r2, r0
 800206e:	4603      	mov	r3, r0
 8002070:	4293      	cmp	r3, r2
 8002072:	d100      	bne.n	8002076 <memset+0xa>
 8002074:	4770      	bx	lr
 8002076:	f803 1b01 	strb.w	r1, [r3], #1
 800207a:	e7f9      	b.n	8002070 <memset+0x4>

0800207c <_localeconv_r>:
 800207c:	4800      	ldr	r0, [pc, #0]	; (8002080 <_localeconv_r+0x4>)
 800207e:	4770      	bx	lr
 8002080:	2000014c 	.word	0x2000014c

08002084 <__errno>:
 8002084:	4b01      	ldr	r3, [pc, #4]	; (800208c <__errno+0x8>)
 8002086:	6818      	ldr	r0, [r3, #0]
 8002088:	4770      	bx	lr
 800208a:	bf00      	nop
 800208c:	20000058 	.word	0x20000058

08002090 <__libc_init_array>:
 8002090:	b570      	push	{r4, r5, r6, lr}
 8002092:	4d0d      	ldr	r5, [pc, #52]	; (80020c8 <__libc_init_array+0x38>)
 8002094:	4c0d      	ldr	r4, [pc, #52]	; (80020cc <__libc_init_array+0x3c>)
 8002096:	1b64      	subs	r4, r4, r5
 8002098:	10a4      	asrs	r4, r4, #2
 800209a:	2600      	movs	r6, #0
 800209c:	42a6      	cmp	r6, r4
 800209e:	d109      	bne.n	80020b4 <__libc_init_array+0x24>
 80020a0:	4d0b      	ldr	r5, [pc, #44]	; (80020d0 <__libc_init_array+0x40>)
 80020a2:	4c0c      	ldr	r4, [pc, #48]	; (80020d4 <__libc_init_array+0x44>)
 80020a4:	f002 f91e 	bl	80042e4 <_init>
 80020a8:	1b64      	subs	r4, r4, r5
 80020aa:	10a4      	asrs	r4, r4, #2
 80020ac:	2600      	movs	r6, #0
 80020ae:	42a6      	cmp	r6, r4
 80020b0:	d105      	bne.n	80020be <__libc_init_array+0x2e>
 80020b2:	bd70      	pop	{r4, r5, r6, pc}
 80020b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80020b8:	4798      	blx	r3
 80020ba:	3601      	adds	r6, #1
 80020bc:	e7ee      	b.n	800209c <__libc_init_array+0xc>
 80020be:	f855 3b04 	ldr.w	r3, [r5], #4
 80020c2:	4798      	blx	r3
 80020c4:	3601      	adds	r6, #1
 80020c6:	e7f2      	b.n	80020ae <__libc_init_array+0x1e>
 80020c8:	080049ec 	.word	0x080049ec
 80020cc:	080049ec 	.word	0x080049ec
 80020d0:	080049ec 	.word	0x080049ec
 80020d4:	080049f0 	.word	0x080049f0

080020d8 <__retarget_lock_init_recursive>:
 80020d8:	4770      	bx	lr

080020da <__retarget_lock_acquire_recursive>:
 80020da:	4770      	bx	lr

080020dc <__retarget_lock_release_recursive>:
 80020dc:	4770      	bx	lr

080020de <quorem>:
 80020de:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020e2:	6903      	ldr	r3, [r0, #16]
 80020e4:	690c      	ldr	r4, [r1, #16]
 80020e6:	42a3      	cmp	r3, r4
 80020e8:	4607      	mov	r7, r0
 80020ea:	db7e      	blt.n	80021ea <quorem+0x10c>
 80020ec:	3c01      	subs	r4, #1
 80020ee:	f101 0814 	add.w	r8, r1, #20
 80020f2:	f100 0514 	add.w	r5, r0, #20
 80020f6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80020fa:	9301      	str	r3, [sp, #4]
 80020fc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002100:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002104:	3301      	adds	r3, #1
 8002106:	429a      	cmp	r2, r3
 8002108:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800210c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002110:	fbb2 f6f3 	udiv	r6, r2, r3
 8002114:	d331      	bcc.n	800217a <quorem+0x9c>
 8002116:	f04f 0e00 	mov.w	lr, #0
 800211a:	4640      	mov	r0, r8
 800211c:	46ac      	mov	ip, r5
 800211e:	46f2      	mov	sl, lr
 8002120:	f850 2b04 	ldr.w	r2, [r0], #4
 8002124:	b293      	uxth	r3, r2
 8002126:	fb06 e303 	mla	r3, r6, r3, lr
 800212a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800212e:	0c1a      	lsrs	r2, r3, #16
 8002130:	b29b      	uxth	r3, r3
 8002132:	ebaa 0303 	sub.w	r3, sl, r3
 8002136:	f8dc a000 	ldr.w	sl, [ip]
 800213a:	fa13 f38a 	uxtah	r3, r3, sl
 800213e:	fb06 220e 	mla	r2, r6, lr, r2
 8002142:	9300      	str	r3, [sp, #0]
 8002144:	9b00      	ldr	r3, [sp, #0]
 8002146:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800214a:	b292      	uxth	r2, r2
 800214c:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002150:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002154:	f8bd 3000 	ldrh.w	r3, [sp]
 8002158:	4581      	cmp	r9, r0
 800215a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800215e:	f84c 3b04 	str.w	r3, [ip], #4
 8002162:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002166:	d2db      	bcs.n	8002120 <quorem+0x42>
 8002168:	f855 300b 	ldr.w	r3, [r5, fp]
 800216c:	b92b      	cbnz	r3, 800217a <quorem+0x9c>
 800216e:	9b01      	ldr	r3, [sp, #4]
 8002170:	3b04      	subs	r3, #4
 8002172:	429d      	cmp	r5, r3
 8002174:	461a      	mov	r2, r3
 8002176:	d32c      	bcc.n	80021d2 <quorem+0xf4>
 8002178:	613c      	str	r4, [r7, #16]
 800217a:	4638      	mov	r0, r7
 800217c:	f001 fca4 	bl	8003ac8 <__mcmp>
 8002180:	2800      	cmp	r0, #0
 8002182:	db22      	blt.n	80021ca <quorem+0xec>
 8002184:	3601      	adds	r6, #1
 8002186:	4629      	mov	r1, r5
 8002188:	2000      	movs	r0, #0
 800218a:	f858 2b04 	ldr.w	r2, [r8], #4
 800218e:	f8d1 c000 	ldr.w	ip, [r1]
 8002192:	b293      	uxth	r3, r2
 8002194:	1ac3      	subs	r3, r0, r3
 8002196:	0c12      	lsrs	r2, r2, #16
 8002198:	fa13 f38c 	uxtah	r3, r3, ip
 800219c:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80021a0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80021a4:	b29b      	uxth	r3, r3
 80021a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80021aa:	45c1      	cmp	r9, r8
 80021ac:	f841 3b04 	str.w	r3, [r1], #4
 80021b0:	ea4f 4022 	mov.w	r0, r2, asr #16
 80021b4:	d2e9      	bcs.n	800218a <quorem+0xac>
 80021b6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80021ba:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80021be:	b922      	cbnz	r2, 80021ca <quorem+0xec>
 80021c0:	3b04      	subs	r3, #4
 80021c2:	429d      	cmp	r5, r3
 80021c4:	461a      	mov	r2, r3
 80021c6:	d30a      	bcc.n	80021de <quorem+0x100>
 80021c8:	613c      	str	r4, [r7, #16]
 80021ca:	4630      	mov	r0, r6
 80021cc:	b003      	add	sp, #12
 80021ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021d2:	6812      	ldr	r2, [r2, #0]
 80021d4:	3b04      	subs	r3, #4
 80021d6:	2a00      	cmp	r2, #0
 80021d8:	d1ce      	bne.n	8002178 <quorem+0x9a>
 80021da:	3c01      	subs	r4, #1
 80021dc:	e7c9      	b.n	8002172 <quorem+0x94>
 80021de:	6812      	ldr	r2, [r2, #0]
 80021e0:	3b04      	subs	r3, #4
 80021e2:	2a00      	cmp	r2, #0
 80021e4:	d1f0      	bne.n	80021c8 <quorem+0xea>
 80021e6:	3c01      	subs	r4, #1
 80021e8:	e7eb      	b.n	80021c2 <quorem+0xe4>
 80021ea:	2000      	movs	r0, #0
 80021ec:	e7ee      	b.n	80021cc <quorem+0xee>
	...

080021f0 <_dtoa_r>:
 80021f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021f4:	ed2d 8b04 	vpush	{d8-d9}
 80021f8:	69c5      	ldr	r5, [r0, #28]
 80021fa:	b093      	sub	sp, #76	; 0x4c
 80021fc:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002200:	ec57 6b10 	vmov	r6, r7, d0
 8002204:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002208:	9107      	str	r1, [sp, #28]
 800220a:	4604      	mov	r4, r0
 800220c:	920a      	str	r2, [sp, #40]	; 0x28
 800220e:	930d      	str	r3, [sp, #52]	; 0x34
 8002210:	b975      	cbnz	r5, 8002230 <_dtoa_r+0x40>
 8002212:	2010      	movs	r0, #16
 8002214:	f001 f87a 	bl	800330c <malloc>
 8002218:	4602      	mov	r2, r0
 800221a:	61e0      	str	r0, [r4, #28]
 800221c:	b920      	cbnz	r0, 8002228 <_dtoa_r+0x38>
 800221e:	4bae      	ldr	r3, [pc, #696]	; (80024d8 <_dtoa_r+0x2e8>)
 8002220:	21ef      	movs	r1, #239	; 0xef
 8002222:	48ae      	ldr	r0, [pc, #696]	; (80024dc <_dtoa_r+0x2ec>)
 8002224:	f001 ff5a 	bl	80040dc <__assert_func>
 8002228:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800222c:	6005      	str	r5, [r0, #0]
 800222e:	60c5      	str	r5, [r0, #12]
 8002230:	69e3      	ldr	r3, [r4, #28]
 8002232:	6819      	ldr	r1, [r3, #0]
 8002234:	b151      	cbz	r1, 800224c <_dtoa_r+0x5c>
 8002236:	685a      	ldr	r2, [r3, #4]
 8002238:	604a      	str	r2, [r1, #4]
 800223a:	2301      	movs	r3, #1
 800223c:	4093      	lsls	r3, r2
 800223e:	608b      	str	r3, [r1, #8]
 8002240:	4620      	mov	r0, r4
 8002242:	f001 fa05 	bl	8003650 <_Bfree>
 8002246:	69e3      	ldr	r3, [r4, #28]
 8002248:	2200      	movs	r2, #0
 800224a:	601a      	str	r2, [r3, #0]
 800224c:	1e3b      	subs	r3, r7, #0
 800224e:	bfbb      	ittet	lt
 8002250:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002254:	9303      	strlt	r3, [sp, #12]
 8002256:	2300      	movge	r3, #0
 8002258:	2201      	movlt	r2, #1
 800225a:	bfac      	ite	ge
 800225c:	f8c8 3000 	strge.w	r3, [r8]
 8002260:	f8c8 2000 	strlt.w	r2, [r8]
 8002264:	4b9e      	ldr	r3, [pc, #632]	; (80024e0 <_dtoa_r+0x2f0>)
 8002266:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800226a:	ea33 0308 	bics.w	r3, r3, r8
 800226e:	d11b      	bne.n	80022a8 <_dtoa_r+0xb8>
 8002270:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002272:	f242 730f 	movw	r3, #9999	; 0x270f
 8002276:	6013      	str	r3, [r2, #0]
 8002278:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800227c:	4333      	orrs	r3, r6
 800227e:	f000 8593 	beq.w	8002da8 <_dtoa_r+0xbb8>
 8002282:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002284:	b963      	cbnz	r3, 80022a0 <_dtoa_r+0xb0>
 8002286:	4b97      	ldr	r3, [pc, #604]	; (80024e4 <_dtoa_r+0x2f4>)
 8002288:	e027      	b.n	80022da <_dtoa_r+0xea>
 800228a:	4b97      	ldr	r3, [pc, #604]	; (80024e8 <_dtoa_r+0x2f8>)
 800228c:	9300      	str	r3, [sp, #0]
 800228e:	3308      	adds	r3, #8
 8002290:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002292:	6013      	str	r3, [r2, #0]
 8002294:	9800      	ldr	r0, [sp, #0]
 8002296:	b013      	add	sp, #76	; 0x4c
 8002298:	ecbd 8b04 	vpop	{d8-d9}
 800229c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022a0:	4b90      	ldr	r3, [pc, #576]	; (80024e4 <_dtoa_r+0x2f4>)
 80022a2:	9300      	str	r3, [sp, #0]
 80022a4:	3303      	adds	r3, #3
 80022a6:	e7f3      	b.n	8002290 <_dtoa_r+0xa0>
 80022a8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80022ac:	2200      	movs	r2, #0
 80022ae:	ec51 0b17 	vmov	r0, r1, d7
 80022b2:	eeb0 8a47 	vmov.f32	s16, s14
 80022b6:	eef0 8a67 	vmov.f32	s17, s15
 80022ba:	2300      	movs	r3, #0
 80022bc:	f7fe fc04 	bl	8000ac8 <__aeabi_dcmpeq>
 80022c0:	4681      	mov	r9, r0
 80022c2:	b160      	cbz	r0, 80022de <_dtoa_r+0xee>
 80022c4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80022c6:	2301      	movs	r3, #1
 80022c8:	6013      	str	r3, [r2, #0]
 80022ca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80022cc:	2b00      	cmp	r3, #0
 80022ce:	f000 8568 	beq.w	8002da2 <_dtoa_r+0xbb2>
 80022d2:	4b86      	ldr	r3, [pc, #536]	; (80024ec <_dtoa_r+0x2fc>)
 80022d4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80022d6:	6013      	str	r3, [r2, #0]
 80022d8:	3b01      	subs	r3, #1
 80022da:	9300      	str	r3, [sp, #0]
 80022dc:	e7da      	b.n	8002294 <_dtoa_r+0xa4>
 80022de:	aa10      	add	r2, sp, #64	; 0x40
 80022e0:	a911      	add	r1, sp, #68	; 0x44
 80022e2:	4620      	mov	r0, r4
 80022e4:	eeb0 0a48 	vmov.f32	s0, s16
 80022e8:	eef0 0a68 	vmov.f32	s1, s17
 80022ec:	f001 fc92 	bl	8003c14 <__d2b>
 80022f0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80022f4:	4682      	mov	sl, r0
 80022f6:	2d00      	cmp	r5, #0
 80022f8:	d07f      	beq.n	80023fa <_dtoa_r+0x20a>
 80022fa:	ee18 3a90 	vmov	r3, s17
 80022fe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002302:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8002306:	ec51 0b18 	vmov	r0, r1, d8
 800230a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800230e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002312:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8002316:	4619      	mov	r1, r3
 8002318:	2200      	movs	r2, #0
 800231a:	4b75      	ldr	r3, [pc, #468]	; (80024f0 <_dtoa_r+0x300>)
 800231c:	f7fd ffb4 	bl	8000288 <__aeabi_dsub>
 8002320:	a367      	add	r3, pc, #412	; (adr r3, 80024c0 <_dtoa_r+0x2d0>)
 8002322:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002326:	f7fe f967 	bl	80005f8 <__aeabi_dmul>
 800232a:	a367      	add	r3, pc, #412	; (adr r3, 80024c8 <_dtoa_r+0x2d8>)
 800232c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002330:	f7fd ffac 	bl	800028c <__adddf3>
 8002334:	4606      	mov	r6, r0
 8002336:	4628      	mov	r0, r5
 8002338:	460f      	mov	r7, r1
 800233a:	f7fe f8f3 	bl	8000524 <__aeabi_i2d>
 800233e:	a364      	add	r3, pc, #400	; (adr r3, 80024d0 <_dtoa_r+0x2e0>)
 8002340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002344:	f7fe f958 	bl	80005f8 <__aeabi_dmul>
 8002348:	4602      	mov	r2, r0
 800234a:	460b      	mov	r3, r1
 800234c:	4630      	mov	r0, r6
 800234e:	4639      	mov	r1, r7
 8002350:	f7fd ff9c 	bl	800028c <__adddf3>
 8002354:	4606      	mov	r6, r0
 8002356:	460f      	mov	r7, r1
 8002358:	f7fe fbfe 	bl	8000b58 <__aeabi_d2iz>
 800235c:	2200      	movs	r2, #0
 800235e:	4683      	mov	fp, r0
 8002360:	2300      	movs	r3, #0
 8002362:	4630      	mov	r0, r6
 8002364:	4639      	mov	r1, r7
 8002366:	f7fe fbb9 	bl	8000adc <__aeabi_dcmplt>
 800236a:	b148      	cbz	r0, 8002380 <_dtoa_r+0x190>
 800236c:	4658      	mov	r0, fp
 800236e:	f7fe f8d9 	bl	8000524 <__aeabi_i2d>
 8002372:	4632      	mov	r2, r6
 8002374:	463b      	mov	r3, r7
 8002376:	f7fe fba7 	bl	8000ac8 <__aeabi_dcmpeq>
 800237a:	b908      	cbnz	r0, 8002380 <_dtoa_r+0x190>
 800237c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002380:	f1bb 0f16 	cmp.w	fp, #22
 8002384:	d857      	bhi.n	8002436 <_dtoa_r+0x246>
 8002386:	4b5b      	ldr	r3, [pc, #364]	; (80024f4 <_dtoa_r+0x304>)
 8002388:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800238c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002390:	ec51 0b18 	vmov	r0, r1, d8
 8002394:	f7fe fba2 	bl	8000adc <__aeabi_dcmplt>
 8002398:	2800      	cmp	r0, #0
 800239a:	d04e      	beq.n	800243a <_dtoa_r+0x24a>
 800239c:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80023a0:	2300      	movs	r3, #0
 80023a2:	930c      	str	r3, [sp, #48]	; 0x30
 80023a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80023a6:	1b5b      	subs	r3, r3, r5
 80023a8:	1e5a      	subs	r2, r3, #1
 80023aa:	bf45      	ittet	mi
 80023ac:	f1c3 0301 	rsbmi	r3, r3, #1
 80023b0:	9305      	strmi	r3, [sp, #20]
 80023b2:	2300      	movpl	r3, #0
 80023b4:	2300      	movmi	r3, #0
 80023b6:	9206      	str	r2, [sp, #24]
 80023b8:	bf54      	ite	pl
 80023ba:	9305      	strpl	r3, [sp, #20]
 80023bc:	9306      	strmi	r3, [sp, #24]
 80023be:	f1bb 0f00 	cmp.w	fp, #0
 80023c2:	db3c      	blt.n	800243e <_dtoa_r+0x24e>
 80023c4:	9b06      	ldr	r3, [sp, #24]
 80023c6:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80023ca:	445b      	add	r3, fp
 80023cc:	9306      	str	r3, [sp, #24]
 80023ce:	2300      	movs	r3, #0
 80023d0:	9308      	str	r3, [sp, #32]
 80023d2:	9b07      	ldr	r3, [sp, #28]
 80023d4:	2b09      	cmp	r3, #9
 80023d6:	d868      	bhi.n	80024aa <_dtoa_r+0x2ba>
 80023d8:	2b05      	cmp	r3, #5
 80023da:	bfc4      	itt	gt
 80023dc:	3b04      	subgt	r3, #4
 80023de:	9307      	strgt	r3, [sp, #28]
 80023e0:	9b07      	ldr	r3, [sp, #28]
 80023e2:	f1a3 0302 	sub.w	r3, r3, #2
 80023e6:	bfcc      	ite	gt
 80023e8:	2500      	movgt	r5, #0
 80023ea:	2501      	movle	r5, #1
 80023ec:	2b03      	cmp	r3, #3
 80023ee:	f200 8085 	bhi.w	80024fc <_dtoa_r+0x30c>
 80023f2:	e8df f003 	tbb	[pc, r3]
 80023f6:	3b2e      	.short	0x3b2e
 80023f8:	5839      	.short	0x5839
 80023fa:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80023fe:	441d      	add	r5, r3
 8002400:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002404:	2b20      	cmp	r3, #32
 8002406:	bfc1      	itttt	gt
 8002408:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800240c:	fa08 f803 	lslgt.w	r8, r8, r3
 8002410:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8002414:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002418:	bfd6      	itet	le
 800241a:	f1c3 0320 	rsble	r3, r3, #32
 800241e:	ea48 0003 	orrgt.w	r0, r8, r3
 8002422:	fa06 f003 	lslle.w	r0, r6, r3
 8002426:	f7fe f86d 	bl	8000504 <__aeabi_ui2d>
 800242a:	2201      	movs	r2, #1
 800242c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8002430:	3d01      	subs	r5, #1
 8002432:	920e      	str	r2, [sp, #56]	; 0x38
 8002434:	e76f      	b.n	8002316 <_dtoa_r+0x126>
 8002436:	2301      	movs	r3, #1
 8002438:	e7b3      	b.n	80023a2 <_dtoa_r+0x1b2>
 800243a:	900c      	str	r0, [sp, #48]	; 0x30
 800243c:	e7b2      	b.n	80023a4 <_dtoa_r+0x1b4>
 800243e:	9b05      	ldr	r3, [sp, #20]
 8002440:	eba3 030b 	sub.w	r3, r3, fp
 8002444:	9305      	str	r3, [sp, #20]
 8002446:	f1cb 0300 	rsb	r3, fp, #0
 800244a:	9308      	str	r3, [sp, #32]
 800244c:	2300      	movs	r3, #0
 800244e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002450:	e7bf      	b.n	80023d2 <_dtoa_r+0x1e2>
 8002452:	2300      	movs	r3, #0
 8002454:	9309      	str	r3, [sp, #36]	; 0x24
 8002456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002458:	2b00      	cmp	r3, #0
 800245a:	dc52      	bgt.n	8002502 <_dtoa_r+0x312>
 800245c:	2301      	movs	r3, #1
 800245e:	9301      	str	r3, [sp, #4]
 8002460:	9304      	str	r3, [sp, #16]
 8002462:	461a      	mov	r2, r3
 8002464:	920a      	str	r2, [sp, #40]	; 0x28
 8002466:	e00b      	b.n	8002480 <_dtoa_r+0x290>
 8002468:	2301      	movs	r3, #1
 800246a:	e7f3      	b.n	8002454 <_dtoa_r+0x264>
 800246c:	2300      	movs	r3, #0
 800246e:	9309      	str	r3, [sp, #36]	; 0x24
 8002470:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002472:	445b      	add	r3, fp
 8002474:	9301      	str	r3, [sp, #4]
 8002476:	3301      	adds	r3, #1
 8002478:	2b01      	cmp	r3, #1
 800247a:	9304      	str	r3, [sp, #16]
 800247c:	bfb8      	it	lt
 800247e:	2301      	movlt	r3, #1
 8002480:	69e0      	ldr	r0, [r4, #28]
 8002482:	2100      	movs	r1, #0
 8002484:	2204      	movs	r2, #4
 8002486:	f102 0614 	add.w	r6, r2, #20
 800248a:	429e      	cmp	r6, r3
 800248c:	d93d      	bls.n	800250a <_dtoa_r+0x31a>
 800248e:	6041      	str	r1, [r0, #4]
 8002490:	4620      	mov	r0, r4
 8002492:	f001 f89d 	bl	80035d0 <_Balloc>
 8002496:	9000      	str	r0, [sp, #0]
 8002498:	2800      	cmp	r0, #0
 800249a:	d139      	bne.n	8002510 <_dtoa_r+0x320>
 800249c:	4b16      	ldr	r3, [pc, #88]	; (80024f8 <_dtoa_r+0x308>)
 800249e:	4602      	mov	r2, r0
 80024a0:	f240 11af 	movw	r1, #431	; 0x1af
 80024a4:	e6bd      	b.n	8002222 <_dtoa_r+0x32>
 80024a6:	2301      	movs	r3, #1
 80024a8:	e7e1      	b.n	800246e <_dtoa_r+0x27e>
 80024aa:	2501      	movs	r5, #1
 80024ac:	2300      	movs	r3, #0
 80024ae:	9307      	str	r3, [sp, #28]
 80024b0:	9509      	str	r5, [sp, #36]	; 0x24
 80024b2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80024b6:	9301      	str	r3, [sp, #4]
 80024b8:	9304      	str	r3, [sp, #16]
 80024ba:	2200      	movs	r2, #0
 80024bc:	2312      	movs	r3, #18
 80024be:	e7d1      	b.n	8002464 <_dtoa_r+0x274>
 80024c0:	636f4361 	.word	0x636f4361
 80024c4:	3fd287a7 	.word	0x3fd287a7
 80024c8:	8b60c8b3 	.word	0x8b60c8b3
 80024cc:	3fc68a28 	.word	0x3fc68a28
 80024d0:	509f79fb 	.word	0x509f79fb
 80024d4:	3fd34413 	.word	0x3fd34413
 80024d8:	080046bd 	.word	0x080046bd
 80024dc:	080046d4 	.word	0x080046d4
 80024e0:	7ff00000 	.word	0x7ff00000
 80024e4:	080046b9 	.word	0x080046b9
 80024e8:	080046b0 	.word	0x080046b0
 80024ec:	0800468d 	.word	0x0800468d
 80024f0:	3ff80000 	.word	0x3ff80000
 80024f4:	080047d0 	.word	0x080047d0
 80024f8:	0800472c 	.word	0x0800472c
 80024fc:	2301      	movs	r3, #1
 80024fe:	9309      	str	r3, [sp, #36]	; 0x24
 8002500:	e7d7      	b.n	80024b2 <_dtoa_r+0x2c2>
 8002502:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002504:	9301      	str	r3, [sp, #4]
 8002506:	9304      	str	r3, [sp, #16]
 8002508:	e7ba      	b.n	8002480 <_dtoa_r+0x290>
 800250a:	3101      	adds	r1, #1
 800250c:	0052      	lsls	r2, r2, #1
 800250e:	e7ba      	b.n	8002486 <_dtoa_r+0x296>
 8002510:	69e3      	ldr	r3, [r4, #28]
 8002512:	9a00      	ldr	r2, [sp, #0]
 8002514:	601a      	str	r2, [r3, #0]
 8002516:	9b04      	ldr	r3, [sp, #16]
 8002518:	2b0e      	cmp	r3, #14
 800251a:	f200 80a8 	bhi.w	800266e <_dtoa_r+0x47e>
 800251e:	2d00      	cmp	r5, #0
 8002520:	f000 80a5 	beq.w	800266e <_dtoa_r+0x47e>
 8002524:	f1bb 0f00 	cmp.w	fp, #0
 8002528:	dd38      	ble.n	800259c <_dtoa_r+0x3ac>
 800252a:	4bc0      	ldr	r3, [pc, #768]	; (800282c <_dtoa_r+0x63c>)
 800252c:	f00b 020f 	and.w	r2, fp, #15
 8002530:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002534:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002538:	e9d3 6700 	ldrd	r6, r7, [r3]
 800253c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002540:	d019      	beq.n	8002576 <_dtoa_r+0x386>
 8002542:	4bbb      	ldr	r3, [pc, #748]	; (8002830 <_dtoa_r+0x640>)
 8002544:	ec51 0b18 	vmov	r0, r1, d8
 8002548:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800254c:	f7fe f97e 	bl	800084c <__aeabi_ddiv>
 8002550:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002554:	f008 080f 	and.w	r8, r8, #15
 8002558:	2503      	movs	r5, #3
 800255a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002830 <_dtoa_r+0x640>
 800255e:	f1b8 0f00 	cmp.w	r8, #0
 8002562:	d10a      	bne.n	800257a <_dtoa_r+0x38a>
 8002564:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002568:	4632      	mov	r2, r6
 800256a:	463b      	mov	r3, r7
 800256c:	f7fe f96e 	bl	800084c <__aeabi_ddiv>
 8002570:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002574:	e02b      	b.n	80025ce <_dtoa_r+0x3de>
 8002576:	2502      	movs	r5, #2
 8002578:	e7ef      	b.n	800255a <_dtoa_r+0x36a>
 800257a:	f018 0f01 	tst.w	r8, #1
 800257e:	d008      	beq.n	8002592 <_dtoa_r+0x3a2>
 8002580:	4630      	mov	r0, r6
 8002582:	4639      	mov	r1, r7
 8002584:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002588:	f7fe f836 	bl	80005f8 <__aeabi_dmul>
 800258c:	3501      	adds	r5, #1
 800258e:	4606      	mov	r6, r0
 8002590:	460f      	mov	r7, r1
 8002592:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002596:	f109 0908 	add.w	r9, r9, #8
 800259a:	e7e0      	b.n	800255e <_dtoa_r+0x36e>
 800259c:	f000 809f 	beq.w	80026de <_dtoa_r+0x4ee>
 80025a0:	f1cb 0600 	rsb	r6, fp, #0
 80025a4:	4ba1      	ldr	r3, [pc, #644]	; (800282c <_dtoa_r+0x63c>)
 80025a6:	4fa2      	ldr	r7, [pc, #648]	; (8002830 <_dtoa_r+0x640>)
 80025a8:	f006 020f 	and.w	r2, r6, #15
 80025ac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025b4:	ec51 0b18 	vmov	r0, r1, d8
 80025b8:	f7fe f81e 	bl	80005f8 <__aeabi_dmul>
 80025bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025c0:	1136      	asrs	r6, r6, #4
 80025c2:	2300      	movs	r3, #0
 80025c4:	2502      	movs	r5, #2
 80025c6:	2e00      	cmp	r6, #0
 80025c8:	d17e      	bne.n	80026c8 <_dtoa_r+0x4d8>
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	d1d0      	bne.n	8002570 <_dtoa_r+0x380>
 80025ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80025d0:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	f000 8084 	beq.w	80026e2 <_dtoa_r+0x4f2>
 80025da:	4b96      	ldr	r3, [pc, #600]	; (8002834 <_dtoa_r+0x644>)
 80025dc:	2200      	movs	r2, #0
 80025de:	4640      	mov	r0, r8
 80025e0:	4649      	mov	r1, r9
 80025e2:	f7fe fa7b 	bl	8000adc <__aeabi_dcmplt>
 80025e6:	2800      	cmp	r0, #0
 80025e8:	d07b      	beq.n	80026e2 <_dtoa_r+0x4f2>
 80025ea:	9b04      	ldr	r3, [sp, #16]
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d078      	beq.n	80026e2 <_dtoa_r+0x4f2>
 80025f0:	9b01      	ldr	r3, [sp, #4]
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	dd39      	ble.n	800266a <_dtoa_r+0x47a>
 80025f6:	4b90      	ldr	r3, [pc, #576]	; (8002838 <_dtoa_r+0x648>)
 80025f8:	2200      	movs	r2, #0
 80025fa:	4640      	mov	r0, r8
 80025fc:	4649      	mov	r1, r9
 80025fe:	f7fd fffb 	bl	80005f8 <__aeabi_dmul>
 8002602:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002606:	9e01      	ldr	r6, [sp, #4]
 8002608:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
 800260c:	3501      	adds	r5, #1
 800260e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002612:	4628      	mov	r0, r5
 8002614:	f7fd ff86 	bl	8000524 <__aeabi_i2d>
 8002618:	4642      	mov	r2, r8
 800261a:	464b      	mov	r3, r9
 800261c:	f7fd ffec 	bl	80005f8 <__aeabi_dmul>
 8002620:	4b86      	ldr	r3, [pc, #536]	; (800283c <_dtoa_r+0x64c>)
 8002622:	2200      	movs	r2, #0
 8002624:	f7fd fe32 	bl	800028c <__adddf3>
 8002628:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800262c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002630:	9303      	str	r3, [sp, #12]
 8002632:	2e00      	cmp	r6, #0
 8002634:	d158      	bne.n	80026e8 <_dtoa_r+0x4f8>
 8002636:	4b82      	ldr	r3, [pc, #520]	; (8002840 <_dtoa_r+0x650>)
 8002638:	2200      	movs	r2, #0
 800263a:	4640      	mov	r0, r8
 800263c:	4649      	mov	r1, r9
 800263e:	f7fd fe23 	bl	8000288 <__aeabi_dsub>
 8002642:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002646:	4680      	mov	r8, r0
 8002648:	4689      	mov	r9, r1
 800264a:	f7fe fa65 	bl	8000b18 <__aeabi_dcmpgt>
 800264e:	2800      	cmp	r0, #0
 8002650:	f040 8296 	bne.w	8002b80 <_dtoa_r+0x990>
 8002654:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002658:	4640      	mov	r0, r8
 800265a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800265e:	4649      	mov	r1, r9
 8002660:	f7fe fa3c 	bl	8000adc <__aeabi_dcmplt>
 8002664:	2800      	cmp	r0, #0
 8002666:	f040 8289 	bne.w	8002b7c <_dtoa_r+0x98c>
 800266a:	ed8d 8b02 	vstr	d8, [sp, #8]
 800266e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002670:	2b00      	cmp	r3, #0
 8002672:	f2c0 814e 	blt.w	8002912 <_dtoa_r+0x722>
 8002676:	f1bb 0f0e 	cmp.w	fp, #14
 800267a:	f300 814a 	bgt.w	8002912 <_dtoa_r+0x722>
 800267e:	4b6b      	ldr	r3, [pc, #428]	; (800282c <_dtoa_r+0x63c>)
 8002680:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002684:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800268a:	2b00      	cmp	r3, #0
 800268c:	f280 80dc 	bge.w	8002848 <_dtoa_r+0x658>
 8002690:	9b04      	ldr	r3, [sp, #16]
 8002692:	2b00      	cmp	r3, #0
 8002694:	f300 80d8 	bgt.w	8002848 <_dtoa_r+0x658>
 8002698:	f040 826f 	bne.w	8002b7a <_dtoa_r+0x98a>
 800269c:	4b68      	ldr	r3, [pc, #416]	; (8002840 <_dtoa_r+0x650>)
 800269e:	2200      	movs	r2, #0
 80026a0:	4640      	mov	r0, r8
 80026a2:	4649      	mov	r1, r9
 80026a4:	f7fd ffa8 	bl	80005f8 <__aeabi_dmul>
 80026a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80026ac:	f7fe fa2a 	bl	8000b04 <__aeabi_dcmpge>
 80026b0:	9e04      	ldr	r6, [sp, #16]
 80026b2:	4637      	mov	r7, r6
 80026b4:	2800      	cmp	r0, #0
 80026b6:	f040 8245 	bne.w	8002b44 <_dtoa_r+0x954>
 80026ba:	9d00      	ldr	r5, [sp, #0]
 80026bc:	2331      	movs	r3, #49	; 0x31
 80026be:	f805 3b01 	strb.w	r3, [r5], #1
 80026c2:	f10b 0b01 	add.w	fp, fp, #1
 80026c6:	e241      	b.n	8002b4c <_dtoa_r+0x95c>
 80026c8:	07f2      	lsls	r2, r6, #31
 80026ca:	d505      	bpl.n	80026d8 <_dtoa_r+0x4e8>
 80026cc:	e9d7 2300 	ldrd	r2, r3, [r7]
 80026d0:	f7fd ff92 	bl	80005f8 <__aeabi_dmul>
 80026d4:	3501      	adds	r5, #1
 80026d6:	2301      	movs	r3, #1
 80026d8:	1076      	asrs	r6, r6, #1
 80026da:	3708      	adds	r7, #8
 80026dc:	e773      	b.n	80025c6 <_dtoa_r+0x3d6>
 80026de:	2502      	movs	r5, #2
 80026e0:	e775      	b.n	80025ce <_dtoa_r+0x3de>
 80026e2:	9e04      	ldr	r6, [sp, #16]
 80026e4:	465f      	mov	r7, fp
 80026e6:	e792      	b.n	800260e <_dtoa_r+0x41e>
 80026e8:	9900      	ldr	r1, [sp, #0]
 80026ea:	4b50      	ldr	r3, [pc, #320]	; (800282c <_dtoa_r+0x63c>)
 80026ec:	ed9d 7b02 	vldr	d7, [sp, #8]
 80026f0:	4431      	add	r1, r6
 80026f2:	9102      	str	r1, [sp, #8]
 80026f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80026f6:	eeb0 9a47 	vmov.f32	s18, s14
 80026fa:	eef0 9a67 	vmov.f32	s19, s15
 80026fe:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002702:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002706:	2900      	cmp	r1, #0
 8002708:	d044      	beq.n	8002794 <_dtoa_r+0x5a4>
 800270a:	494e      	ldr	r1, [pc, #312]	; (8002844 <_dtoa_r+0x654>)
 800270c:	2000      	movs	r0, #0
 800270e:	f7fe f89d 	bl	800084c <__aeabi_ddiv>
 8002712:	ec53 2b19 	vmov	r2, r3, d9
 8002716:	f7fd fdb7 	bl	8000288 <__aeabi_dsub>
 800271a:	9d00      	ldr	r5, [sp, #0]
 800271c:	ec41 0b19 	vmov	d9, r0, r1
 8002720:	4649      	mov	r1, r9
 8002722:	4640      	mov	r0, r8
 8002724:	f7fe fa18 	bl	8000b58 <__aeabi_d2iz>
 8002728:	4606      	mov	r6, r0
 800272a:	f7fd fefb 	bl	8000524 <__aeabi_i2d>
 800272e:	4602      	mov	r2, r0
 8002730:	460b      	mov	r3, r1
 8002732:	4640      	mov	r0, r8
 8002734:	4649      	mov	r1, r9
 8002736:	f7fd fda7 	bl	8000288 <__aeabi_dsub>
 800273a:	3630      	adds	r6, #48	; 0x30
 800273c:	f805 6b01 	strb.w	r6, [r5], #1
 8002740:	ec53 2b19 	vmov	r2, r3, d9
 8002744:	4680      	mov	r8, r0
 8002746:	4689      	mov	r9, r1
 8002748:	f7fe f9c8 	bl	8000adc <__aeabi_dcmplt>
 800274c:	2800      	cmp	r0, #0
 800274e:	d164      	bne.n	800281a <_dtoa_r+0x62a>
 8002750:	4642      	mov	r2, r8
 8002752:	464b      	mov	r3, r9
 8002754:	4937      	ldr	r1, [pc, #220]	; (8002834 <_dtoa_r+0x644>)
 8002756:	2000      	movs	r0, #0
 8002758:	f7fd fd96 	bl	8000288 <__aeabi_dsub>
 800275c:	ec53 2b19 	vmov	r2, r3, d9
 8002760:	f7fe f9bc 	bl	8000adc <__aeabi_dcmplt>
 8002764:	2800      	cmp	r0, #0
 8002766:	f040 80b6 	bne.w	80028d6 <_dtoa_r+0x6e6>
 800276a:	9b02      	ldr	r3, [sp, #8]
 800276c:	429d      	cmp	r5, r3
 800276e:	f43f af7c 	beq.w	800266a <_dtoa_r+0x47a>
 8002772:	4b31      	ldr	r3, [pc, #196]	; (8002838 <_dtoa_r+0x648>)
 8002774:	ec51 0b19 	vmov	r0, r1, d9
 8002778:	2200      	movs	r2, #0
 800277a:	f7fd ff3d 	bl	80005f8 <__aeabi_dmul>
 800277e:	4b2e      	ldr	r3, [pc, #184]	; (8002838 <_dtoa_r+0x648>)
 8002780:	ec41 0b19 	vmov	d9, r0, r1
 8002784:	2200      	movs	r2, #0
 8002786:	4640      	mov	r0, r8
 8002788:	4649      	mov	r1, r9
 800278a:	f7fd ff35 	bl	80005f8 <__aeabi_dmul>
 800278e:	4680      	mov	r8, r0
 8002790:	4689      	mov	r9, r1
 8002792:	e7c5      	b.n	8002720 <_dtoa_r+0x530>
 8002794:	ec51 0b17 	vmov	r0, r1, d7
 8002798:	f7fd ff2e 	bl	80005f8 <__aeabi_dmul>
 800279c:	9b02      	ldr	r3, [sp, #8]
 800279e:	9d00      	ldr	r5, [sp, #0]
 80027a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80027a2:	ec41 0b19 	vmov	d9, r0, r1
 80027a6:	4649      	mov	r1, r9
 80027a8:	4640      	mov	r0, r8
 80027aa:	f7fe f9d5 	bl	8000b58 <__aeabi_d2iz>
 80027ae:	4606      	mov	r6, r0
 80027b0:	f7fd feb8 	bl	8000524 <__aeabi_i2d>
 80027b4:	3630      	adds	r6, #48	; 0x30
 80027b6:	4602      	mov	r2, r0
 80027b8:	460b      	mov	r3, r1
 80027ba:	4640      	mov	r0, r8
 80027bc:	4649      	mov	r1, r9
 80027be:	f7fd fd63 	bl	8000288 <__aeabi_dsub>
 80027c2:	f805 6b01 	strb.w	r6, [r5], #1
 80027c6:	9b02      	ldr	r3, [sp, #8]
 80027c8:	429d      	cmp	r5, r3
 80027ca:	4680      	mov	r8, r0
 80027cc:	4689      	mov	r9, r1
 80027ce:	f04f 0200 	mov.w	r2, #0
 80027d2:	d124      	bne.n	800281e <_dtoa_r+0x62e>
 80027d4:	4b1b      	ldr	r3, [pc, #108]	; (8002844 <_dtoa_r+0x654>)
 80027d6:	ec51 0b19 	vmov	r0, r1, d9
 80027da:	f7fd fd57 	bl	800028c <__adddf3>
 80027de:	4602      	mov	r2, r0
 80027e0:	460b      	mov	r3, r1
 80027e2:	4640      	mov	r0, r8
 80027e4:	4649      	mov	r1, r9
 80027e6:	f7fe f997 	bl	8000b18 <__aeabi_dcmpgt>
 80027ea:	2800      	cmp	r0, #0
 80027ec:	d173      	bne.n	80028d6 <_dtoa_r+0x6e6>
 80027ee:	ec53 2b19 	vmov	r2, r3, d9
 80027f2:	4914      	ldr	r1, [pc, #80]	; (8002844 <_dtoa_r+0x654>)
 80027f4:	2000      	movs	r0, #0
 80027f6:	f7fd fd47 	bl	8000288 <__aeabi_dsub>
 80027fa:	4602      	mov	r2, r0
 80027fc:	460b      	mov	r3, r1
 80027fe:	4640      	mov	r0, r8
 8002800:	4649      	mov	r1, r9
 8002802:	f7fe f96b 	bl	8000adc <__aeabi_dcmplt>
 8002806:	2800      	cmp	r0, #0
 8002808:	f43f af2f 	beq.w	800266a <_dtoa_r+0x47a>
 800280c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800280e:	1e6b      	subs	r3, r5, #1
 8002810:	930f      	str	r3, [sp, #60]	; 0x3c
 8002812:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002816:	2b30      	cmp	r3, #48	; 0x30
 8002818:	d0f8      	beq.n	800280c <_dtoa_r+0x61c>
 800281a:	46bb      	mov	fp, r7
 800281c:	e04a      	b.n	80028b4 <_dtoa_r+0x6c4>
 800281e:	4b06      	ldr	r3, [pc, #24]	; (8002838 <_dtoa_r+0x648>)
 8002820:	f7fd feea 	bl	80005f8 <__aeabi_dmul>
 8002824:	4680      	mov	r8, r0
 8002826:	4689      	mov	r9, r1
 8002828:	e7bd      	b.n	80027a6 <_dtoa_r+0x5b6>
 800282a:	bf00      	nop
 800282c:	080047d0 	.word	0x080047d0
 8002830:	080047a8 	.word	0x080047a8
 8002834:	3ff00000 	.word	0x3ff00000
 8002838:	40240000 	.word	0x40240000
 800283c:	401c0000 	.word	0x401c0000
 8002840:	40140000 	.word	0x40140000
 8002844:	3fe00000 	.word	0x3fe00000
 8002848:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800284c:	9d00      	ldr	r5, [sp, #0]
 800284e:	4642      	mov	r2, r8
 8002850:	464b      	mov	r3, r9
 8002852:	4630      	mov	r0, r6
 8002854:	4639      	mov	r1, r7
 8002856:	f7fd fff9 	bl	800084c <__aeabi_ddiv>
 800285a:	f7fe f97d 	bl	8000b58 <__aeabi_d2iz>
 800285e:	9001      	str	r0, [sp, #4]
 8002860:	f7fd fe60 	bl	8000524 <__aeabi_i2d>
 8002864:	4642      	mov	r2, r8
 8002866:	464b      	mov	r3, r9
 8002868:	f7fd fec6 	bl	80005f8 <__aeabi_dmul>
 800286c:	4602      	mov	r2, r0
 800286e:	460b      	mov	r3, r1
 8002870:	4630      	mov	r0, r6
 8002872:	4639      	mov	r1, r7
 8002874:	f7fd fd08 	bl	8000288 <__aeabi_dsub>
 8002878:	9e01      	ldr	r6, [sp, #4]
 800287a:	9f04      	ldr	r7, [sp, #16]
 800287c:	3630      	adds	r6, #48	; 0x30
 800287e:	f805 6b01 	strb.w	r6, [r5], #1
 8002882:	9e00      	ldr	r6, [sp, #0]
 8002884:	1bae      	subs	r6, r5, r6
 8002886:	42b7      	cmp	r7, r6
 8002888:	4602      	mov	r2, r0
 800288a:	460b      	mov	r3, r1
 800288c:	d134      	bne.n	80028f8 <_dtoa_r+0x708>
 800288e:	f7fd fcfd 	bl	800028c <__adddf3>
 8002892:	4642      	mov	r2, r8
 8002894:	464b      	mov	r3, r9
 8002896:	4606      	mov	r6, r0
 8002898:	460f      	mov	r7, r1
 800289a:	f7fe f93d 	bl	8000b18 <__aeabi_dcmpgt>
 800289e:	b9c8      	cbnz	r0, 80028d4 <_dtoa_r+0x6e4>
 80028a0:	4642      	mov	r2, r8
 80028a2:	464b      	mov	r3, r9
 80028a4:	4630      	mov	r0, r6
 80028a6:	4639      	mov	r1, r7
 80028a8:	f7fe f90e 	bl	8000ac8 <__aeabi_dcmpeq>
 80028ac:	b110      	cbz	r0, 80028b4 <_dtoa_r+0x6c4>
 80028ae:	9b01      	ldr	r3, [sp, #4]
 80028b0:	07db      	lsls	r3, r3, #31
 80028b2:	d40f      	bmi.n	80028d4 <_dtoa_r+0x6e4>
 80028b4:	4651      	mov	r1, sl
 80028b6:	4620      	mov	r0, r4
 80028b8:	f000 feca 	bl	8003650 <_Bfree>
 80028bc:	2300      	movs	r3, #0
 80028be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80028c0:	702b      	strb	r3, [r5, #0]
 80028c2:	f10b 0301 	add.w	r3, fp, #1
 80028c6:	6013      	str	r3, [r2, #0]
 80028c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	f43f ace2 	beq.w	8002294 <_dtoa_r+0xa4>
 80028d0:	601d      	str	r5, [r3, #0]
 80028d2:	e4df      	b.n	8002294 <_dtoa_r+0xa4>
 80028d4:	465f      	mov	r7, fp
 80028d6:	462b      	mov	r3, r5
 80028d8:	461d      	mov	r5, r3
 80028da:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80028de:	2a39      	cmp	r2, #57	; 0x39
 80028e0:	d106      	bne.n	80028f0 <_dtoa_r+0x700>
 80028e2:	9a00      	ldr	r2, [sp, #0]
 80028e4:	429a      	cmp	r2, r3
 80028e6:	d1f7      	bne.n	80028d8 <_dtoa_r+0x6e8>
 80028e8:	9900      	ldr	r1, [sp, #0]
 80028ea:	2230      	movs	r2, #48	; 0x30
 80028ec:	3701      	adds	r7, #1
 80028ee:	700a      	strb	r2, [r1, #0]
 80028f0:	781a      	ldrb	r2, [r3, #0]
 80028f2:	3201      	adds	r2, #1
 80028f4:	701a      	strb	r2, [r3, #0]
 80028f6:	e790      	b.n	800281a <_dtoa_r+0x62a>
 80028f8:	4ba3      	ldr	r3, [pc, #652]	; (8002b88 <_dtoa_r+0x998>)
 80028fa:	2200      	movs	r2, #0
 80028fc:	f7fd fe7c 	bl	80005f8 <__aeabi_dmul>
 8002900:	2200      	movs	r2, #0
 8002902:	2300      	movs	r3, #0
 8002904:	4606      	mov	r6, r0
 8002906:	460f      	mov	r7, r1
 8002908:	f7fe f8de 	bl	8000ac8 <__aeabi_dcmpeq>
 800290c:	2800      	cmp	r0, #0
 800290e:	d09e      	beq.n	800284e <_dtoa_r+0x65e>
 8002910:	e7d0      	b.n	80028b4 <_dtoa_r+0x6c4>
 8002912:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002914:	2a00      	cmp	r2, #0
 8002916:	f000 80ca 	beq.w	8002aae <_dtoa_r+0x8be>
 800291a:	9a07      	ldr	r2, [sp, #28]
 800291c:	2a01      	cmp	r2, #1
 800291e:	f300 80ad 	bgt.w	8002a7c <_dtoa_r+0x88c>
 8002922:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002924:	2a00      	cmp	r2, #0
 8002926:	f000 80a5 	beq.w	8002a74 <_dtoa_r+0x884>
 800292a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800292e:	9e08      	ldr	r6, [sp, #32]
 8002930:	9d05      	ldr	r5, [sp, #20]
 8002932:	9a05      	ldr	r2, [sp, #20]
 8002934:	441a      	add	r2, r3
 8002936:	9205      	str	r2, [sp, #20]
 8002938:	9a06      	ldr	r2, [sp, #24]
 800293a:	2101      	movs	r1, #1
 800293c:	441a      	add	r2, r3
 800293e:	4620      	mov	r0, r4
 8002940:	9206      	str	r2, [sp, #24]
 8002942:	f000 ff3b 	bl	80037bc <__i2b>
 8002946:	4607      	mov	r7, r0
 8002948:	b165      	cbz	r5, 8002964 <_dtoa_r+0x774>
 800294a:	9b06      	ldr	r3, [sp, #24]
 800294c:	2b00      	cmp	r3, #0
 800294e:	dd09      	ble.n	8002964 <_dtoa_r+0x774>
 8002950:	42ab      	cmp	r3, r5
 8002952:	9a05      	ldr	r2, [sp, #20]
 8002954:	bfa8      	it	ge
 8002956:	462b      	movge	r3, r5
 8002958:	1ad2      	subs	r2, r2, r3
 800295a:	9205      	str	r2, [sp, #20]
 800295c:	9a06      	ldr	r2, [sp, #24]
 800295e:	1aed      	subs	r5, r5, r3
 8002960:	1ad3      	subs	r3, r2, r3
 8002962:	9306      	str	r3, [sp, #24]
 8002964:	9b08      	ldr	r3, [sp, #32]
 8002966:	b1f3      	cbz	r3, 80029a6 <_dtoa_r+0x7b6>
 8002968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800296a:	2b00      	cmp	r3, #0
 800296c:	f000 80a3 	beq.w	8002ab6 <_dtoa_r+0x8c6>
 8002970:	2e00      	cmp	r6, #0
 8002972:	dd10      	ble.n	8002996 <_dtoa_r+0x7a6>
 8002974:	4639      	mov	r1, r7
 8002976:	4632      	mov	r2, r6
 8002978:	4620      	mov	r0, r4
 800297a:	f000 ffdf 	bl	800393c <__pow5mult>
 800297e:	4652      	mov	r2, sl
 8002980:	4601      	mov	r1, r0
 8002982:	4607      	mov	r7, r0
 8002984:	4620      	mov	r0, r4
 8002986:	f000 ff2f 	bl	80037e8 <__multiply>
 800298a:	4651      	mov	r1, sl
 800298c:	4680      	mov	r8, r0
 800298e:	4620      	mov	r0, r4
 8002990:	f000 fe5e 	bl	8003650 <_Bfree>
 8002994:	46c2      	mov	sl, r8
 8002996:	9b08      	ldr	r3, [sp, #32]
 8002998:	1b9a      	subs	r2, r3, r6
 800299a:	d004      	beq.n	80029a6 <_dtoa_r+0x7b6>
 800299c:	4651      	mov	r1, sl
 800299e:	4620      	mov	r0, r4
 80029a0:	f000 ffcc 	bl	800393c <__pow5mult>
 80029a4:	4682      	mov	sl, r0
 80029a6:	2101      	movs	r1, #1
 80029a8:	4620      	mov	r0, r4
 80029aa:	f000 ff07 	bl	80037bc <__i2b>
 80029ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	4606      	mov	r6, r0
 80029b4:	f340 8081 	ble.w	8002aba <_dtoa_r+0x8ca>
 80029b8:	461a      	mov	r2, r3
 80029ba:	4601      	mov	r1, r0
 80029bc:	4620      	mov	r0, r4
 80029be:	f000 ffbd 	bl	800393c <__pow5mult>
 80029c2:	9b07      	ldr	r3, [sp, #28]
 80029c4:	2b01      	cmp	r3, #1
 80029c6:	4606      	mov	r6, r0
 80029c8:	dd7a      	ble.n	8002ac0 <_dtoa_r+0x8d0>
 80029ca:	f04f 0800 	mov.w	r8, #0
 80029ce:	6933      	ldr	r3, [r6, #16]
 80029d0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80029d4:	6918      	ldr	r0, [r3, #16]
 80029d6:	f000 fea3 	bl	8003720 <__hi0bits>
 80029da:	f1c0 0020 	rsb	r0, r0, #32
 80029de:	9b06      	ldr	r3, [sp, #24]
 80029e0:	4418      	add	r0, r3
 80029e2:	f010 001f 	ands.w	r0, r0, #31
 80029e6:	f000 8094 	beq.w	8002b12 <_dtoa_r+0x922>
 80029ea:	f1c0 0320 	rsb	r3, r0, #32
 80029ee:	2b04      	cmp	r3, #4
 80029f0:	f340 8085 	ble.w	8002afe <_dtoa_r+0x90e>
 80029f4:	9b05      	ldr	r3, [sp, #20]
 80029f6:	f1c0 001c 	rsb	r0, r0, #28
 80029fa:	4403      	add	r3, r0
 80029fc:	9305      	str	r3, [sp, #20]
 80029fe:	9b06      	ldr	r3, [sp, #24]
 8002a00:	4403      	add	r3, r0
 8002a02:	4405      	add	r5, r0
 8002a04:	9306      	str	r3, [sp, #24]
 8002a06:	9b05      	ldr	r3, [sp, #20]
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	dd05      	ble.n	8002a18 <_dtoa_r+0x828>
 8002a0c:	4651      	mov	r1, sl
 8002a0e:	461a      	mov	r2, r3
 8002a10:	4620      	mov	r0, r4
 8002a12:	f000 ffed 	bl	80039f0 <__lshift>
 8002a16:	4682      	mov	sl, r0
 8002a18:	9b06      	ldr	r3, [sp, #24]
 8002a1a:	2b00      	cmp	r3, #0
 8002a1c:	dd05      	ble.n	8002a2a <_dtoa_r+0x83a>
 8002a1e:	4631      	mov	r1, r6
 8002a20:	461a      	mov	r2, r3
 8002a22:	4620      	mov	r0, r4
 8002a24:	f000 ffe4 	bl	80039f0 <__lshift>
 8002a28:	4606      	mov	r6, r0
 8002a2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d072      	beq.n	8002b16 <_dtoa_r+0x926>
 8002a30:	4631      	mov	r1, r6
 8002a32:	4650      	mov	r0, sl
 8002a34:	f001 f848 	bl	8003ac8 <__mcmp>
 8002a38:	2800      	cmp	r0, #0
 8002a3a:	da6c      	bge.n	8002b16 <_dtoa_r+0x926>
 8002a3c:	2300      	movs	r3, #0
 8002a3e:	4651      	mov	r1, sl
 8002a40:	220a      	movs	r2, #10
 8002a42:	4620      	mov	r0, r4
 8002a44:	f000 fe26 	bl	8003694 <__multadd>
 8002a48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a4a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002a4e:	4682      	mov	sl, r0
 8002a50:	2b00      	cmp	r3, #0
 8002a52:	f000 81b0 	beq.w	8002db6 <_dtoa_r+0xbc6>
 8002a56:	2300      	movs	r3, #0
 8002a58:	4639      	mov	r1, r7
 8002a5a:	220a      	movs	r2, #10
 8002a5c:	4620      	mov	r0, r4
 8002a5e:	f000 fe19 	bl	8003694 <__multadd>
 8002a62:	9b01      	ldr	r3, [sp, #4]
 8002a64:	2b00      	cmp	r3, #0
 8002a66:	4607      	mov	r7, r0
 8002a68:	f300 8096 	bgt.w	8002b98 <_dtoa_r+0x9a8>
 8002a6c:	9b07      	ldr	r3, [sp, #28]
 8002a6e:	2b02      	cmp	r3, #2
 8002a70:	dc59      	bgt.n	8002b26 <_dtoa_r+0x936>
 8002a72:	e091      	b.n	8002b98 <_dtoa_r+0x9a8>
 8002a74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002a76:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002a7a:	e758      	b.n	800292e <_dtoa_r+0x73e>
 8002a7c:	9b04      	ldr	r3, [sp, #16]
 8002a7e:	1e5e      	subs	r6, r3, #1
 8002a80:	9b08      	ldr	r3, [sp, #32]
 8002a82:	42b3      	cmp	r3, r6
 8002a84:	bfbf      	itttt	lt
 8002a86:	9b08      	ldrlt	r3, [sp, #32]
 8002a88:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002a8a:	9608      	strlt	r6, [sp, #32]
 8002a8c:	1af3      	sublt	r3, r6, r3
 8002a8e:	bfb4      	ite	lt
 8002a90:	18d2      	addlt	r2, r2, r3
 8002a92:	1b9e      	subge	r6, r3, r6
 8002a94:	9b04      	ldr	r3, [sp, #16]
 8002a96:	bfbc      	itt	lt
 8002a98:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002a9a:	2600      	movlt	r6, #0
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	bfb7      	itett	lt
 8002aa0:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8002aa4:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8002aa8:	1a9d      	sublt	r5, r3, r2
 8002aaa:	2300      	movlt	r3, #0
 8002aac:	e741      	b.n	8002932 <_dtoa_r+0x742>
 8002aae:	9e08      	ldr	r6, [sp, #32]
 8002ab0:	9d05      	ldr	r5, [sp, #20]
 8002ab2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002ab4:	e748      	b.n	8002948 <_dtoa_r+0x758>
 8002ab6:	9a08      	ldr	r2, [sp, #32]
 8002ab8:	e770      	b.n	800299c <_dtoa_r+0x7ac>
 8002aba:	9b07      	ldr	r3, [sp, #28]
 8002abc:	2b01      	cmp	r3, #1
 8002abe:	dc19      	bgt.n	8002af4 <_dtoa_r+0x904>
 8002ac0:	9b02      	ldr	r3, [sp, #8]
 8002ac2:	b9bb      	cbnz	r3, 8002af4 <_dtoa_r+0x904>
 8002ac4:	9b03      	ldr	r3, [sp, #12]
 8002ac6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002aca:	b99b      	cbnz	r3, 8002af4 <_dtoa_r+0x904>
 8002acc:	9b03      	ldr	r3, [sp, #12]
 8002ace:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002ad2:	0d1b      	lsrs	r3, r3, #20
 8002ad4:	051b      	lsls	r3, r3, #20
 8002ad6:	b183      	cbz	r3, 8002afa <_dtoa_r+0x90a>
 8002ad8:	9b05      	ldr	r3, [sp, #20]
 8002ada:	3301      	adds	r3, #1
 8002adc:	9305      	str	r3, [sp, #20]
 8002ade:	9b06      	ldr	r3, [sp, #24]
 8002ae0:	3301      	adds	r3, #1
 8002ae2:	9306      	str	r3, [sp, #24]
 8002ae4:	f04f 0801 	mov.w	r8, #1
 8002ae8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	f47f af6f 	bne.w	80029ce <_dtoa_r+0x7de>
 8002af0:	2001      	movs	r0, #1
 8002af2:	e774      	b.n	80029de <_dtoa_r+0x7ee>
 8002af4:	f04f 0800 	mov.w	r8, #0
 8002af8:	e7f6      	b.n	8002ae8 <_dtoa_r+0x8f8>
 8002afa:	4698      	mov	r8, r3
 8002afc:	e7f4      	b.n	8002ae8 <_dtoa_r+0x8f8>
 8002afe:	d082      	beq.n	8002a06 <_dtoa_r+0x816>
 8002b00:	9a05      	ldr	r2, [sp, #20]
 8002b02:	331c      	adds	r3, #28
 8002b04:	441a      	add	r2, r3
 8002b06:	9205      	str	r2, [sp, #20]
 8002b08:	9a06      	ldr	r2, [sp, #24]
 8002b0a:	441a      	add	r2, r3
 8002b0c:	441d      	add	r5, r3
 8002b0e:	9206      	str	r2, [sp, #24]
 8002b10:	e779      	b.n	8002a06 <_dtoa_r+0x816>
 8002b12:	4603      	mov	r3, r0
 8002b14:	e7f4      	b.n	8002b00 <_dtoa_r+0x910>
 8002b16:	9b04      	ldr	r3, [sp, #16]
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	dc37      	bgt.n	8002b8c <_dtoa_r+0x99c>
 8002b1c:	9b07      	ldr	r3, [sp, #28]
 8002b1e:	2b02      	cmp	r3, #2
 8002b20:	dd34      	ble.n	8002b8c <_dtoa_r+0x99c>
 8002b22:	9b04      	ldr	r3, [sp, #16]
 8002b24:	9301      	str	r3, [sp, #4]
 8002b26:	9b01      	ldr	r3, [sp, #4]
 8002b28:	b963      	cbnz	r3, 8002b44 <_dtoa_r+0x954>
 8002b2a:	4631      	mov	r1, r6
 8002b2c:	2205      	movs	r2, #5
 8002b2e:	4620      	mov	r0, r4
 8002b30:	f000 fdb0 	bl	8003694 <__multadd>
 8002b34:	4601      	mov	r1, r0
 8002b36:	4606      	mov	r6, r0
 8002b38:	4650      	mov	r0, sl
 8002b3a:	f000 ffc5 	bl	8003ac8 <__mcmp>
 8002b3e:	2800      	cmp	r0, #0
 8002b40:	f73f adbb 	bgt.w	80026ba <_dtoa_r+0x4ca>
 8002b44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b46:	9d00      	ldr	r5, [sp, #0]
 8002b48:	ea6f 0b03 	mvn.w	fp, r3
 8002b4c:	f04f 0800 	mov.w	r8, #0
 8002b50:	4631      	mov	r1, r6
 8002b52:	4620      	mov	r0, r4
 8002b54:	f000 fd7c 	bl	8003650 <_Bfree>
 8002b58:	2f00      	cmp	r7, #0
 8002b5a:	f43f aeab 	beq.w	80028b4 <_dtoa_r+0x6c4>
 8002b5e:	f1b8 0f00 	cmp.w	r8, #0
 8002b62:	d005      	beq.n	8002b70 <_dtoa_r+0x980>
 8002b64:	45b8      	cmp	r8, r7
 8002b66:	d003      	beq.n	8002b70 <_dtoa_r+0x980>
 8002b68:	4641      	mov	r1, r8
 8002b6a:	4620      	mov	r0, r4
 8002b6c:	f000 fd70 	bl	8003650 <_Bfree>
 8002b70:	4639      	mov	r1, r7
 8002b72:	4620      	mov	r0, r4
 8002b74:	f000 fd6c 	bl	8003650 <_Bfree>
 8002b78:	e69c      	b.n	80028b4 <_dtoa_r+0x6c4>
 8002b7a:	2600      	movs	r6, #0
 8002b7c:	4637      	mov	r7, r6
 8002b7e:	e7e1      	b.n	8002b44 <_dtoa_r+0x954>
 8002b80:	46bb      	mov	fp, r7
 8002b82:	4637      	mov	r7, r6
 8002b84:	e599      	b.n	80026ba <_dtoa_r+0x4ca>
 8002b86:	bf00      	nop
 8002b88:	40240000 	.word	0x40240000
 8002b8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	f000 80c8 	beq.w	8002d24 <_dtoa_r+0xb34>
 8002b94:	9b04      	ldr	r3, [sp, #16]
 8002b96:	9301      	str	r3, [sp, #4]
 8002b98:	2d00      	cmp	r5, #0
 8002b9a:	dd05      	ble.n	8002ba8 <_dtoa_r+0x9b8>
 8002b9c:	4639      	mov	r1, r7
 8002b9e:	462a      	mov	r2, r5
 8002ba0:	4620      	mov	r0, r4
 8002ba2:	f000 ff25 	bl	80039f0 <__lshift>
 8002ba6:	4607      	mov	r7, r0
 8002ba8:	f1b8 0f00 	cmp.w	r8, #0
 8002bac:	d05b      	beq.n	8002c66 <_dtoa_r+0xa76>
 8002bae:	6879      	ldr	r1, [r7, #4]
 8002bb0:	4620      	mov	r0, r4
 8002bb2:	f000 fd0d 	bl	80035d0 <_Balloc>
 8002bb6:	4605      	mov	r5, r0
 8002bb8:	b928      	cbnz	r0, 8002bc6 <_dtoa_r+0x9d6>
 8002bba:	4b83      	ldr	r3, [pc, #524]	; (8002dc8 <_dtoa_r+0xbd8>)
 8002bbc:	4602      	mov	r2, r0
 8002bbe:	f240 21ef 	movw	r1, #751	; 0x2ef
 8002bc2:	f7ff bb2e 	b.w	8002222 <_dtoa_r+0x32>
 8002bc6:	693a      	ldr	r2, [r7, #16]
 8002bc8:	3202      	adds	r2, #2
 8002bca:	0092      	lsls	r2, r2, #2
 8002bcc:	f107 010c 	add.w	r1, r7, #12
 8002bd0:	300c      	adds	r0, #12
 8002bd2:	f001 fa75 	bl	80040c0 <memcpy>
 8002bd6:	2201      	movs	r2, #1
 8002bd8:	4629      	mov	r1, r5
 8002bda:	4620      	mov	r0, r4
 8002bdc:	f000 ff08 	bl	80039f0 <__lshift>
 8002be0:	9b00      	ldr	r3, [sp, #0]
 8002be2:	3301      	adds	r3, #1
 8002be4:	9304      	str	r3, [sp, #16]
 8002be6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bea:	4413      	add	r3, r2
 8002bec:	9308      	str	r3, [sp, #32]
 8002bee:	9b02      	ldr	r3, [sp, #8]
 8002bf0:	f003 0301 	and.w	r3, r3, #1
 8002bf4:	46b8      	mov	r8, r7
 8002bf6:	9306      	str	r3, [sp, #24]
 8002bf8:	4607      	mov	r7, r0
 8002bfa:	9b04      	ldr	r3, [sp, #16]
 8002bfc:	4631      	mov	r1, r6
 8002bfe:	3b01      	subs	r3, #1
 8002c00:	4650      	mov	r0, sl
 8002c02:	9301      	str	r3, [sp, #4]
 8002c04:	f7ff fa6b 	bl	80020de <quorem>
 8002c08:	4641      	mov	r1, r8
 8002c0a:	9002      	str	r0, [sp, #8]
 8002c0c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002c10:	4650      	mov	r0, sl
 8002c12:	f000 ff59 	bl	8003ac8 <__mcmp>
 8002c16:	463a      	mov	r2, r7
 8002c18:	9005      	str	r0, [sp, #20]
 8002c1a:	4631      	mov	r1, r6
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	f000 ff6f 	bl	8003b00 <__mdiff>
 8002c22:	68c2      	ldr	r2, [r0, #12]
 8002c24:	4605      	mov	r5, r0
 8002c26:	bb02      	cbnz	r2, 8002c6a <_dtoa_r+0xa7a>
 8002c28:	4601      	mov	r1, r0
 8002c2a:	4650      	mov	r0, sl
 8002c2c:	f000 ff4c 	bl	8003ac8 <__mcmp>
 8002c30:	4602      	mov	r2, r0
 8002c32:	4629      	mov	r1, r5
 8002c34:	4620      	mov	r0, r4
 8002c36:	9209      	str	r2, [sp, #36]	; 0x24
 8002c38:	f000 fd0a 	bl	8003650 <_Bfree>
 8002c3c:	9b07      	ldr	r3, [sp, #28]
 8002c3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002c40:	9d04      	ldr	r5, [sp, #16]
 8002c42:	ea43 0102 	orr.w	r1, r3, r2
 8002c46:	9b06      	ldr	r3, [sp, #24]
 8002c48:	4319      	orrs	r1, r3
 8002c4a:	d110      	bne.n	8002c6e <_dtoa_r+0xa7e>
 8002c4c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002c50:	d029      	beq.n	8002ca6 <_dtoa_r+0xab6>
 8002c52:	9b05      	ldr	r3, [sp, #20]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	dd02      	ble.n	8002c5e <_dtoa_r+0xa6e>
 8002c58:	9b02      	ldr	r3, [sp, #8]
 8002c5a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002c5e:	9b01      	ldr	r3, [sp, #4]
 8002c60:	f883 9000 	strb.w	r9, [r3]
 8002c64:	e774      	b.n	8002b50 <_dtoa_r+0x960>
 8002c66:	4638      	mov	r0, r7
 8002c68:	e7ba      	b.n	8002be0 <_dtoa_r+0x9f0>
 8002c6a:	2201      	movs	r2, #1
 8002c6c:	e7e1      	b.n	8002c32 <_dtoa_r+0xa42>
 8002c6e:	9b05      	ldr	r3, [sp, #20]
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	db04      	blt.n	8002c7e <_dtoa_r+0xa8e>
 8002c74:	9907      	ldr	r1, [sp, #28]
 8002c76:	430b      	orrs	r3, r1
 8002c78:	9906      	ldr	r1, [sp, #24]
 8002c7a:	430b      	orrs	r3, r1
 8002c7c:	d120      	bne.n	8002cc0 <_dtoa_r+0xad0>
 8002c7e:	2a00      	cmp	r2, #0
 8002c80:	dded      	ble.n	8002c5e <_dtoa_r+0xa6e>
 8002c82:	4651      	mov	r1, sl
 8002c84:	2201      	movs	r2, #1
 8002c86:	4620      	mov	r0, r4
 8002c88:	f000 feb2 	bl	80039f0 <__lshift>
 8002c8c:	4631      	mov	r1, r6
 8002c8e:	4682      	mov	sl, r0
 8002c90:	f000 ff1a 	bl	8003ac8 <__mcmp>
 8002c94:	2800      	cmp	r0, #0
 8002c96:	dc03      	bgt.n	8002ca0 <_dtoa_r+0xab0>
 8002c98:	d1e1      	bne.n	8002c5e <_dtoa_r+0xa6e>
 8002c9a:	f019 0f01 	tst.w	r9, #1
 8002c9e:	d0de      	beq.n	8002c5e <_dtoa_r+0xa6e>
 8002ca0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002ca4:	d1d8      	bne.n	8002c58 <_dtoa_r+0xa68>
 8002ca6:	9a01      	ldr	r2, [sp, #4]
 8002ca8:	2339      	movs	r3, #57	; 0x39
 8002caa:	7013      	strb	r3, [r2, #0]
 8002cac:	462b      	mov	r3, r5
 8002cae:	461d      	mov	r5, r3
 8002cb0:	3b01      	subs	r3, #1
 8002cb2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002cb6:	2a39      	cmp	r2, #57	; 0x39
 8002cb8:	d06c      	beq.n	8002d94 <_dtoa_r+0xba4>
 8002cba:	3201      	adds	r2, #1
 8002cbc:	701a      	strb	r2, [r3, #0]
 8002cbe:	e747      	b.n	8002b50 <_dtoa_r+0x960>
 8002cc0:	2a00      	cmp	r2, #0
 8002cc2:	dd07      	ble.n	8002cd4 <_dtoa_r+0xae4>
 8002cc4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002cc8:	d0ed      	beq.n	8002ca6 <_dtoa_r+0xab6>
 8002cca:	9a01      	ldr	r2, [sp, #4]
 8002ccc:	f109 0301 	add.w	r3, r9, #1
 8002cd0:	7013      	strb	r3, [r2, #0]
 8002cd2:	e73d      	b.n	8002b50 <_dtoa_r+0x960>
 8002cd4:	9b04      	ldr	r3, [sp, #16]
 8002cd6:	9a08      	ldr	r2, [sp, #32]
 8002cd8:	f803 9c01 	strb.w	r9, [r3, #-1]
 8002cdc:	4293      	cmp	r3, r2
 8002cde:	d043      	beq.n	8002d68 <_dtoa_r+0xb78>
 8002ce0:	4651      	mov	r1, sl
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	220a      	movs	r2, #10
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	f000 fcd4 	bl	8003694 <__multadd>
 8002cec:	45b8      	cmp	r8, r7
 8002cee:	4682      	mov	sl, r0
 8002cf0:	f04f 0300 	mov.w	r3, #0
 8002cf4:	f04f 020a 	mov.w	r2, #10
 8002cf8:	4641      	mov	r1, r8
 8002cfa:	4620      	mov	r0, r4
 8002cfc:	d107      	bne.n	8002d0e <_dtoa_r+0xb1e>
 8002cfe:	f000 fcc9 	bl	8003694 <__multadd>
 8002d02:	4680      	mov	r8, r0
 8002d04:	4607      	mov	r7, r0
 8002d06:	9b04      	ldr	r3, [sp, #16]
 8002d08:	3301      	adds	r3, #1
 8002d0a:	9304      	str	r3, [sp, #16]
 8002d0c:	e775      	b.n	8002bfa <_dtoa_r+0xa0a>
 8002d0e:	f000 fcc1 	bl	8003694 <__multadd>
 8002d12:	4639      	mov	r1, r7
 8002d14:	4680      	mov	r8, r0
 8002d16:	2300      	movs	r3, #0
 8002d18:	220a      	movs	r2, #10
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	f000 fcba 	bl	8003694 <__multadd>
 8002d20:	4607      	mov	r7, r0
 8002d22:	e7f0      	b.n	8002d06 <_dtoa_r+0xb16>
 8002d24:	9b04      	ldr	r3, [sp, #16]
 8002d26:	9301      	str	r3, [sp, #4]
 8002d28:	9d00      	ldr	r5, [sp, #0]
 8002d2a:	4631      	mov	r1, r6
 8002d2c:	4650      	mov	r0, sl
 8002d2e:	f7ff f9d6 	bl	80020de <quorem>
 8002d32:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002d36:	9b00      	ldr	r3, [sp, #0]
 8002d38:	f805 9b01 	strb.w	r9, [r5], #1
 8002d3c:	1aea      	subs	r2, r5, r3
 8002d3e:	9b01      	ldr	r3, [sp, #4]
 8002d40:	4293      	cmp	r3, r2
 8002d42:	dd07      	ble.n	8002d54 <_dtoa_r+0xb64>
 8002d44:	4651      	mov	r1, sl
 8002d46:	2300      	movs	r3, #0
 8002d48:	220a      	movs	r2, #10
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	f000 fca2 	bl	8003694 <__multadd>
 8002d50:	4682      	mov	sl, r0
 8002d52:	e7ea      	b.n	8002d2a <_dtoa_r+0xb3a>
 8002d54:	9b01      	ldr	r3, [sp, #4]
 8002d56:	2b00      	cmp	r3, #0
 8002d58:	bfc8      	it	gt
 8002d5a:	461d      	movgt	r5, r3
 8002d5c:	9b00      	ldr	r3, [sp, #0]
 8002d5e:	bfd8      	it	le
 8002d60:	2501      	movle	r5, #1
 8002d62:	441d      	add	r5, r3
 8002d64:	f04f 0800 	mov.w	r8, #0
 8002d68:	4651      	mov	r1, sl
 8002d6a:	2201      	movs	r2, #1
 8002d6c:	4620      	mov	r0, r4
 8002d6e:	f000 fe3f 	bl	80039f0 <__lshift>
 8002d72:	4631      	mov	r1, r6
 8002d74:	4682      	mov	sl, r0
 8002d76:	f000 fea7 	bl	8003ac8 <__mcmp>
 8002d7a:	2800      	cmp	r0, #0
 8002d7c:	dc96      	bgt.n	8002cac <_dtoa_r+0xabc>
 8002d7e:	d102      	bne.n	8002d86 <_dtoa_r+0xb96>
 8002d80:	f019 0f01 	tst.w	r9, #1
 8002d84:	d192      	bne.n	8002cac <_dtoa_r+0xabc>
 8002d86:	462b      	mov	r3, r5
 8002d88:	461d      	mov	r5, r3
 8002d8a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d8e:	2a30      	cmp	r2, #48	; 0x30
 8002d90:	d0fa      	beq.n	8002d88 <_dtoa_r+0xb98>
 8002d92:	e6dd      	b.n	8002b50 <_dtoa_r+0x960>
 8002d94:	9a00      	ldr	r2, [sp, #0]
 8002d96:	429a      	cmp	r2, r3
 8002d98:	d189      	bne.n	8002cae <_dtoa_r+0xabe>
 8002d9a:	f10b 0b01 	add.w	fp, fp, #1
 8002d9e:	2331      	movs	r3, #49	; 0x31
 8002da0:	e796      	b.n	8002cd0 <_dtoa_r+0xae0>
 8002da2:	4b0a      	ldr	r3, [pc, #40]	; (8002dcc <_dtoa_r+0xbdc>)
 8002da4:	f7ff ba99 	b.w	80022da <_dtoa_r+0xea>
 8002da8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	f47f aa6d 	bne.w	800228a <_dtoa_r+0x9a>
 8002db0:	4b07      	ldr	r3, [pc, #28]	; (8002dd0 <_dtoa_r+0xbe0>)
 8002db2:	f7ff ba92 	b.w	80022da <_dtoa_r+0xea>
 8002db6:	9b01      	ldr	r3, [sp, #4]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	dcb5      	bgt.n	8002d28 <_dtoa_r+0xb38>
 8002dbc:	9b07      	ldr	r3, [sp, #28]
 8002dbe:	2b02      	cmp	r3, #2
 8002dc0:	f73f aeb1 	bgt.w	8002b26 <_dtoa_r+0x936>
 8002dc4:	e7b0      	b.n	8002d28 <_dtoa_r+0xb38>
 8002dc6:	bf00      	nop
 8002dc8:	0800472c 	.word	0x0800472c
 8002dcc:	0800468c 	.word	0x0800468c
 8002dd0:	080046b0 	.word	0x080046b0

08002dd4 <__ssputs_r>:
 8002dd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002dd8:	688e      	ldr	r6, [r1, #8]
 8002dda:	461f      	mov	r7, r3
 8002ddc:	42be      	cmp	r6, r7
 8002dde:	680b      	ldr	r3, [r1, #0]
 8002de0:	4682      	mov	sl, r0
 8002de2:	460c      	mov	r4, r1
 8002de4:	4690      	mov	r8, r2
 8002de6:	d82c      	bhi.n	8002e42 <__ssputs_r+0x6e>
 8002de8:	898a      	ldrh	r2, [r1, #12]
 8002dea:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8002dee:	d026      	beq.n	8002e3e <__ssputs_r+0x6a>
 8002df0:	6965      	ldr	r5, [r4, #20]
 8002df2:	6909      	ldr	r1, [r1, #16]
 8002df4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002df8:	eba3 0901 	sub.w	r9, r3, r1
 8002dfc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002e00:	1c7b      	adds	r3, r7, #1
 8002e02:	444b      	add	r3, r9
 8002e04:	106d      	asrs	r5, r5, #1
 8002e06:	429d      	cmp	r5, r3
 8002e08:	bf38      	it	cc
 8002e0a:	461d      	movcc	r5, r3
 8002e0c:	0553      	lsls	r3, r2, #21
 8002e0e:	d527      	bpl.n	8002e60 <__ssputs_r+0x8c>
 8002e10:	4629      	mov	r1, r5
 8002e12:	f000 faa3 	bl	800335c <_malloc_r>
 8002e16:	4606      	mov	r6, r0
 8002e18:	b360      	cbz	r0, 8002e74 <__ssputs_r+0xa0>
 8002e1a:	6921      	ldr	r1, [r4, #16]
 8002e1c:	464a      	mov	r2, r9
 8002e1e:	f001 f94f 	bl	80040c0 <memcpy>
 8002e22:	89a3      	ldrh	r3, [r4, #12]
 8002e24:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8002e28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002e2c:	81a3      	strh	r3, [r4, #12]
 8002e2e:	6126      	str	r6, [r4, #16]
 8002e30:	6165      	str	r5, [r4, #20]
 8002e32:	444e      	add	r6, r9
 8002e34:	eba5 0509 	sub.w	r5, r5, r9
 8002e38:	6026      	str	r6, [r4, #0]
 8002e3a:	60a5      	str	r5, [r4, #8]
 8002e3c:	463e      	mov	r6, r7
 8002e3e:	42be      	cmp	r6, r7
 8002e40:	d900      	bls.n	8002e44 <__ssputs_r+0x70>
 8002e42:	463e      	mov	r6, r7
 8002e44:	6820      	ldr	r0, [r4, #0]
 8002e46:	4632      	mov	r2, r6
 8002e48:	4641      	mov	r1, r8
 8002e4a:	f001 f8a7 	bl	8003f9c <memmove>
 8002e4e:	68a3      	ldr	r3, [r4, #8]
 8002e50:	1b9b      	subs	r3, r3, r6
 8002e52:	60a3      	str	r3, [r4, #8]
 8002e54:	6823      	ldr	r3, [r4, #0]
 8002e56:	4433      	add	r3, r6
 8002e58:	6023      	str	r3, [r4, #0]
 8002e5a:	2000      	movs	r0, #0
 8002e5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e60:	462a      	mov	r2, r5
 8002e62:	f000 ff74 	bl	8003d4e <_realloc_r>
 8002e66:	4606      	mov	r6, r0
 8002e68:	2800      	cmp	r0, #0
 8002e6a:	d1e0      	bne.n	8002e2e <__ssputs_r+0x5a>
 8002e6c:	6921      	ldr	r1, [r4, #16]
 8002e6e:	4650      	mov	r0, sl
 8002e70:	f001 f968 	bl	8004144 <_free_r>
 8002e74:	230c      	movs	r3, #12
 8002e76:	f8ca 3000 	str.w	r3, [sl]
 8002e7a:	89a3      	ldrh	r3, [r4, #12]
 8002e7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002e80:	81a3      	strh	r3, [r4, #12]
 8002e82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002e86:	e7e9      	b.n	8002e5c <__ssputs_r+0x88>

08002e88 <_svfiprintf_r>:
 8002e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e8c:	4698      	mov	r8, r3
 8002e8e:	898b      	ldrh	r3, [r1, #12]
 8002e90:	061b      	lsls	r3, r3, #24
 8002e92:	b09d      	sub	sp, #116	; 0x74
 8002e94:	4607      	mov	r7, r0
 8002e96:	460d      	mov	r5, r1
 8002e98:	4614      	mov	r4, r2
 8002e9a:	d50e      	bpl.n	8002eba <_svfiprintf_r+0x32>
 8002e9c:	690b      	ldr	r3, [r1, #16]
 8002e9e:	b963      	cbnz	r3, 8002eba <_svfiprintf_r+0x32>
 8002ea0:	2140      	movs	r1, #64	; 0x40
 8002ea2:	f000 fa5b 	bl	800335c <_malloc_r>
 8002ea6:	6028      	str	r0, [r5, #0]
 8002ea8:	6128      	str	r0, [r5, #16]
 8002eaa:	b920      	cbnz	r0, 8002eb6 <_svfiprintf_r+0x2e>
 8002eac:	230c      	movs	r3, #12
 8002eae:	603b      	str	r3, [r7, #0]
 8002eb0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002eb4:	e0d0      	b.n	8003058 <_svfiprintf_r+0x1d0>
 8002eb6:	2340      	movs	r3, #64	; 0x40
 8002eb8:	616b      	str	r3, [r5, #20]
 8002eba:	2300      	movs	r3, #0
 8002ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8002ebe:	2320      	movs	r3, #32
 8002ec0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002ec4:	f8cd 800c 	str.w	r8, [sp, #12]
 8002ec8:	2330      	movs	r3, #48	; 0x30
 8002eca:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003070 <_svfiprintf_r+0x1e8>
 8002ece:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002ed2:	f04f 0901 	mov.w	r9, #1
 8002ed6:	4623      	mov	r3, r4
 8002ed8:	469a      	mov	sl, r3
 8002eda:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002ede:	b10a      	cbz	r2, 8002ee4 <_svfiprintf_r+0x5c>
 8002ee0:	2a25      	cmp	r2, #37	; 0x25
 8002ee2:	d1f9      	bne.n	8002ed8 <_svfiprintf_r+0x50>
 8002ee4:	ebba 0b04 	subs.w	fp, sl, r4
 8002ee8:	d00b      	beq.n	8002f02 <_svfiprintf_r+0x7a>
 8002eea:	465b      	mov	r3, fp
 8002eec:	4622      	mov	r2, r4
 8002eee:	4629      	mov	r1, r5
 8002ef0:	4638      	mov	r0, r7
 8002ef2:	f7ff ff6f 	bl	8002dd4 <__ssputs_r>
 8002ef6:	3001      	adds	r0, #1
 8002ef8:	f000 80a9 	beq.w	800304e <_svfiprintf_r+0x1c6>
 8002efc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002efe:	445a      	add	r2, fp
 8002f00:	9209      	str	r2, [sp, #36]	; 0x24
 8002f02:	f89a 3000 	ldrb.w	r3, [sl]
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	f000 80a1 	beq.w	800304e <_svfiprintf_r+0x1c6>
 8002f0c:	2300      	movs	r3, #0
 8002f0e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002f12:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002f16:	f10a 0a01 	add.w	sl, sl, #1
 8002f1a:	9304      	str	r3, [sp, #16]
 8002f1c:	9307      	str	r3, [sp, #28]
 8002f1e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002f22:	931a      	str	r3, [sp, #104]	; 0x68
 8002f24:	4654      	mov	r4, sl
 8002f26:	2205      	movs	r2, #5
 8002f28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002f2c:	4850      	ldr	r0, [pc, #320]	; (8003070 <_svfiprintf_r+0x1e8>)
 8002f2e:	f7fd f94f 	bl	80001d0 <memchr>
 8002f32:	9a04      	ldr	r2, [sp, #16]
 8002f34:	b9d8      	cbnz	r0, 8002f6e <_svfiprintf_r+0xe6>
 8002f36:	06d0      	lsls	r0, r2, #27
 8002f38:	bf44      	itt	mi
 8002f3a:	2320      	movmi	r3, #32
 8002f3c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002f40:	0711      	lsls	r1, r2, #28
 8002f42:	bf44      	itt	mi
 8002f44:	232b      	movmi	r3, #43	; 0x2b
 8002f46:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002f4a:	f89a 3000 	ldrb.w	r3, [sl]
 8002f4e:	2b2a      	cmp	r3, #42	; 0x2a
 8002f50:	d015      	beq.n	8002f7e <_svfiprintf_r+0xf6>
 8002f52:	9a07      	ldr	r2, [sp, #28]
 8002f54:	4654      	mov	r4, sl
 8002f56:	2000      	movs	r0, #0
 8002f58:	f04f 0c0a 	mov.w	ip, #10
 8002f5c:	4621      	mov	r1, r4
 8002f5e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002f62:	3b30      	subs	r3, #48	; 0x30
 8002f64:	2b09      	cmp	r3, #9
 8002f66:	d94d      	bls.n	8003004 <_svfiprintf_r+0x17c>
 8002f68:	b1b0      	cbz	r0, 8002f98 <_svfiprintf_r+0x110>
 8002f6a:	9207      	str	r2, [sp, #28]
 8002f6c:	e014      	b.n	8002f98 <_svfiprintf_r+0x110>
 8002f6e:	eba0 0308 	sub.w	r3, r0, r8
 8002f72:	fa09 f303 	lsl.w	r3, r9, r3
 8002f76:	4313      	orrs	r3, r2
 8002f78:	9304      	str	r3, [sp, #16]
 8002f7a:	46a2      	mov	sl, r4
 8002f7c:	e7d2      	b.n	8002f24 <_svfiprintf_r+0x9c>
 8002f7e:	9b03      	ldr	r3, [sp, #12]
 8002f80:	1d19      	adds	r1, r3, #4
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	9103      	str	r1, [sp, #12]
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	bfbb      	ittet	lt
 8002f8a:	425b      	neglt	r3, r3
 8002f8c:	f042 0202 	orrlt.w	r2, r2, #2
 8002f90:	9307      	strge	r3, [sp, #28]
 8002f92:	9307      	strlt	r3, [sp, #28]
 8002f94:	bfb8      	it	lt
 8002f96:	9204      	strlt	r2, [sp, #16]
 8002f98:	7823      	ldrb	r3, [r4, #0]
 8002f9a:	2b2e      	cmp	r3, #46	; 0x2e
 8002f9c:	d10c      	bne.n	8002fb8 <_svfiprintf_r+0x130>
 8002f9e:	7863      	ldrb	r3, [r4, #1]
 8002fa0:	2b2a      	cmp	r3, #42	; 0x2a
 8002fa2:	d134      	bne.n	800300e <_svfiprintf_r+0x186>
 8002fa4:	9b03      	ldr	r3, [sp, #12]
 8002fa6:	1d1a      	adds	r2, r3, #4
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	9203      	str	r2, [sp, #12]
 8002fac:	2b00      	cmp	r3, #0
 8002fae:	bfb8      	it	lt
 8002fb0:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8002fb4:	3402      	adds	r4, #2
 8002fb6:	9305      	str	r3, [sp, #20]
 8002fb8:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8003080 <_svfiprintf_r+0x1f8>
 8002fbc:	7821      	ldrb	r1, [r4, #0]
 8002fbe:	2203      	movs	r2, #3
 8002fc0:	4650      	mov	r0, sl
 8002fc2:	f7fd f905 	bl	80001d0 <memchr>
 8002fc6:	b138      	cbz	r0, 8002fd8 <_svfiprintf_r+0x150>
 8002fc8:	9b04      	ldr	r3, [sp, #16]
 8002fca:	eba0 000a 	sub.w	r0, r0, sl
 8002fce:	2240      	movs	r2, #64	; 0x40
 8002fd0:	4082      	lsls	r2, r0
 8002fd2:	4313      	orrs	r3, r2
 8002fd4:	3401      	adds	r4, #1
 8002fd6:	9304      	str	r3, [sp, #16]
 8002fd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002fdc:	4825      	ldr	r0, [pc, #148]	; (8003074 <_svfiprintf_r+0x1ec>)
 8002fde:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002fe2:	2206      	movs	r2, #6
 8002fe4:	f7fd f8f4 	bl	80001d0 <memchr>
 8002fe8:	2800      	cmp	r0, #0
 8002fea:	d038      	beq.n	800305e <_svfiprintf_r+0x1d6>
 8002fec:	4b22      	ldr	r3, [pc, #136]	; (8003078 <_svfiprintf_r+0x1f0>)
 8002fee:	bb1b      	cbnz	r3, 8003038 <_svfiprintf_r+0x1b0>
 8002ff0:	9b03      	ldr	r3, [sp, #12]
 8002ff2:	3307      	adds	r3, #7
 8002ff4:	f023 0307 	bic.w	r3, r3, #7
 8002ff8:	3308      	adds	r3, #8
 8002ffa:	9303      	str	r3, [sp, #12]
 8002ffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ffe:	4433      	add	r3, r6
 8003000:	9309      	str	r3, [sp, #36]	; 0x24
 8003002:	e768      	b.n	8002ed6 <_svfiprintf_r+0x4e>
 8003004:	fb0c 3202 	mla	r2, ip, r2, r3
 8003008:	460c      	mov	r4, r1
 800300a:	2001      	movs	r0, #1
 800300c:	e7a6      	b.n	8002f5c <_svfiprintf_r+0xd4>
 800300e:	2300      	movs	r3, #0
 8003010:	3401      	adds	r4, #1
 8003012:	9305      	str	r3, [sp, #20]
 8003014:	4619      	mov	r1, r3
 8003016:	f04f 0c0a 	mov.w	ip, #10
 800301a:	4620      	mov	r0, r4
 800301c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003020:	3a30      	subs	r2, #48	; 0x30
 8003022:	2a09      	cmp	r2, #9
 8003024:	d903      	bls.n	800302e <_svfiprintf_r+0x1a6>
 8003026:	2b00      	cmp	r3, #0
 8003028:	d0c6      	beq.n	8002fb8 <_svfiprintf_r+0x130>
 800302a:	9105      	str	r1, [sp, #20]
 800302c:	e7c4      	b.n	8002fb8 <_svfiprintf_r+0x130>
 800302e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003032:	4604      	mov	r4, r0
 8003034:	2301      	movs	r3, #1
 8003036:	e7f0      	b.n	800301a <_svfiprintf_r+0x192>
 8003038:	ab03      	add	r3, sp, #12
 800303a:	9300      	str	r3, [sp, #0]
 800303c:	462a      	mov	r2, r5
 800303e:	4b0f      	ldr	r3, [pc, #60]	; (800307c <_svfiprintf_r+0x1f4>)
 8003040:	a904      	add	r1, sp, #16
 8003042:	4638      	mov	r0, r7
 8003044:	f7fe fafc 	bl	8001640 <_printf_float>
 8003048:	1c42      	adds	r2, r0, #1
 800304a:	4606      	mov	r6, r0
 800304c:	d1d6      	bne.n	8002ffc <_svfiprintf_r+0x174>
 800304e:	89ab      	ldrh	r3, [r5, #12]
 8003050:	065b      	lsls	r3, r3, #25
 8003052:	f53f af2d 	bmi.w	8002eb0 <_svfiprintf_r+0x28>
 8003056:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003058:	b01d      	add	sp, #116	; 0x74
 800305a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800305e:	ab03      	add	r3, sp, #12
 8003060:	9300      	str	r3, [sp, #0]
 8003062:	462a      	mov	r2, r5
 8003064:	4b05      	ldr	r3, [pc, #20]	; (800307c <_svfiprintf_r+0x1f4>)
 8003066:	a904      	add	r1, sp, #16
 8003068:	4638      	mov	r0, r7
 800306a:	f7fe fd8d 	bl	8001b88 <_printf_i>
 800306e:	e7eb      	b.n	8003048 <_svfiprintf_r+0x1c0>
 8003070:	0800473d 	.word	0x0800473d
 8003074:	08004747 	.word	0x08004747
 8003078:	08001641 	.word	0x08001641
 800307c:	08002dd5 	.word	0x08002dd5
 8003080:	08004743 	.word	0x08004743

08003084 <__sfputc_r>:
 8003084:	6893      	ldr	r3, [r2, #8]
 8003086:	3b01      	subs	r3, #1
 8003088:	2b00      	cmp	r3, #0
 800308a:	b410      	push	{r4}
 800308c:	6093      	str	r3, [r2, #8]
 800308e:	da08      	bge.n	80030a2 <__sfputc_r+0x1e>
 8003090:	6994      	ldr	r4, [r2, #24]
 8003092:	42a3      	cmp	r3, r4
 8003094:	db01      	blt.n	800309a <__sfputc_r+0x16>
 8003096:	290a      	cmp	r1, #10
 8003098:	d103      	bne.n	80030a2 <__sfputc_r+0x1e>
 800309a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800309e:	f000 be85 	b.w	8003dac <__swbuf_r>
 80030a2:	6813      	ldr	r3, [r2, #0]
 80030a4:	1c58      	adds	r0, r3, #1
 80030a6:	6010      	str	r0, [r2, #0]
 80030a8:	7019      	strb	r1, [r3, #0]
 80030aa:	4608      	mov	r0, r1
 80030ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80030b0:	4770      	bx	lr

080030b2 <__sfputs_r>:
 80030b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030b4:	4606      	mov	r6, r0
 80030b6:	460f      	mov	r7, r1
 80030b8:	4614      	mov	r4, r2
 80030ba:	18d5      	adds	r5, r2, r3
 80030bc:	42ac      	cmp	r4, r5
 80030be:	d101      	bne.n	80030c4 <__sfputs_r+0x12>
 80030c0:	2000      	movs	r0, #0
 80030c2:	e007      	b.n	80030d4 <__sfputs_r+0x22>
 80030c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80030c8:	463a      	mov	r2, r7
 80030ca:	4630      	mov	r0, r6
 80030cc:	f7ff ffda 	bl	8003084 <__sfputc_r>
 80030d0:	1c43      	adds	r3, r0, #1
 80030d2:	d1f3      	bne.n	80030bc <__sfputs_r+0xa>
 80030d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080030d8 <_vfiprintf_r>:
 80030d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030dc:	460d      	mov	r5, r1
 80030de:	b09d      	sub	sp, #116	; 0x74
 80030e0:	4614      	mov	r4, r2
 80030e2:	4698      	mov	r8, r3
 80030e4:	4606      	mov	r6, r0
 80030e6:	b118      	cbz	r0, 80030f0 <_vfiprintf_r+0x18>
 80030e8:	6a03      	ldr	r3, [r0, #32]
 80030ea:	b90b      	cbnz	r3, 80030f0 <_vfiprintf_r+0x18>
 80030ec:	f7fe ff1a 	bl	8001f24 <__sinit>
 80030f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80030f2:	07d9      	lsls	r1, r3, #31
 80030f4:	d405      	bmi.n	8003102 <_vfiprintf_r+0x2a>
 80030f6:	89ab      	ldrh	r3, [r5, #12]
 80030f8:	059a      	lsls	r2, r3, #22
 80030fa:	d402      	bmi.n	8003102 <_vfiprintf_r+0x2a>
 80030fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80030fe:	f7fe ffec 	bl	80020da <__retarget_lock_acquire_recursive>
 8003102:	89ab      	ldrh	r3, [r5, #12]
 8003104:	071b      	lsls	r3, r3, #28
 8003106:	d501      	bpl.n	800310c <_vfiprintf_r+0x34>
 8003108:	692b      	ldr	r3, [r5, #16]
 800310a:	b99b      	cbnz	r3, 8003134 <_vfiprintf_r+0x5c>
 800310c:	4629      	mov	r1, r5
 800310e:	4630      	mov	r0, r6
 8003110:	f000 fe8a 	bl	8003e28 <__swsetup_r>
 8003114:	b170      	cbz	r0, 8003134 <_vfiprintf_r+0x5c>
 8003116:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003118:	07dc      	lsls	r4, r3, #31
 800311a:	d504      	bpl.n	8003126 <_vfiprintf_r+0x4e>
 800311c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003120:	b01d      	add	sp, #116	; 0x74
 8003122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003126:	89ab      	ldrh	r3, [r5, #12]
 8003128:	0598      	lsls	r0, r3, #22
 800312a:	d4f7      	bmi.n	800311c <_vfiprintf_r+0x44>
 800312c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800312e:	f7fe ffd5 	bl	80020dc <__retarget_lock_release_recursive>
 8003132:	e7f3      	b.n	800311c <_vfiprintf_r+0x44>
 8003134:	2300      	movs	r3, #0
 8003136:	9309      	str	r3, [sp, #36]	; 0x24
 8003138:	2320      	movs	r3, #32
 800313a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800313e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003142:	2330      	movs	r3, #48	; 0x30
 8003144:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80032f8 <_vfiprintf_r+0x220>
 8003148:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800314c:	f04f 0901 	mov.w	r9, #1
 8003150:	4623      	mov	r3, r4
 8003152:	469a      	mov	sl, r3
 8003154:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003158:	b10a      	cbz	r2, 800315e <_vfiprintf_r+0x86>
 800315a:	2a25      	cmp	r2, #37	; 0x25
 800315c:	d1f9      	bne.n	8003152 <_vfiprintf_r+0x7a>
 800315e:	ebba 0b04 	subs.w	fp, sl, r4
 8003162:	d00b      	beq.n	800317c <_vfiprintf_r+0xa4>
 8003164:	465b      	mov	r3, fp
 8003166:	4622      	mov	r2, r4
 8003168:	4629      	mov	r1, r5
 800316a:	4630      	mov	r0, r6
 800316c:	f7ff ffa1 	bl	80030b2 <__sfputs_r>
 8003170:	3001      	adds	r0, #1
 8003172:	f000 80a9 	beq.w	80032c8 <_vfiprintf_r+0x1f0>
 8003176:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003178:	445a      	add	r2, fp
 800317a:	9209      	str	r2, [sp, #36]	; 0x24
 800317c:	f89a 3000 	ldrb.w	r3, [sl]
 8003180:	2b00      	cmp	r3, #0
 8003182:	f000 80a1 	beq.w	80032c8 <_vfiprintf_r+0x1f0>
 8003186:	2300      	movs	r3, #0
 8003188:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800318c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003190:	f10a 0a01 	add.w	sl, sl, #1
 8003194:	9304      	str	r3, [sp, #16]
 8003196:	9307      	str	r3, [sp, #28]
 8003198:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800319c:	931a      	str	r3, [sp, #104]	; 0x68
 800319e:	4654      	mov	r4, sl
 80031a0:	2205      	movs	r2, #5
 80031a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80031a6:	4854      	ldr	r0, [pc, #336]	; (80032f8 <_vfiprintf_r+0x220>)
 80031a8:	f7fd f812 	bl	80001d0 <memchr>
 80031ac:	9a04      	ldr	r2, [sp, #16]
 80031ae:	b9d8      	cbnz	r0, 80031e8 <_vfiprintf_r+0x110>
 80031b0:	06d1      	lsls	r1, r2, #27
 80031b2:	bf44      	itt	mi
 80031b4:	2320      	movmi	r3, #32
 80031b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80031ba:	0713      	lsls	r3, r2, #28
 80031bc:	bf44      	itt	mi
 80031be:	232b      	movmi	r3, #43	; 0x2b
 80031c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80031c4:	f89a 3000 	ldrb.w	r3, [sl]
 80031c8:	2b2a      	cmp	r3, #42	; 0x2a
 80031ca:	d015      	beq.n	80031f8 <_vfiprintf_r+0x120>
 80031cc:	9a07      	ldr	r2, [sp, #28]
 80031ce:	4654      	mov	r4, sl
 80031d0:	2000      	movs	r0, #0
 80031d2:	f04f 0c0a 	mov.w	ip, #10
 80031d6:	4621      	mov	r1, r4
 80031d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80031dc:	3b30      	subs	r3, #48	; 0x30
 80031de:	2b09      	cmp	r3, #9
 80031e0:	d94d      	bls.n	800327e <_vfiprintf_r+0x1a6>
 80031e2:	b1b0      	cbz	r0, 8003212 <_vfiprintf_r+0x13a>
 80031e4:	9207      	str	r2, [sp, #28]
 80031e6:	e014      	b.n	8003212 <_vfiprintf_r+0x13a>
 80031e8:	eba0 0308 	sub.w	r3, r0, r8
 80031ec:	fa09 f303 	lsl.w	r3, r9, r3
 80031f0:	4313      	orrs	r3, r2
 80031f2:	9304      	str	r3, [sp, #16]
 80031f4:	46a2      	mov	sl, r4
 80031f6:	e7d2      	b.n	800319e <_vfiprintf_r+0xc6>
 80031f8:	9b03      	ldr	r3, [sp, #12]
 80031fa:	1d19      	adds	r1, r3, #4
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	9103      	str	r1, [sp, #12]
 8003200:	2b00      	cmp	r3, #0
 8003202:	bfbb      	ittet	lt
 8003204:	425b      	neglt	r3, r3
 8003206:	f042 0202 	orrlt.w	r2, r2, #2
 800320a:	9307      	strge	r3, [sp, #28]
 800320c:	9307      	strlt	r3, [sp, #28]
 800320e:	bfb8      	it	lt
 8003210:	9204      	strlt	r2, [sp, #16]
 8003212:	7823      	ldrb	r3, [r4, #0]
 8003214:	2b2e      	cmp	r3, #46	; 0x2e
 8003216:	d10c      	bne.n	8003232 <_vfiprintf_r+0x15a>
 8003218:	7863      	ldrb	r3, [r4, #1]
 800321a:	2b2a      	cmp	r3, #42	; 0x2a
 800321c:	d134      	bne.n	8003288 <_vfiprintf_r+0x1b0>
 800321e:	9b03      	ldr	r3, [sp, #12]
 8003220:	1d1a      	adds	r2, r3, #4
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	9203      	str	r2, [sp, #12]
 8003226:	2b00      	cmp	r3, #0
 8003228:	bfb8      	it	lt
 800322a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800322e:	3402      	adds	r4, #2
 8003230:	9305      	str	r3, [sp, #20]
 8003232:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8003308 <_vfiprintf_r+0x230>
 8003236:	7821      	ldrb	r1, [r4, #0]
 8003238:	2203      	movs	r2, #3
 800323a:	4650      	mov	r0, sl
 800323c:	f7fc ffc8 	bl	80001d0 <memchr>
 8003240:	b138      	cbz	r0, 8003252 <_vfiprintf_r+0x17a>
 8003242:	9b04      	ldr	r3, [sp, #16]
 8003244:	eba0 000a 	sub.w	r0, r0, sl
 8003248:	2240      	movs	r2, #64	; 0x40
 800324a:	4082      	lsls	r2, r0
 800324c:	4313      	orrs	r3, r2
 800324e:	3401      	adds	r4, #1
 8003250:	9304      	str	r3, [sp, #16]
 8003252:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003256:	4829      	ldr	r0, [pc, #164]	; (80032fc <_vfiprintf_r+0x224>)
 8003258:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800325c:	2206      	movs	r2, #6
 800325e:	f7fc ffb7 	bl	80001d0 <memchr>
 8003262:	2800      	cmp	r0, #0
 8003264:	d03f      	beq.n	80032e6 <_vfiprintf_r+0x20e>
 8003266:	4b26      	ldr	r3, [pc, #152]	; (8003300 <_vfiprintf_r+0x228>)
 8003268:	bb1b      	cbnz	r3, 80032b2 <_vfiprintf_r+0x1da>
 800326a:	9b03      	ldr	r3, [sp, #12]
 800326c:	3307      	adds	r3, #7
 800326e:	f023 0307 	bic.w	r3, r3, #7
 8003272:	3308      	adds	r3, #8
 8003274:	9303      	str	r3, [sp, #12]
 8003276:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003278:	443b      	add	r3, r7
 800327a:	9309      	str	r3, [sp, #36]	; 0x24
 800327c:	e768      	b.n	8003150 <_vfiprintf_r+0x78>
 800327e:	fb0c 3202 	mla	r2, ip, r2, r3
 8003282:	460c      	mov	r4, r1
 8003284:	2001      	movs	r0, #1
 8003286:	e7a6      	b.n	80031d6 <_vfiprintf_r+0xfe>
 8003288:	2300      	movs	r3, #0
 800328a:	3401      	adds	r4, #1
 800328c:	9305      	str	r3, [sp, #20]
 800328e:	4619      	mov	r1, r3
 8003290:	f04f 0c0a 	mov.w	ip, #10
 8003294:	4620      	mov	r0, r4
 8003296:	f810 2b01 	ldrb.w	r2, [r0], #1
 800329a:	3a30      	subs	r2, #48	; 0x30
 800329c:	2a09      	cmp	r2, #9
 800329e:	d903      	bls.n	80032a8 <_vfiprintf_r+0x1d0>
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d0c6      	beq.n	8003232 <_vfiprintf_r+0x15a>
 80032a4:	9105      	str	r1, [sp, #20]
 80032a6:	e7c4      	b.n	8003232 <_vfiprintf_r+0x15a>
 80032a8:	fb0c 2101 	mla	r1, ip, r1, r2
 80032ac:	4604      	mov	r4, r0
 80032ae:	2301      	movs	r3, #1
 80032b0:	e7f0      	b.n	8003294 <_vfiprintf_r+0x1bc>
 80032b2:	ab03      	add	r3, sp, #12
 80032b4:	9300      	str	r3, [sp, #0]
 80032b6:	462a      	mov	r2, r5
 80032b8:	4b12      	ldr	r3, [pc, #72]	; (8003304 <_vfiprintf_r+0x22c>)
 80032ba:	a904      	add	r1, sp, #16
 80032bc:	4630      	mov	r0, r6
 80032be:	f7fe f9bf 	bl	8001640 <_printf_float>
 80032c2:	4607      	mov	r7, r0
 80032c4:	1c78      	adds	r0, r7, #1
 80032c6:	d1d6      	bne.n	8003276 <_vfiprintf_r+0x19e>
 80032c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80032ca:	07d9      	lsls	r1, r3, #31
 80032cc:	d405      	bmi.n	80032da <_vfiprintf_r+0x202>
 80032ce:	89ab      	ldrh	r3, [r5, #12]
 80032d0:	059a      	lsls	r2, r3, #22
 80032d2:	d402      	bmi.n	80032da <_vfiprintf_r+0x202>
 80032d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80032d6:	f7fe ff01 	bl	80020dc <__retarget_lock_release_recursive>
 80032da:	89ab      	ldrh	r3, [r5, #12]
 80032dc:	065b      	lsls	r3, r3, #25
 80032de:	f53f af1d 	bmi.w	800311c <_vfiprintf_r+0x44>
 80032e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80032e4:	e71c      	b.n	8003120 <_vfiprintf_r+0x48>
 80032e6:	ab03      	add	r3, sp, #12
 80032e8:	9300      	str	r3, [sp, #0]
 80032ea:	462a      	mov	r2, r5
 80032ec:	4b05      	ldr	r3, [pc, #20]	; (8003304 <_vfiprintf_r+0x22c>)
 80032ee:	a904      	add	r1, sp, #16
 80032f0:	4630      	mov	r0, r6
 80032f2:	f7fe fc49 	bl	8001b88 <_printf_i>
 80032f6:	e7e4      	b.n	80032c2 <_vfiprintf_r+0x1ea>
 80032f8:	0800473d 	.word	0x0800473d
 80032fc:	08004747 	.word	0x08004747
 8003300:	08001641 	.word	0x08001641
 8003304:	080030b3 	.word	0x080030b3
 8003308:	08004743 	.word	0x08004743

0800330c <malloc>:
 800330c:	4b02      	ldr	r3, [pc, #8]	; (8003318 <malloc+0xc>)
 800330e:	4601      	mov	r1, r0
 8003310:	6818      	ldr	r0, [r3, #0]
 8003312:	f000 b823 	b.w	800335c <_malloc_r>
 8003316:	bf00      	nop
 8003318:	20000058 	.word	0x20000058

0800331c <sbrk_aligned>:
 800331c:	b570      	push	{r4, r5, r6, lr}
 800331e:	4e0e      	ldr	r6, [pc, #56]	; (8003358 <sbrk_aligned+0x3c>)
 8003320:	460c      	mov	r4, r1
 8003322:	6831      	ldr	r1, [r6, #0]
 8003324:	4605      	mov	r5, r0
 8003326:	b911      	cbnz	r1, 800332e <sbrk_aligned+0x12>
 8003328:	f000 fea8 	bl	800407c <_sbrk_r>
 800332c:	6030      	str	r0, [r6, #0]
 800332e:	4621      	mov	r1, r4
 8003330:	4628      	mov	r0, r5
 8003332:	f000 fea3 	bl	800407c <_sbrk_r>
 8003336:	1c43      	adds	r3, r0, #1
 8003338:	d00a      	beq.n	8003350 <sbrk_aligned+0x34>
 800333a:	1cc4      	adds	r4, r0, #3
 800333c:	f024 0403 	bic.w	r4, r4, #3
 8003340:	42a0      	cmp	r0, r4
 8003342:	d007      	beq.n	8003354 <sbrk_aligned+0x38>
 8003344:	1a21      	subs	r1, r4, r0
 8003346:	4628      	mov	r0, r5
 8003348:	f000 fe98 	bl	800407c <_sbrk_r>
 800334c:	3001      	adds	r0, #1
 800334e:	d101      	bne.n	8003354 <sbrk_aligned+0x38>
 8003350:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8003354:	4620      	mov	r0, r4
 8003356:	bd70      	pop	{r4, r5, r6, pc}
 8003358:	2000032c 	.word	0x2000032c

0800335c <_malloc_r>:
 800335c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003360:	1ccd      	adds	r5, r1, #3
 8003362:	f025 0503 	bic.w	r5, r5, #3
 8003366:	3508      	adds	r5, #8
 8003368:	2d0c      	cmp	r5, #12
 800336a:	bf38      	it	cc
 800336c:	250c      	movcc	r5, #12
 800336e:	2d00      	cmp	r5, #0
 8003370:	4607      	mov	r7, r0
 8003372:	db01      	blt.n	8003378 <_malloc_r+0x1c>
 8003374:	42a9      	cmp	r1, r5
 8003376:	d905      	bls.n	8003384 <_malloc_r+0x28>
 8003378:	230c      	movs	r3, #12
 800337a:	603b      	str	r3, [r7, #0]
 800337c:	2600      	movs	r6, #0
 800337e:	4630      	mov	r0, r6
 8003380:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003384:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003458 <_malloc_r+0xfc>
 8003388:	f000 f916 	bl	80035b8 <__malloc_lock>
 800338c:	f8d8 3000 	ldr.w	r3, [r8]
 8003390:	461c      	mov	r4, r3
 8003392:	bb5c      	cbnz	r4, 80033ec <_malloc_r+0x90>
 8003394:	4629      	mov	r1, r5
 8003396:	4638      	mov	r0, r7
 8003398:	f7ff ffc0 	bl	800331c <sbrk_aligned>
 800339c:	1c43      	adds	r3, r0, #1
 800339e:	4604      	mov	r4, r0
 80033a0:	d155      	bne.n	800344e <_malloc_r+0xf2>
 80033a2:	f8d8 4000 	ldr.w	r4, [r8]
 80033a6:	4626      	mov	r6, r4
 80033a8:	2e00      	cmp	r6, #0
 80033aa:	d145      	bne.n	8003438 <_malloc_r+0xdc>
 80033ac:	2c00      	cmp	r4, #0
 80033ae:	d048      	beq.n	8003442 <_malloc_r+0xe6>
 80033b0:	6823      	ldr	r3, [r4, #0]
 80033b2:	4631      	mov	r1, r6
 80033b4:	4638      	mov	r0, r7
 80033b6:	eb04 0903 	add.w	r9, r4, r3
 80033ba:	f000 fe5f 	bl	800407c <_sbrk_r>
 80033be:	4581      	cmp	r9, r0
 80033c0:	d13f      	bne.n	8003442 <_malloc_r+0xe6>
 80033c2:	6821      	ldr	r1, [r4, #0]
 80033c4:	1a6d      	subs	r5, r5, r1
 80033c6:	4629      	mov	r1, r5
 80033c8:	4638      	mov	r0, r7
 80033ca:	f7ff ffa7 	bl	800331c <sbrk_aligned>
 80033ce:	3001      	adds	r0, #1
 80033d0:	d037      	beq.n	8003442 <_malloc_r+0xe6>
 80033d2:	6823      	ldr	r3, [r4, #0]
 80033d4:	442b      	add	r3, r5
 80033d6:	6023      	str	r3, [r4, #0]
 80033d8:	f8d8 3000 	ldr.w	r3, [r8]
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d038      	beq.n	8003452 <_malloc_r+0xf6>
 80033e0:	685a      	ldr	r2, [r3, #4]
 80033e2:	42a2      	cmp	r2, r4
 80033e4:	d12b      	bne.n	800343e <_malloc_r+0xe2>
 80033e6:	2200      	movs	r2, #0
 80033e8:	605a      	str	r2, [r3, #4]
 80033ea:	e00f      	b.n	800340c <_malloc_r+0xb0>
 80033ec:	6822      	ldr	r2, [r4, #0]
 80033ee:	1b52      	subs	r2, r2, r5
 80033f0:	d41f      	bmi.n	8003432 <_malloc_r+0xd6>
 80033f2:	2a0b      	cmp	r2, #11
 80033f4:	d917      	bls.n	8003426 <_malloc_r+0xca>
 80033f6:	1961      	adds	r1, r4, r5
 80033f8:	42a3      	cmp	r3, r4
 80033fa:	6025      	str	r5, [r4, #0]
 80033fc:	bf18      	it	ne
 80033fe:	6059      	strne	r1, [r3, #4]
 8003400:	6863      	ldr	r3, [r4, #4]
 8003402:	bf08      	it	eq
 8003404:	f8c8 1000 	streq.w	r1, [r8]
 8003408:	5162      	str	r2, [r4, r5]
 800340a:	604b      	str	r3, [r1, #4]
 800340c:	4638      	mov	r0, r7
 800340e:	f104 060b 	add.w	r6, r4, #11
 8003412:	f000 f8d7 	bl	80035c4 <__malloc_unlock>
 8003416:	f026 0607 	bic.w	r6, r6, #7
 800341a:	1d23      	adds	r3, r4, #4
 800341c:	1af2      	subs	r2, r6, r3
 800341e:	d0ae      	beq.n	800337e <_malloc_r+0x22>
 8003420:	1b9b      	subs	r3, r3, r6
 8003422:	50a3      	str	r3, [r4, r2]
 8003424:	e7ab      	b.n	800337e <_malloc_r+0x22>
 8003426:	42a3      	cmp	r3, r4
 8003428:	6862      	ldr	r2, [r4, #4]
 800342a:	d1dd      	bne.n	80033e8 <_malloc_r+0x8c>
 800342c:	f8c8 2000 	str.w	r2, [r8]
 8003430:	e7ec      	b.n	800340c <_malloc_r+0xb0>
 8003432:	4623      	mov	r3, r4
 8003434:	6864      	ldr	r4, [r4, #4]
 8003436:	e7ac      	b.n	8003392 <_malloc_r+0x36>
 8003438:	4634      	mov	r4, r6
 800343a:	6876      	ldr	r6, [r6, #4]
 800343c:	e7b4      	b.n	80033a8 <_malloc_r+0x4c>
 800343e:	4613      	mov	r3, r2
 8003440:	e7cc      	b.n	80033dc <_malloc_r+0x80>
 8003442:	230c      	movs	r3, #12
 8003444:	603b      	str	r3, [r7, #0]
 8003446:	4638      	mov	r0, r7
 8003448:	f000 f8bc 	bl	80035c4 <__malloc_unlock>
 800344c:	e797      	b.n	800337e <_malloc_r+0x22>
 800344e:	6025      	str	r5, [r4, #0]
 8003450:	e7dc      	b.n	800340c <_malloc_r+0xb0>
 8003452:	605b      	str	r3, [r3, #4]
 8003454:	deff      	udf	#255	; 0xff
 8003456:	bf00      	nop
 8003458:	20000328 	.word	0x20000328

0800345c <__sflush_r>:
 800345c:	898a      	ldrh	r2, [r1, #12]
 800345e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003462:	4605      	mov	r5, r0
 8003464:	0710      	lsls	r0, r2, #28
 8003466:	460c      	mov	r4, r1
 8003468:	d458      	bmi.n	800351c <__sflush_r+0xc0>
 800346a:	684b      	ldr	r3, [r1, #4]
 800346c:	2b00      	cmp	r3, #0
 800346e:	dc05      	bgt.n	800347c <__sflush_r+0x20>
 8003470:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003472:	2b00      	cmp	r3, #0
 8003474:	dc02      	bgt.n	800347c <__sflush_r+0x20>
 8003476:	2000      	movs	r0, #0
 8003478:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800347c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800347e:	2e00      	cmp	r6, #0
 8003480:	d0f9      	beq.n	8003476 <__sflush_r+0x1a>
 8003482:	2300      	movs	r3, #0
 8003484:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003488:	682f      	ldr	r7, [r5, #0]
 800348a:	6a21      	ldr	r1, [r4, #32]
 800348c:	602b      	str	r3, [r5, #0]
 800348e:	d032      	beq.n	80034f6 <__sflush_r+0x9a>
 8003490:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003492:	89a3      	ldrh	r3, [r4, #12]
 8003494:	075a      	lsls	r2, r3, #29
 8003496:	d505      	bpl.n	80034a4 <__sflush_r+0x48>
 8003498:	6863      	ldr	r3, [r4, #4]
 800349a:	1ac0      	subs	r0, r0, r3
 800349c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800349e:	b10b      	cbz	r3, 80034a4 <__sflush_r+0x48>
 80034a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80034a2:	1ac0      	subs	r0, r0, r3
 80034a4:	2300      	movs	r3, #0
 80034a6:	4602      	mov	r2, r0
 80034a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80034aa:	6a21      	ldr	r1, [r4, #32]
 80034ac:	4628      	mov	r0, r5
 80034ae:	47b0      	blx	r6
 80034b0:	1c43      	adds	r3, r0, #1
 80034b2:	89a3      	ldrh	r3, [r4, #12]
 80034b4:	d106      	bne.n	80034c4 <__sflush_r+0x68>
 80034b6:	6829      	ldr	r1, [r5, #0]
 80034b8:	291d      	cmp	r1, #29
 80034ba:	d82b      	bhi.n	8003514 <__sflush_r+0xb8>
 80034bc:	4a29      	ldr	r2, [pc, #164]	; (8003564 <__sflush_r+0x108>)
 80034be:	410a      	asrs	r2, r1
 80034c0:	07d6      	lsls	r6, r2, #31
 80034c2:	d427      	bmi.n	8003514 <__sflush_r+0xb8>
 80034c4:	2200      	movs	r2, #0
 80034c6:	6062      	str	r2, [r4, #4]
 80034c8:	04d9      	lsls	r1, r3, #19
 80034ca:	6922      	ldr	r2, [r4, #16]
 80034cc:	6022      	str	r2, [r4, #0]
 80034ce:	d504      	bpl.n	80034da <__sflush_r+0x7e>
 80034d0:	1c42      	adds	r2, r0, #1
 80034d2:	d101      	bne.n	80034d8 <__sflush_r+0x7c>
 80034d4:	682b      	ldr	r3, [r5, #0]
 80034d6:	b903      	cbnz	r3, 80034da <__sflush_r+0x7e>
 80034d8:	6560      	str	r0, [r4, #84]	; 0x54
 80034da:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80034dc:	602f      	str	r7, [r5, #0]
 80034de:	2900      	cmp	r1, #0
 80034e0:	d0c9      	beq.n	8003476 <__sflush_r+0x1a>
 80034e2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80034e6:	4299      	cmp	r1, r3
 80034e8:	d002      	beq.n	80034f0 <__sflush_r+0x94>
 80034ea:	4628      	mov	r0, r5
 80034ec:	f000 fe2a 	bl	8004144 <_free_r>
 80034f0:	2000      	movs	r0, #0
 80034f2:	6360      	str	r0, [r4, #52]	; 0x34
 80034f4:	e7c0      	b.n	8003478 <__sflush_r+0x1c>
 80034f6:	2301      	movs	r3, #1
 80034f8:	4628      	mov	r0, r5
 80034fa:	47b0      	blx	r6
 80034fc:	1c41      	adds	r1, r0, #1
 80034fe:	d1c8      	bne.n	8003492 <__sflush_r+0x36>
 8003500:	682b      	ldr	r3, [r5, #0]
 8003502:	2b00      	cmp	r3, #0
 8003504:	d0c5      	beq.n	8003492 <__sflush_r+0x36>
 8003506:	2b1d      	cmp	r3, #29
 8003508:	d001      	beq.n	800350e <__sflush_r+0xb2>
 800350a:	2b16      	cmp	r3, #22
 800350c:	d101      	bne.n	8003512 <__sflush_r+0xb6>
 800350e:	602f      	str	r7, [r5, #0]
 8003510:	e7b1      	b.n	8003476 <__sflush_r+0x1a>
 8003512:	89a3      	ldrh	r3, [r4, #12]
 8003514:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003518:	81a3      	strh	r3, [r4, #12]
 800351a:	e7ad      	b.n	8003478 <__sflush_r+0x1c>
 800351c:	690f      	ldr	r7, [r1, #16]
 800351e:	2f00      	cmp	r7, #0
 8003520:	d0a9      	beq.n	8003476 <__sflush_r+0x1a>
 8003522:	0793      	lsls	r3, r2, #30
 8003524:	680e      	ldr	r6, [r1, #0]
 8003526:	bf08      	it	eq
 8003528:	694b      	ldreq	r3, [r1, #20]
 800352a:	600f      	str	r7, [r1, #0]
 800352c:	bf18      	it	ne
 800352e:	2300      	movne	r3, #0
 8003530:	eba6 0807 	sub.w	r8, r6, r7
 8003534:	608b      	str	r3, [r1, #8]
 8003536:	f1b8 0f00 	cmp.w	r8, #0
 800353a:	dd9c      	ble.n	8003476 <__sflush_r+0x1a>
 800353c:	6a21      	ldr	r1, [r4, #32]
 800353e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003540:	4643      	mov	r3, r8
 8003542:	463a      	mov	r2, r7
 8003544:	4628      	mov	r0, r5
 8003546:	47b0      	blx	r6
 8003548:	2800      	cmp	r0, #0
 800354a:	dc06      	bgt.n	800355a <__sflush_r+0xfe>
 800354c:	89a3      	ldrh	r3, [r4, #12]
 800354e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003552:	81a3      	strh	r3, [r4, #12]
 8003554:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003558:	e78e      	b.n	8003478 <__sflush_r+0x1c>
 800355a:	4407      	add	r7, r0
 800355c:	eba8 0800 	sub.w	r8, r8, r0
 8003560:	e7e9      	b.n	8003536 <__sflush_r+0xda>
 8003562:	bf00      	nop
 8003564:	dfbffffe 	.word	0xdfbffffe

08003568 <_fflush_r>:
 8003568:	b538      	push	{r3, r4, r5, lr}
 800356a:	690b      	ldr	r3, [r1, #16]
 800356c:	4605      	mov	r5, r0
 800356e:	460c      	mov	r4, r1
 8003570:	b913      	cbnz	r3, 8003578 <_fflush_r+0x10>
 8003572:	2500      	movs	r5, #0
 8003574:	4628      	mov	r0, r5
 8003576:	bd38      	pop	{r3, r4, r5, pc}
 8003578:	b118      	cbz	r0, 8003582 <_fflush_r+0x1a>
 800357a:	6a03      	ldr	r3, [r0, #32]
 800357c:	b90b      	cbnz	r3, 8003582 <_fflush_r+0x1a>
 800357e:	f7fe fcd1 	bl	8001f24 <__sinit>
 8003582:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003586:	2b00      	cmp	r3, #0
 8003588:	d0f3      	beq.n	8003572 <_fflush_r+0xa>
 800358a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800358c:	07d0      	lsls	r0, r2, #31
 800358e:	d404      	bmi.n	800359a <_fflush_r+0x32>
 8003590:	0599      	lsls	r1, r3, #22
 8003592:	d402      	bmi.n	800359a <_fflush_r+0x32>
 8003594:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003596:	f7fe fda0 	bl	80020da <__retarget_lock_acquire_recursive>
 800359a:	4628      	mov	r0, r5
 800359c:	4621      	mov	r1, r4
 800359e:	f7ff ff5d 	bl	800345c <__sflush_r>
 80035a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80035a4:	07da      	lsls	r2, r3, #31
 80035a6:	4605      	mov	r5, r0
 80035a8:	d4e4      	bmi.n	8003574 <_fflush_r+0xc>
 80035aa:	89a3      	ldrh	r3, [r4, #12]
 80035ac:	059b      	lsls	r3, r3, #22
 80035ae:	d4e1      	bmi.n	8003574 <_fflush_r+0xc>
 80035b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80035b2:	f7fe fd93 	bl	80020dc <__retarget_lock_release_recursive>
 80035b6:	e7dd      	b.n	8003574 <_fflush_r+0xc>

080035b8 <__malloc_lock>:
 80035b8:	4801      	ldr	r0, [pc, #4]	; (80035c0 <__malloc_lock+0x8>)
 80035ba:	f7fe bd8e 	b.w	80020da <__retarget_lock_acquire_recursive>
 80035be:	bf00      	nop
 80035c0:	20000324 	.word	0x20000324

080035c4 <__malloc_unlock>:
 80035c4:	4801      	ldr	r0, [pc, #4]	; (80035cc <__malloc_unlock+0x8>)
 80035c6:	f7fe bd89 	b.w	80020dc <__retarget_lock_release_recursive>
 80035ca:	bf00      	nop
 80035cc:	20000324 	.word	0x20000324

080035d0 <_Balloc>:
 80035d0:	b570      	push	{r4, r5, r6, lr}
 80035d2:	69c6      	ldr	r6, [r0, #28]
 80035d4:	4604      	mov	r4, r0
 80035d6:	460d      	mov	r5, r1
 80035d8:	b976      	cbnz	r6, 80035f8 <_Balloc+0x28>
 80035da:	2010      	movs	r0, #16
 80035dc:	f7ff fe96 	bl	800330c <malloc>
 80035e0:	4602      	mov	r2, r0
 80035e2:	61e0      	str	r0, [r4, #28]
 80035e4:	b920      	cbnz	r0, 80035f0 <_Balloc+0x20>
 80035e6:	4b18      	ldr	r3, [pc, #96]	; (8003648 <_Balloc+0x78>)
 80035e8:	4818      	ldr	r0, [pc, #96]	; (800364c <_Balloc+0x7c>)
 80035ea:	216b      	movs	r1, #107	; 0x6b
 80035ec:	f000 fd76 	bl	80040dc <__assert_func>
 80035f0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035f4:	6006      	str	r6, [r0, #0]
 80035f6:	60c6      	str	r6, [r0, #12]
 80035f8:	69e6      	ldr	r6, [r4, #28]
 80035fa:	68f3      	ldr	r3, [r6, #12]
 80035fc:	b183      	cbz	r3, 8003620 <_Balloc+0x50>
 80035fe:	69e3      	ldr	r3, [r4, #28]
 8003600:	68db      	ldr	r3, [r3, #12]
 8003602:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003606:	b9b8      	cbnz	r0, 8003638 <_Balloc+0x68>
 8003608:	2101      	movs	r1, #1
 800360a:	fa01 f605 	lsl.w	r6, r1, r5
 800360e:	1d72      	adds	r2, r6, #5
 8003610:	0092      	lsls	r2, r2, #2
 8003612:	4620      	mov	r0, r4
 8003614:	f000 fd80 	bl	8004118 <_calloc_r>
 8003618:	b160      	cbz	r0, 8003634 <_Balloc+0x64>
 800361a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800361e:	e00e      	b.n	800363e <_Balloc+0x6e>
 8003620:	2221      	movs	r2, #33	; 0x21
 8003622:	2104      	movs	r1, #4
 8003624:	4620      	mov	r0, r4
 8003626:	f000 fd77 	bl	8004118 <_calloc_r>
 800362a:	69e3      	ldr	r3, [r4, #28]
 800362c:	60f0      	str	r0, [r6, #12]
 800362e:	68db      	ldr	r3, [r3, #12]
 8003630:	2b00      	cmp	r3, #0
 8003632:	d1e4      	bne.n	80035fe <_Balloc+0x2e>
 8003634:	2000      	movs	r0, #0
 8003636:	bd70      	pop	{r4, r5, r6, pc}
 8003638:	6802      	ldr	r2, [r0, #0]
 800363a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800363e:	2300      	movs	r3, #0
 8003640:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003644:	e7f7      	b.n	8003636 <_Balloc+0x66>
 8003646:	bf00      	nop
 8003648:	080046bd 	.word	0x080046bd
 800364c:	0800474e 	.word	0x0800474e

08003650 <_Bfree>:
 8003650:	b570      	push	{r4, r5, r6, lr}
 8003652:	69c6      	ldr	r6, [r0, #28]
 8003654:	4605      	mov	r5, r0
 8003656:	460c      	mov	r4, r1
 8003658:	b976      	cbnz	r6, 8003678 <_Bfree+0x28>
 800365a:	2010      	movs	r0, #16
 800365c:	f7ff fe56 	bl	800330c <malloc>
 8003660:	4602      	mov	r2, r0
 8003662:	61e8      	str	r0, [r5, #28]
 8003664:	b920      	cbnz	r0, 8003670 <_Bfree+0x20>
 8003666:	4b09      	ldr	r3, [pc, #36]	; (800368c <_Bfree+0x3c>)
 8003668:	4809      	ldr	r0, [pc, #36]	; (8003690 <_Bfree+0x40>)
 800366a:	218f      	movs	r1, #143	; 0x8f
 800366c:	f000 fd36 	bl	80040dc <__assert_func>
 8003670:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003674:	6006      	str	r6, [r0, #0]
 8003676:	60c6      	str	r6, [r0, #12]
 8003678:	b13c      	cbz	r4, 800368a <_Bfree+0x3a>
 800367a:	69eb      	ldr	r3, [r5, #28]
 800367c:	6862      	ldr	r2, [r4, #4]
 800367e:	68db      	ldr	r3, [r3, #12]
 8003680:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003684:	6021      	str	r1, [r4, #0]
 8003686:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800368a:	bd70      	pop	{r4, r5, r6, pc}
 800368c:	080046bd 	.word	0x080046bd
 8003690:	0800474e 	.word	0x0800474e

08003694 <__multadd>:
 8003694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003698:	690d      	ldr	r5, [r1, #16]
 800369a:	4607      	mov	r7, r0
 800369c:	460c      	mov	r4, r1
 800369e:	461e      	mov	r6, r3
 80036a0:	f101 0c14 	add.w	ip, r1, #20
 80036a4:	2000      	movs	r0, #0
 80036a6:	f8dc 3000 	ldr.w	r3, [ip]
 80036aa:	b299      	uxth	r1, r3
 80036ac:	fb02 6101 	mla	r1, r2, r1, r6
 80036b0:	0c1e      	lsrs	r6, r3, #16
 80036b2:	0c0b      	lsrs	r3, r1, #16
 80036b4:	fb02 3306 	mla	r3, r2, r6, r3
 80036b8:	b289      	uxth	r1, r1
 80036ba:	3001      	adds	r0, #1
 80036bc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80036c0:	4285      	cmp	r5, r0
 80036c2:	f84c 1b04 	str.w	r1, [ip], #4
 80036c6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80036ca:	dcec      	bgt.n	80036a6 <__multadd+0x12>
 80036cc:	b30e      	cbz	r6, 8003712 <__multadd+0x7e>
 80036ce:	68a3      	ldr	r3, [r4, #8]
 80036d0:	42ab      	cmp	r3, r5
 80036d2:	dc19      	bgt.n	8003708 <__multadd+0x74>
 80036d4:	6861      	ldr	r1, [r4, #4]
 80036d6:	4638      	mov	r0, r7
 80036d8:	3101      	adds	r1, #1
 80036da:	f7ff ff79 	bl	80035d0 <_Balloc>
 80036de:	4680      	mov	r8, r0
 80036e0:	b928      	cbnz	r0, 80036ee <__multadd+0x5a>
 80036e2:	4602      	mov	r2, r0
 80036e4:	4b0c      	ldr	r3, [pc, #48]	; (8003718 <__multadd+0x84>)
 80036e6:	480d      	ldr	r0, [pc, #52]	; (800371c <__multadd+0x88>)
 80036e8:	21ba      	movs	r1, #186	; 0xba
 80036ea:	f000 fcf7 	bl	80040dc <__assert_func>
 80036ee:	6922      	ldr	r2, [r4, #16]
 80036f0:	3202      	adds	r2, #2
 80036f2:	f104 010c 	add.w	r1, r4, #12
 80036f6:	0092      	lsls	r2, r2, #2
 80036f8:	300c      	adds	r0, #12
 80036fa:	f000 fce1 	bl	80040c0 <memcpy>
 80036fe:	4621      	mov	r1, r4
 8003700:	4638      	mov	r0, r7
 8003702:	f7ff ffa5 	bl	8003650 <_Bfree>
 8003706:	4644      	mov	r4, r8
 8003708:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800370c:	3501      	adds	r5, #1
 800370e:	615e      	str	r6, [r3, #20]
 8003710:	6125      	str	r5, [r4, #16]
 8003712:	4620      	mov	r0, r4
 8003714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003718:	0800472c 	.word	0x0800472c
 800371c:	0800474e 	.word	0x0800474e

08003720 <__hi0bits>:
 8003720:	0c03      	lsrs	r3, r0, #16
 8003722:	041b      	lsls	r3, r3, #16
 8003724:	b9d3      	cbnz	r3, 800375c <__hi0bits+0x3c>
 8003726:	0400      	lsls	r0, r0, #16
 8003728:	2310      	movs	r3, #16
 800372a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800372e:	bf04      	itt	eq
 8003730:	0200      	lsleq	r0, r0, #8
 8003732:	3308      	addeq	r3, #8
 8003734:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003738:	bf04      	itt	eq
 800373a:	0100      	lsleq	r0, r0, #4
 800373c:	3304      	addeq	r3, #4
 800373e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8003742:	bf04      	itt	eq
 8003744:	0080      	lsleq	r0, r0, #2
 8003746:	3302      	addeq	r3, #2
 8003748:	2800      	cmp	r0, #0
 800374a:	db05      	blt.n	8003758 <__hi0bits+0x38>
 800374c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003750:	f103 0301 	add.w	r3, r3, #1
 8003754:	bf08      	it	eq
 8003756:	2320      	moveq	r3, #32
 8003758:	4618      	mov	r0, r3
 800375a:	4770      	bx	lr
 800375c:	2300      	movs	r3, #0
 800375e:	e7e4      	b.n	800372a <__hi0bits+0xa>

08003760 <__lo0bits>:
 8003760:	6803      	ldr	r3, [r0, #0]
 8003762:	f013 0207 	ands.w	r2, r3, #7
 8003766:	d00c      	beq.n	8003782 <__lo0bits+0x22>
 8003768:	07d9      	lsls	r1, r3, #31
 800376a:	d422      	bmi.n	80037b2 <__lo0bits+0x52>
 800376c:	079a      	lsls	r2, r3, #30
 800376e:	bf49      	itett	mi
 8003770:	085b      	lsrmi	r3, r3, #1
 8003772:	089b      	lsrpl	r3, r3, #2
 8003774:	6003      	strmi	r3, [r0, #0]
 8003776:	2201      	movmi	r2, #1
 8003778:	bf5c      	itt	pl
 800377a:	6003      	strpl	r3, [r0, #0]
 800377c:	2202      	movpl	r2, #2
 800377e:	4610      	mov	r0, r2
 8003780:	4770      	bx	lr
 8003782:	b299      	uxth	r1, r3
 8003784:	b909      	cbnz	r1, 800378a <__lo0bits+0x2a>
 8003786:	0c1b      	lsrs	r3, r3, #16
 8003788:	2210      	movs	r2, #16
 800378a:	b2d9      	uxtb	r1, r3
 800378c:	b909      	cbnz	r1, 8003792 <__lo0bits+0x32>
 800378e:	3208      	adds	r2, #8
 8003790:	0a1b      	lsrs	r3, r3, #8
 8003792:	0719      	lsls	r1, r3, #28
 8003794:	bf04      	itt	eq
 8003796:	091b      	lsreq	r3, r3, #4
 8003798:	3204      	addeq	r2, #4
 800379a:	0799      	lsls	r1, r3, #30
 800379c:	bf04      	itt	eq
 800379e:	089b      	lsreq	r3, r3, #2
 80037a0:	3202      	addeq	r2, #2
 80037a2:	07d9      	lsls	r1, r3, #31
 80037a4:	d403      	bmi.n	80037ae <__lo0bits+0x4e>
 80037a6:	085b      	lsrs	r3, r3, #1
 80037a8:	f102 0201 	add.w	r2, r2, #1
 80037ac:	d003      	beq.n	80037b6 <__lo0bits+0x56>
 80037ae:	6003      	str	r3, [r0, #0]
 80037b0:	e7e5      	b.n	800377e <__lo0bits+0x1e>
 80037b2:	2200      	movs	r2, #0
 80037b4:	e7e3      	b.n	800377e <__lo0bits+0x1e>
 80037b6:	2220      	movs	r2, #32
 80037b8:	e7e1      	b.n	800377e <__lo0bits+0x1e>
	...

080037bc <__i2b>:
 80037bc:	b510      	push	{r4, lr}
 80037be:	460c      	mov	r4, r1
 80037c0:	2101      	movs	r1, #1
 80037c2:	f7ff ff05 	bl	80035d0 <_Balloc>
 80037c6:	4602      	mov	r2, r0
 80037c8:	b928      	cbnz	r0, 80037d6 <__i2b+0x1a>
 80037ca:	4b05      	ldr	r3, [pc, #20]	; (80037e0 <__i2b+0x24>)
 80037cc:	4805      	ldr	r0, [pc, #20]	; (80037e4 <__i2b+0x28>)
 80037ce:	f240 1145 	movw	r1, #325	; 0x145
 80037d2:	f000 fc83 	bl	80040dc <__assert_func>
 80037d6:	2301      	movs	r3, #1
 80037d8:	6144      	str	r4, [r0, #20]
 80037da:	6103      	str	r3, [r0, #16]
 80037dc:	bd10      	pop	{r4, pc}
 80037de:	bf00      	nop
 80037e0:	0800472c 	.word	0x0800472c
 80037e4:	0800474e 	.word	0x0800474e

080037e8 <__multiply>:
 80037e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037ec:	4691      	mov	r9, r2
 80037ee:	690a      	ldr	r2, [r1, #16]
 80037f0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80037f4:	429a      	cmp	r2, r3
 80037f6:	bfb8      	it	lt
 80037f8:	460b      	movlt	r3, r1
 80037fa:	460c      	mov	r4, r1
 80037fc:	bfbc      	itt	lt
 80037fe:	464c      	movlt	r4, r9
 8003800:	4699      	movlt	r9, r3
 8003802:	6927      	ldr	r7, [r4, #16]
 8003804:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003808:	68a3      	ldr	r3, [r4, #8]
 800380a:	6861      	ldr	r1, [r4, #4]
 800380c:	eb07 060a 	add.w	r6, r7, sl
 8003810:	42b3      	cmp	r3, r6
 8003812:	b085      	sub	sp, #20
 8003814:	bfb8      	it	lt
 8003816:	3101      	addlt	r1, #1
 8003818:	f7ff feda 	bl	80035d0 <_Balloc>
 800381c:	b930      	cbnz	r0, 800382c <__multiply+0x44>
 800381e:	4602      	mov	r2, r0
 8003820:	4b44      	ldr	r3, [pc, #272]	; (8003934 <__multiply+0x14c>)
 8003822:	4845      	ldr	r0, [pc, #276]	; (8003938 <__multiply+0x150>)
 8003824:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003828:	f000 fc58 	bl	80040dc <__assert_func>
 800382c:	f100 0514 	add.w	r5, r0, #20
 8003830:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003834:	462b      	mov	r3, r5
 8003836:	2200      	movs	r2, #0
 8003838:	4543      	cmp	r3, r8
 800383a:	d321      	bcc.n	8003880 <__multiply+0x98>
 800383c:	f104 0314 	add.w	r3, r4, #20
 8003840:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003844:	f109 0314 	add.w	r3, r9, #20
 8003848:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800384c:	9202      	str	r2, [sp, #8]
 800384e:	1b3a      	subs	r2, r7, r4
 8003850:	3a15      	subs	r2, #21
 8003852:	f022 0203 	bic.w	r2, r2, #3
 8003856:	3204      	adds	r2, #4
 8003858:	f104 0115 	add.w	r1, r4, #21
 800385c:	428f      	cmp	r7, r1
 800385e:	bf38      	it	cc
 8003860:	2204      	movcc	r2, #4
 8003862:	9201      	str	r2, [sp, #4]
 8003864:	9a02      	ldr	r2, [sp, #8]
 8003866:	9303      	str	r3, [sp, #12]
 8003868:	429a      	cmp	r2, r3
 800386a:	d80c      	bhi.n	8003886 <__multiply+0x9e>
 800386c:	2e00      	cmp	r6, #0
 800386e:	dd03      	ble.n	8003878 <__multiply+0x90>
 8003870:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003874:	2b00      	cmp	r3, #0
 8003876:	d05b      	beq.n	8003930 <__multiply+0x148>
 8003878:	6106      	str	r6, [r0, #16]
 800387a:	b005      	add	sp, #20
 800387c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003880:	f843 2b04 	str.w	r2, [r3], #4
 8003884:	e7d8      	b.n	8003838 <__multiply+0x50>
 8003886:	f8b3 a000 	ldrh.w	sl, [r3]
 800388a:	f1ba 0f00 	cmp.w	sl, #0
 800388e:	d024      	beq.n	80038da <__multiply+0xf2>
 8003890:	f104 0e14 	add.w	lr, r4, #20
 8003894:	46a9      	mov	r9, r5
 8003896:	f04f 0c00 	mov.w	ip, #0
 800389a:	f85e 2b04 	ldr.w	r2, [lr], #4
 800389e:	f8d9 1000 	ldr.w	r1, [r9]
 80038a2:	fa1f fb82 	uxth.w	fp, r2
 80038a6:	b289      	uxth	r1, r1
 80038a8:	fb0a 110b 	mla	r1, sl, fp, r1
 80038ac:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80038b0:	f8d9 2000 	ldr.w	r2, [r9]
 80038b4:	4461      	add	r1, ip
 80038b6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80038ba:	fb0a c20b 	mla	r2, sl, fp, ip
 80038be:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80038c2:	b289      	uxth	r1, r1
 80038c4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80038c8:	4577      	cmp	r7, lr
 80038ca:	f849 1b04 	str.w	r1, [r9], #4
 80038ce:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80038d2:	d8e2      	bhi.n	800389a <__multiply+0xb2>
 80038d4:	9a01      	ldr	r2, [sp, #4]
 80038d6:	f845 c002 	str.w	ip, [r5, r2]
 80038da:	9a03      	ldr	r2, [sp, #12]
 80038dc:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80038e0:	3304      	adds	r3, #4
 80038e2:	f1b9 0f00 	cmp.w	r9, #0
 80038e6:	d021      	beq.n	800392c <__multiply+0x144>
 80038e8:	6829      	ldr	r1, [r5, #0]
 80038ea:	f104 0c14 	add.w	ip, r4, #20
 80038ee:	46ae      	mov	lr, r5
 80038f0:	f04f 0a00 	mov.w	sl, #0
 80038f4:	f8bc b000 	ldrh.w	fp, [ip]
 80038f8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80038fc:	fb09 220b 	mla	r2, r9, fp, r2
 8003900:	4452      	add	r2, sl
 8003902:	b289      	uxth	r1, r1
 8003904:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003908:	f84e 1b04 	str.w	r1, [lr], #4
 800390c:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003910:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003914:	f8be 1000 	ldrh.w	r1, [lr]
 8003918:	fb09 110a 	mla	r1, r9, sl, r1
 800391c:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8003920:	4567      	cmp	r7, ip
 8003922:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003926:	d8e5      	bhi.n	80038f4 <__multiply+0x10c>
 8003928:	9a01      	ldr	r2, [sp, #4]
 800392a:	50a9      	str	r1, [r5, r2]
 800392c:	3504      	adds	r5, #4
 800392e:	e799      	b.n	8003864 <__multiply+0x7c>
 8003930:	3e01      	subs	r6, #1
 8003932:	e79b      	b.n	800386c <__multiply+0x84>
 8003934:	0800472c 	.word	0x0800472c
 8003938:	0800474e 	.word	0x0800474e

0800393c <__pow5mult>:
 800393c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003940:	4615      	mov	r5, r2
 8003942:	f012 0203 	ands.w	r2, r2, #3
 8003946:	4606      	mov	r6, r0
 8003948:	460f      	mov	r7, r1
 800394a:	d007      	beq.n	800395c <__pow5mult+0x20>
 800394c:	4c25      	ldr	r4, [pc, #148]	; (80039e4 <__pow5mult+0xa8>)
 800394e:	3a01      	subs	r2, #1
 8003950:	2300      	movs	r3, #0
 8003952:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003956:	f7ff fe9d 	bl	8003694 <__multadd>
 800395a:	4607      	mov	r7, r0
 800395c:	10ad      	asrs	r5, r5, #2
 800395e:	d03d      	beq.n	80039dc <__pow5mult+0xa0>
 8003960:	69f4      	ldr	r4, [r6, #28]
 8003962:	b97c      	cbnz	r4, 8003984 <__pow5mult+0x48>
 8003964:	2010      	movs	r0, #16
 8003966:	f7ff fcd1 	bl	800330c <malloc>
 800396a:	4602      	mov	r2, r0
 800396c:	61f0      	str	r0, [r6, #28]
 800396e:	b928      	cbnz	r0, 800397c <__pow5mult+0x40>
 8003970:	4b1d      	ldr	r3, [pc, #116]	; (80039e8 <__pow5mult+0xac>)
 8003972:	481e      	ldr	r0, [pc, #120]	; (80039ec <__pow5mult+0xb0>)
 8003974:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003978:	f000 fbb0 	bl	80040dc <__assert_func>
 800397c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003980:	6004      	str	r4, [r0, #0]
 8003982:	60c4      	str	r4, [r0, #12]
 8003984:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003988:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800398c:	b94c      	cbnz	r4, 80039a2 <__pow5mult+0x66>
 800398e:	f240 2171 	movw	r1, #625	; 0x271
 8003992:	4630      	mov	r0, r6
 8003994:	f7ff ff12 	bl	80037bc <__i2b>
 8003998:	2300      	movs	r3, #0
 800399a:	f8c8 0008 	str.w	r0, [r8, #8]
 800399e:	4604      	mov	r4, r0
 80039a0:	6003      	str	r3, [r0, #0]
 80039a2:	f04f 0900 	mov.w	r9, #0
 80039a6:	07eb      	lsls	r3, r5, #31
 80039a8:	d50a      	bpl.n	80039c0 <__pow5mult+0x84>
 80039aa:	4639      	mov	r1, r7
 80039ac:	4622      	mov	r2, r4
 80039ae:	4630      	mov	r0, r6
 80039b0:	f7ff ff1a 	bl	80037e8 <__multiply>
 80039b4:	4639      	mov	r1, r7
 80039b6:	4680      	mov	r8, r0
 80039b8:	4630      	mov	r0, r6
 80039ba:	f7ff fe49 	bl	8003650 <_Bfree>
 80039be:	4647      	mov	r7, r8
 80039c0:	106d      	asrs	r5, r5, #1
 80039c2:	d00b      	beq.n	80039dc <__pow5mult+0xa0>
 80039c4:	6820      	ldr	r0, [r4, #0]
 80039c6:	b938      	cbnz	r0, 80039d8 <__pow5mult+0x9c>
 80039c8:	4622      	mov	r2, r4
 80039ca:	4621      	mov	r1, r4
 80039cc:	4630      	mov	r0, r6
 80039ce:	f7ff ff0b 	bl	80037e8 <__multiply>
 80039d2:	6020      	str	r0, [r4, #0]
 80039d4:	f8c0 9000 	str.w	r9, [r0]
 80039d8:	4604      	mov	r4, r0
 80039da:	e7e4      	b.n	80039a6 <__pow5mult+0x6a>
 80039dc:	4638      	mov	r0, r7
 80039de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80039e2:	bf00      	nop
 80039e4:	08004898 	.word	0x08004898
 80039e8:	080046bd 	.word	0x080046bd
 80039ec:	0800474e 	.word	0x0800474e

080039f0 <__lshift>:
 80039f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039f4:	460c      	mov	r4, r1
 80039f6:	6849      	ldr	r1, [r1, #4]
 80039f8:	6923      	ldr	r3, [r4, #16]
 80039fa:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80039fe:	68a3      	ldr	r3, [r4, #8]
 8003a00:	4607      	mov	r7, r0
 8003a02:	4691      	mov	r9, r2
 8003a04:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003a08:	f108 0601 	add.w	r6, r8, #1
 8003a0c:	42b3      	cmp	r3, r6
 8003a0e:	db0b      	blt.n	8003a28 <__lshift+0x38>
 8003a10:	4638      	mov	r0, r7
 8003a12:	f7ff fddd 	bl	80035d0 <_Balloc>
 8003a16:	4605      	mov	r5, r0
 8003a18:	b948      	cbnz	r0, 8003a2e <__lshift+0x3e>
 8003a1a:	4602      	mov	r2, r0
 8003a1c:	4b28      	ldr	r3, [pc, #160]	; (8003ac0 <__lshift+0xd0>)
 8003a1e:	4829      	ldr	r0, [pc, #164]	; (8003ac4 <__lshift+0xd4>)
 8003a20:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003a24:	f000 fb5a 	bl	80040dc <__assert_func>
 8003a28:	3101      	adds	r1, #1
 8003a2a:	005b      	lsls	r3, r3, #1
 8003a2c:	e7ee      	b.n	8003a0c <__lshift+0x1c>
 8003a2e:	2300      	movs	r3, #0
 8003a30:	f100 0114 	add.w	r1, r0, #20
 8003a34:	f100 0210 	add.w	r2, r0, #16
 8003a38:	4618      	mov	r0, r3
 8003a3a:	4553      	cmp	r3, sl
 8003a3c:	db33      	blt.n	8003aa6 <__lshift+0xb6>
 8003a3e:	6920      	ldr	r0, [r4, #16]
 8003a40:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003a44:	f104 0314 	add.w	r3, r4, #20
 8003a48:	f019 091f 	ands.w	r9, r9, #31
 8003a4c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003a50:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003a54:	d02b      	beq.n	8003aae <__lshift+0xbe>
 8003a56:	f1c9 0e20 	rsb	lr, r9, #32
 8003a5a:	468a      	mov	sl, r1
 8003a5c:	2200      	movs	r2, #0
 8003a5e:	6818      	ldr	r0, [r3, #0]
 8003a60:	fa00 f009 	lsl.w	r0, r0, r9
 8003a64:	4310      	orrs	r0, r2
 8003a66:	f84a 0b04 	str.w	r0, [sl], #4
 8003a6a:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a6e:	459c      	cmp	ip, r3
 8003a70:	fa22 f20e 	lsr.w	r2, r2, lr
 8003a74:	d8f3      	bhi.n	8003a5e <__lshift+0x6e>
 8003a76:	ebac 0304 	sub.w	r3, ip, r4
 8003a7a:	3b15      	subs	r3, #21
 8003a7c:	f023 0303 	bic.w	r3, r3, #3
 8003a80:	3304      	adds	r3, #4
 8003a82:	f104 0015 	add.w	r0, r4, #21
 8003a86:	4584      	cmp	ip, r0
 8003a88:	bf38      	it	cc
 8003a8a:	2304      	movcc	r3, #4
 8003a8c:	50ca      	str	r2, [r1, r3]
 8003a8e:	b10a      	cbz	r2, 8003a94 <__lshift+0xa4>
 8003a90:	f108 0602 	add.w	r6, r8, #2
 8003a94:	3e01      	subs	r6, #1
 8003a96:	4638      	mov	r0, r7
 8003a98:	612e      	str	r6, [r5, #16]
 8003a9a:	4621      	mov	r1, r4
 8003a9c:	f7ff fdd8 	bl	8003650 <_Bfree>
 8003aa0:	4628      	mov	r0, r5
 8003aa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003aa6:	f842 0f04 	str.w	r0, [r2, #4]!
 8003aaa:	3301      	adds	r3, #1
 8003aac:	e7c5      	b.n	8003a3a <__lshift+0x4a>
 8003aae:	3904      	subs	r1, #4
 8003ab0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ab4:	f841 2f04 	str.w	r2, [r1, #4]!
 8003ab8:	459c      	cmp	ip, r3
 8003aba:	d8f9      	bhi.n	8003ab0 <__lshift+0xc0>
 8003abc:	e7ea      	b.n	8003a94 <__lshift+0xa4>
 8003abe:	bf00      	nop
 8003ac0:	0800472c 	.word	0x0800472c
 8003ac4:	0800474e 	.word	0x0800474e

08003ac8 <__mcmp>:
 8003ac8:	b530      	push	{r4, r5, lr}
 8003aca:	6902      	ldr	r2, [r0, #16]
 8003acc:	690c      	ldr	r4, [r1, #16]
 8003ace:	1b12      	subs	r2, r2, r4
 8003ad0:	d10e      	bne.n	8003af0 <__mcmp+0x28>
 8003ad2:	f100 0314 	add.w	r3, r0, #20
 8003ad6:	3114      	adds	r1, #20
 8003ad8:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003adc:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003ae0:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003ae4:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003ae8:	42a5      	cmp	r5, r4
 8003aea:	d003      	beq.n	8003af4 <__mcmp+0x2c>
 8003aec:	d305      	bcc.n	8003afa <__mcmp+0x32>
 8003aee:	2201      	movs	r2, #1
 8003af0:	4610      	mov	r0, r2
 8003af2:	bd30      	pop	{r4, r5, pc}
 8003af4:	4283      	cmp	r3, r0
 8003af6:	d3f3      	bcc.n	8003ae0 <__mcmp+0x18>
 8003af8:	e7fa      	b.n	8003af0 <__mcmp+0x28>
 8003afa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003afe:	e7f7      	b.n	8003af0 <__mcmp+0x28>

08003b00 <__mdiff>:
 8003b00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b04:	460c      	mov	r4, r1
 8003b06:	4606      	mov	r6, r0
 8003b08:	4611      	mov	r1, r2
 8003b0a:	4620      	mov	r0, r4
 8003b0c:	4690      	mov	r8, r2
 8003b0e:	f7ff ffdb 	bl	8003ac8 <__mcmp>
 8003b12:	1e05      	subs	r5, r0, #0
 8003b14:	d110      	bne.n	8003b38 <__mdiff+0x38>
 8003b16:	4629      	mov	r1, r5
 8003b18:	4630      	mov	r0, r6
 8003b1a:	f7ff fd59 	bl	80035d0 <_Balloc>
 8003b1e:	b930      	cbnz	r0, 8003b2e <__mdiff+0x2e>
 8003b20:	4b3a      	ldr	r3, [pc, #232]	; (8003c0c <__mdiff+0x10c>)
 8003b22:	4602      	mov	r2, r0
 8003b24:	f240 2137 	movw	r1, #567	; 0x237
 8003b28:	4839      	ldr	r0, [pc, #228]	; (8003c10 <__mdiff+0x110>)
 8003b2a:	f000 fad7 	bl	80040dc <__assert_func>
 8003b2e:	2301      	movs	r3, #1
 8003b30:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003b34:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b38:	bfa4      	itt	ge
 8003b3a:	4643      	movge	r3, r8
 8003b3c:	46a0      	movge	r8, r4
 8003b3e:	4630      	mov	r0, r6
 8003b40:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003b44:	bfa6      	itte	ge
 8003b46:	461c      	movge	r4, r3
 8003b48:	2500      	movge	r5, #0
 8003b4a:	2501      	movlt	r5, #1
 8003b4c:	f7ff fd40 	bl	80035d0 <_Balloc>
 8003b50:	b920      	cbnz	r0, 8003b5c <__mdiff+0x5c>
 8003b52:	4b2e      	ldr	r3, [pc, #184]	; (8003c0c <__mdiff+0x10c>)
 8003b54:	4602      	mov	r2, r0
 8003b56:	f240 2145 	movw	r1, #581	; 0x245
 8003b5a:	e7e5      	b.n	8003b28 <__mdiff+0x28>
 8003b5c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003b60:	6926      	ldr	r6, [r4, #16]
 8003b62:	60c5      	str	r5, [r0, #12]
 8003b64:	f104 0914 	add.w	r9, r4, #20
 8003b68:	f108 0514 	add.w	r5, r8, #20
 8003b6c:	f100 0e14 	add.w	lr, r0, #20
 8003b70:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003b74:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003b78:	f108 0210 	add.w	r2, r8, #16
 8003b7c:	46f2      	mov	sl, lr
 8003b7e:	2100      	movs	r1, #0
 8003b80:	f859 3b04 	ldr.w	r3, [r9], #4
 8003b84:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003b88:	fa11 f88b 	uxtah	r8, r1, fp
 8003b8c:	b299      	uxth	r1, r3
 8003b8e:	0c1b      	lsrs	r3, r3, #16
 8003b90:	eba8 0801 	sub.w	r8, r8, r1
 8003b94:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003b98:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003b9c:	fa1f f888 	uxth.w	r8, r8
 8003ba0:	1419      	asrs	r1, r3, #16
 8003ba2:	454e      	cmp	r6, r9
 8003ba4:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003ba8:	f84a 3b04 	str.w	r3, [sl], #4
 8003bac:	d8e8      	bhi.n	8003b80 <__mdiff+0x80>
 8003bae:	1b33      	subs	r3, r6, r4
 8003bb0:	3b15      	subs	r3, #21
 8003bb2:	f023 0303 	bic.w	r3, r3, #3
 8003bb6:	3304      	adds	r3, #4
 8003bb8:	3415      	adds	r4, #21
 8003bba:	42a6      	cmp	r6, r4
 8003bbc:	bf38      	it	cc
 8003bbe:	2304      	movcc	r3, #4
 8003bc0:	441d      	add	r5, r3
 8003bc2:	4473      	add	r3, lr
 8003bc4:	469e      	mov	lr, r3
 8003bc6:	462e      	mov	r6, r5
 8003bc8:	4566      	cmp	r6, ip
 8003bca:	d30e      	bcc.n	8003bea <__mdiff+0xea>
 8003bcc:	f10c 0203 	add.w	r2, ip, #3
 8003bd0:	1b52      	subs	r2, r2, r5
 8003bd2:	f022 0203 	bic.w	r2, r2, #3
 8003bd6:	3d03      	subs	r5, #3
 8003bd8:	45ac      	cmp	ip, r5
 8003bda:	bf38      	it	cc
 8003bdc:	2200      	movcc	r2, #0
 8003bde:	4413      	add	r3, r2
 8003be0:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003be4:	b17a      	cbz	r2, 8003c06 <__mdiff+0x106>
 8003be6:	6107      	str	r7, [r0, #16]
 8003be8:	e7a4      	b.n	8003b34 <__mdiff+0x34>
 8003bea:	f856 8b04 	ldr.w	r8, [r6], #4
 8003bee:	fa11 f288 	uxtah	r2, r1, r8
 8003bf2:	1414      	asrs	r4, r2, #16
 8003bf4:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003bf8:	b292      	uxth	r2, r2
 8003bfa:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003bfe:	f84e 2b04 	str.w	r2, [lr], #4
 8003c02:	1421      	asrs	r1, r4, #16
 8003c04:	e7e0      	b.n	8003bc8 <__mdiff+0xc8>
 8003c06:	3f01      	subs	r7, #1
 8003c08:	e7ea      	b.n	8003be0 <__mdiff+0xe0>
 8003c0a:	bf00      	nop
 8003c0c:	0800472c 	.word	0x0800472c
 8003c10:	0800474e 	.word	0x0800474e

08003c14 <__d2b>:
 8003c14:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003c18:	460f      	mov	r7, r1
 8003c1a:	2101      	movs	r1, #1
 8003c1c:	ec59 8b10 	vmov	r8, r9, d0
 8003c20:	4616      	mov	r6, r2
 8003c22:	f7ff fcd5 	bl	80035d0 <_Balloc>
 8003c26:	4604      	mov	r4, r0
 8003c28:	b930      	cbnz	r0, 8003c38 <__d2b+0x24>
 8003c2a:	4602      	mov	r2, r0
 8003c2c:	4b24      	ldr	r3, [pc, #144]	; (8003cc0 <__d2b+0xac>)
 8003c2e:	4825      	ldr	r0, [pc, #148]	; (8003cc4 <__d2b+0xb0>)
 8003c30:	f240 310f 	movw	r1, #783	; 0x30f
 8003c34:	f000 fa52 	bl	80040dc <__assert_func>
 8003c38:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003c3c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003c40:	bb2d      	cbnz	r5, 8003c8e <__d2b+0x7a>
 8003c42:	9301      	str	r3, [sp, #4]
 8003c44:	f1b8 0300 	subs.w	r3, r8, #0
 8003c48:	d026      	beq.n	8003c98 <__d2b+0x84>
 8003c4a:	4668      	mov	r0, sp
 8003c4c:	9300      	str	r3, [sp, #0]
 8003c4e:	f7ff fd87 	bl	8003760 <__lo0bits>
 8003c52:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003c56:	b1e8      	cbz	r0, 8003c94 <__d2b+0x80>
 8003c58:	f1c0 0320 	rsb	r3, r0, #32
 8003c5c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c60:	430b      	orrs	r3, r1
 8003c62:	40c2      	lsrs	r2, r0
 8003c64:	6163      	str	r3, [r4, #20]
 8003c66:	9201      	str	r2, [sp, #4]
 8003c68:	9b01      	ldr	r3, [sp, #4]
 8003c6a:	61a3      	str	r3, [r4, #24]
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	bf14      	ite	ne
 8003c70:	2202      	movne	r2, #2
 8003c72:	2201      	moveq	r2, #1
 8003c74:	6122      	str	r2, [r4, #16]
 8003c76:	b1bd      	cbz	r5, 8003ca8 <__d2b+0x94>
 8003c78:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003c7c:	4405      	add	r5, r0
 8003c7e:	603d      	str	r5, [r7, #0]
 8003c80:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003c84:	6030      	str	r0, [r6, #0]
 8003c86:	4620      	mov	r0, r4
 8003c88:	b003      	add	sp, #12
 8003c8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003c8e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003c92:	e7d6      	b.n	8003c42 <__d2b+0x2e>
 8003c94:	6161      	str	r1, [r4, #20]
 8003c96:	e7e7      	b.n	8003c68 <__d2b+0x54>
 8003c98:	a801      	add	r0, sp, #4
 8003c9a:	f7ff fd61 	bl	8003760 <__lo0bits>
 8003c9e:	9b01      	ldr	r3, [sp, #4]
 8003ca0:	6163      	str	r3, [r4, #20]
 8003ca2:	3020      	adds	r0, #32
 8003ca4:	2201      	movs	r2, #1
 8003ca6:	e7e5      	b.n	8003c74 <__d2b+0x60>
 8003ca8:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003cac:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003cb0:	6038      	str	r0, [r7, #0]
 8003cb2:	6918      	ldr	r0, [r3, #16]
 8003cb4:	f7ff fd34 	bl	8003720 <__hi0bits>
 8003cb8:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003cbc:	e7e2      	b.n	8003c84 <__d2b+0x70>
 8003cbe:	bf00      	nop
 8003cc0:	0800472c 	.word	0x0800472c
 8003cc4:	0800474e 	.word	0x0800474e

08003cc8 <__sread>:
 8003cc8:	b510      	push	{r4, lr}
 8003cca:	460c      	mov	r4, r1
 8003ccc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003cd0:	f000 f9c2 	bl	8004058 <_read_r>
 8003cd4:	2800      	cmp	r0, #0
 8003cd6:	bfab      	itete	ge
 8003cd8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003cda:	89a3      	ldrhlt	r3, [r4, #12]
 8003cdc:	181b      	addge	r3, r3, r0
 8003cde:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003ce2:	bfac      	ite	ge
 8003ce4:	6563      	strge	r3, [r4, #84]	; 0x54
 8003ce6:	81a3      	strhlt	r3, [r4, #12]
 8003ce8:	bd10      	pop	{r4, pc}

08003cea <__swrite>:
 8003cea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003cee:	461f      	mov	r7, r3
 8003cf0:	898b      	ldrh	r3, [r1, #12]
 8003cf2:	05db      	lsls	r3, r3, #23
 8003cf4:	4605      	mov	r5, r0
 8003cf6:	460c      	mov	r4, r1
 8003cf8:	4616      	mov	r6, r2
 8003cfa:	d505      	bpl.n	8003d08 <__swrite+0x1e>
 8003cfc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d00:	2302      	movs	r3, #2
 8003d02:	2200      	movs	r2, #0
 8003d04:	f000 f996 	bl	8004034 <_lseek_r>
 8003d08:	89a3      	ldrh	r3, [r4, #12]
 8003d0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003d0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003d12:	81a3      	strh	r3, [r4, #12]
 8003d14:	4632      	mov	r2, r6
 8003d16:	463b      	mov	r3, r7
 8003d18:	4628      	mov	r0, r5
 8003d1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d1e:	f000 b9bd 	b.w	800409c <_write_r>

08003d22 <__sseek>:
 8003d22:	b510      	push	{r4, lr}
 8003d24:	460c      	mov	r4, r1
 8003d26:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d2a:	f000 f983 	bl	8004034 <_lseek_r>
 8003d2e:	1c43      	adds	r3, r0, #1
 8003d30:	89a3      	ldrh	r3, [r4, #12]
 8003d32:	bf15      	itete	ne
 8003d34:	6560      	strne	r0, [r4, #84]	; 0x54
 8003d36:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003d3a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003d3e:	81a3      	strheq	r3, [r4, #12]
 8003d40:	bf18      	it	ne
 8003d42:	81a3      	strhne	r3, [r4, #12]
 8003d44:	bd10      	pop	{r4, pc}

08003d46 <__sclose>:
 8003d46:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d4a:	f000 b941 	b.w	8003fd0 <_close_r>

08003d4e <_realloc_r>:
 8003d4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d52:	4680      	mov	r8, r0
 8003d54:	4614      	mov	r4, r2
 8003d56:	460e      	mov	r6, r1
 8003d58:	b921      	cbnz	r1, 8003d64 <_realloc_r+0x16>
 8003d5a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d5e:	4611      	mov	r1, r2
 8003d60:	f7ff bafc 	b.w	800335c <_malloc_r>
 8003d64:	b92a      	cbnz	r2, 8003d72 <_realloc_r+0x24>
 8003d66:	f000 f9ed 	bl	8004144 <_free_r>
 8003d6a:	4625      	mov	r5, r4
 8003d6c:	4628      	mov	r0, r5
 8003d6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d72:	f000 fa45 	bl	8004200 <_malloc_usable_size_r>
 8003d76:	4284      	cmp	r4, r0
 8003d78:	4607      	mov	r7, r0
 8003d7a:	d802      	bhi.n	8003d82 <_realloc_r+0x34>
 8003d7c:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003d80:	d812      	bhi.n	8003da8 <_realloc_r+0x5a>
 8003d82:	4621      	mov	r1, r4
 8003d84:	4640      	mov	r0, r8
 8003d86:	f7ff fae9 	bl	800335c <_malloc_r>
 8003d8a:	4605      	mov	r5, r0
 8003d8c:	2800      	cmp	r0, #0
 8003d8e:	d0ed      	beq.n	8003d6c <_realloc_r+0x1e>
 8003d90:	42bc      	cmp	r4, r7
 8003d92:	4622      	mov	r2, r4
 8003d94:	4631      	mov	r1, r6
 8003d96:	bf28      	it	cs
 8003d98:	463a      	movcs	r2, r7
 8003d9a:	f000 f991 	bl	80040c0 <memcpy>
 8003d9e:	4631      	mov	r1, r6
 8003da0:	4640      	mov	r0, r8
 8003da2:	f000 f9cf 	bl	8004144 <_free_r>
 8003da6:	e7e1      	b.n	8003d6c <_realloc_r+0x1e>
 8003da8:	4635      	mov	r5, r6
 8003daa:	e7df      	b.n	8003d6c <_realloc_r+0x1e>

08003dac <__swbuf_r>:
 8003dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dae:	460e      	mov	r6, r1
 8003db0:	4614      	mov	r4, r2
 8003db2:	4605      	mov	r5, r0
 8003db4:	b118      	cbz	r0, 8003dbe <__swbuf_r+0x12>
 8003db6:	6a03      	ldr	r3, [r0, #32]
 8003db8:	b90b      	cbnz	r3, 8003dbe <__swbuf_r+0x12>
 8003dba:	f7fe f8b3 	bl	8001f24 <__sinit>
 8003dbe:	69a3      	ldr	r3, [r4, #24]
 8003dc0:	60a3      	str	r3, [r4, #8]
 8003dc2:	89a3      	ldrh	r3, [r4, #12]
 8003dc4:	071a      	lsls	r2, r3, #28
 8003dc6:	d525      	bpl.n	8003e14 <__swbuf_r+0x68>
 8003dc8:	6923      	ldr	r3, [r4, #16]
 8003dca:	b31b      	cbz	r3, 8003e14 <__swbuf_r+0x68>
 8003dcc:	6823      	ldr	r3, [r4, #0]
 8003dce:	6922      	ldr	r2, [r4, #16]
 8003dd0:	1a98      	subs	r0, r3, r2
 8003dd2:	6963      	ldr	r3, [r4, #20]
 8003dd4:	b2f6      	uxtb	r6, r6
 8003dd6:	4283      	cmp	r3, r0
 8003dd8:	4637      	mov	r7, r6
 8003dda:	dc04      	bgt.n	8003de6 <__swbuf_r+0x3a>
 8003ddc:	4621      	mov	r1, r4
 8003dde:	4628      	mov	r0, r5
 8003de0:	f7ff fbc2 	bl	8003568 <_fflush_r>
 8003de4:	b9e0      	cbnz	r0, 8003e20 <__swbuf_r+0x74>
 8003de6:	68a3      	ldr	r3, [r4, #8]
 8003de8:	3b01      	subs	r3, #1
 8003dea:	60a3      	str	r3, [r4, #8]
 8003dec:	6823      	ldr	r3, [r4, #0]
 8003dee:	1c5a      	adds	r2, r3, #1
 8003df0:	6022      	str	r2, [r4, #0]
 8003df2:	701e      	strb	r6, [r3, #0]
 8003df4:	6962      	ldr	r2, [r4, #20]
 8003df6:	1c43      	adds	r3, r0, #1
 8003df8:	429a      	cmp	r2, r3
 8003dfa:	d004      	beq.n	8003e06 <__swbuf_r+0x5a>
 8003dfc:	89a3      	ldrh	r3, [r4, #12]
 8003dfe:	07db      	lsls	r3, r3, #31
 8003e00:	d506      	bpl.n	8003e10 <__swbuf_r+0x64>
 8003e02:	2e0a      	cmp	r6, #10
 8003e04:	d104      	bne.n	8003e10 <__swbuf_r+0x64>
 8003e06:	4621      	mov	r1, r4
 8003e08:	4628      	mov	r0, r5
 8003e0a:	f7ff fbad 	bl	8003568 <_fflush_r>
 8003e0e:	b938      	cbnz	r0, 8003e20 <__swbuf_r+0x74>
 8003e10:	4638      	mov	r0, r7
 8003e12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e14:	4621      	mov	r1, r4
 8003e16:	4628      	mov	r0, r5
 8003e18:	f000 f806 	bl	8003e28 <__swsetup_r>
 8003e1c:	2800      	cmp	r0, #0
 8003e1e:	d0d5      	beq.n	8003dcc <__swbuf_r+0x20>
 8003e20:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8003e24:	e7f4      	b.n	8003e10 <__swbuf_r+0x64>
	...

08003e28 <__swsetup_r>:
 8003e28:	b538      	push	{r3, r4, r5, lr}
 8003e2a:	4b2a      	ldr	r3, [pc, #168]	; (8003ed4 <__swsetup_r+0xac>)
 8003e2c:	4605      	mov	r5, r0
 8003e2e:	6818      	ldr	r0, [r3, #0]
 8003e30:	460c      	mov	r4, r1
 8003e32:	b118      	cbz	r0, 8003e3c <__swsetup_r+0x14>
 8003e34:	6a03      	ldr	r3, [r0, #32]
 8003e36:	b90b      	cbnz	r3, 8003e3c <__swsetup_r+0x14>
 8003e38:	f7fe f874 	bl	8001f24 <__sinit>
 8003e3c:	89a3      	ldrh	r3, [r4, #12]
 8003e3e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003e42:	0718      	lsls	r0, r3, #28
 8003e44:	d422      	bmi.n	8003e8c <__swsetup_r+0x64>
 8003e46:	06d9      	lsls	r1, r3, #27
 8003e48:	d407      	bmi.n	8003e5a <__swsetup_r+0x32>
 8003e4a:	2309      	movs	r3, #9
 8003e4c:	602b      	str	r3, [r5, #0]
 8003e4e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003e52:	81a3      	strh	r3, [r4, #12]
 8003e54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003e58:	e034      	b.n	8003ec4 <__swsetup_r+0x9c>
 8003e5a:	0758      	lsls	r0, r3, #29
 8003e5c:	d512      	bpl.n	8003e84 <__swsetup_r+0x5c>
 8003e5e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e60:	b141      	cbz	r1, 8003e74 <__swsetup_r+0x4c>
 8003e62:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003e66:	4299      	cmp	r1, r3
 8003e68:	d002      	beq.n	8003e70 <__swsetup_r+0x48>
 8003e6a:	4628      	mov	r0, r5
 8003e6c:	f000 f96a 	bl	8004144 <_free_r>
 8003e70:	2300      	movs	r3, #0
 8003e72:	6363      	str	r3, [r4, #52]	; 0x34
 8003e74:	89a3      	ldrh	r3, [r4, #12]
 8003e76:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003e7a:	81a3      	strh	r3, [r4, #12]
 8003e7c:	2300      	movs	r3, #0
 8003e7e:	6063      	str	r3, [r4, #4]
 8003e80:	6923      	ldr	r3, [r4, #16]
 8003e82:	6023      	str	r3, [r4, #0]
 8003e84:	89a3      	ldrh	r3, [r4, #12]
 8003e86:	f043 0308 	orr.w	r3, r3, #8
 8003e8a:	81a3      	strh	r3, [r4, #12]
 8003e8c:	6923      	ldr	r3, [r4, #16]
 8003e8e:	b94b      	cbnz	r3, 8003ea4 <__swsetup_r+0x7c>
 8003e90:	89a3      	ldrh	r3, [r4, #12]
 8003e92:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003e96:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003e9a:	d003      	beq.n	8003ea4 <__swsetup_r+0x7c>
 8003e9c:	4621      	mov	r1, r4
 8003e9e:	4628      	mov	r0, r5
 8003ea0:	f000 f840 	bl	8003f24 <__smakebuf_r>
 8003ea4:	89a0      	ldrh	r0, [r4, #12]
 8003ea6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003eaa:	f010 0301 	ands.w	r3, r0, #1
 8003eae:	d00a      	beq.n	8003ec6 <__swsetup_r+0x9e>
 8003eb0:	2300      	movs	r3, #0
 8003eb2:	60a3      	str	r3, [r4, #8]
 8003eb4:	6963      	ldr	r3, [r4, #20]
 8003eb6:	425b      	negs	r3, r3
 8003eb8:	61a3      	str	r3, [r4, #24]
 8003eba:	6923      	ldr	r3, [r4, #16]
 8003ebc:	b943      	cbnz	r3, 8003ed0 <__swsetup_r+0xa8>
 8003ebe:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003ec2:	d1c4      	bne.n	8003e4e <__swsetup_r+0x26>
 8003ec4:	bd38      	pop	{r3, r4, r5, pc}
 8003ec6:	0781      	lsls	r1, r0, #30
 8003ec8:	bf58      	it	pl
 8003eca:	6963      	ldrpl	r3, [r4, #20]
 8003ecc:	60a3      	str	r3, [r4, #8]
 8003ece:	e7f4      	b.n	8003eba <__swsetup_r+0x92>
 8003ed0:	2000      	movs	r0, #0
 8003ed2:	e7f7      	b.n	8003ec4 <__swsetup_r+0x9c>
 8003ed4:	20000058 	.word	0x20000058

08003ed8 <__swhatbuf_r>:
 8003ed8:	b570      	push	{r4, r5, r6, lr}
 8003eda:	460c      	mov	r4, r1
 8003edc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003ee0:	2900      	cmp	r1, #0
 8003ee2:	b096      	sub	sp, #88	; 0x58
 8003ee4:	4615      	mov	r5, r2
 8003ee6:	461e      	mov	r6, r3
 8003ee8:	da0d      	bge.n	8003f06 <__swhatbuf_r+0x2e>
 8003eea:	89a3      	ldrh	r3, [r4, #12]
 8003eec:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003ef0:	f04f 0100 	mov.w	r1, #0
 8003ef4:	bf0c      	ite	eq
 8003ef6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8003efa:	2340      	movne	r3, #64	; 0x40
 8003efc:	2000      	movs	r0, #0
 8003efe:	6031      	str	r1, [r6, #0]
 8003f00:	602b      	str	r3, [r5, #0]
 8003f02:	b016      	add	sp, #88	; 0x58
 8003f04:	bd70      	pop	{r4, r5, r6, pc}
 8003f06:	466a      	mov	r2, sp
 8003f08:	f000 f872 	bl	8003ff0 <_fstat_r>
 8003f0c:	2800      	cmp	r0, #0
 8003f0e:	dbec      	blt.n	8003eea <__swhatbuf_r+0x12>
 8003f10:	9901      	ldr	r1, [sp, #4]
 8003f12:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8003f16:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8003f1a:	4259      	negs	r1, r3
 8003f1c:	4159      	adcs	r1, r3
 8003f1e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003f22:	e7eb      	b.n	8003efc <__swhatbuf_r+0x24>

08003f24 <__smakebuf_r>:
 8003f24:	898b      	ldrh	r3, [r1, #12]
 8003f26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003f28:	079d      	lsls	r5, r3, #30
 8003f2a:	4606      	mov	r6, r0
 8003f2c:	460c      	mov	r4, r1
 8003f2e:	d507      	bpl.n	8003f40 <__smakebuf_r+0x1c>
 8003f30:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003f34:	6023      	str	r3, [r4, #0]
 8003f36:	6123      	str	r3, [r4, #16]
 8003f38:	2301      	movs	r3, #1
 8003f3a:	6163      	str	r3, [r4, #20]
 8003f3c:	b002      	add	sp, #8
 8003f3e:	bd70      	pop	{r4, r5, r6, pc}
 8003f40:	ab01      	add	r3, sp, #4
 8003f42:	466a      	mov	r2, sp
 8003f44:	f7ff ffc8 	bl	8003ed8 <__swhatbuf_r>
 8003f48:	9900      	ldr	r1, [sp, #0]
 8003f4a:	4605      	mov	r5, r0
 8003f4c:	4630      	mov	r0, r6
 8003f4e:	f7ff fa05 	bl	800335c <_malloc_r>
 8003f52:	b948      	cbnz	r0, 8003f68 <__smakebuf_r+0x44>
 8003f54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f58:	059a      	lsls	r2, r3, #22
 8003f5a:	d4ef      	bmi.n	8003f3c <__smakebuf_r+0x18>
 8003f5c:	f023 0303 	bic.w	r3, r3, #3
 8003f60:	f043 0302 	orr.w	r3, r3, #2
 8003f64:	81a3      	strh	r3, [r4, #12]
 8003f66:	e7e3      	b.n	8003f30 <__smakebuf_r+0xc>
 8003f68:	89a3      	ldrh	r3, [r4, #12]
 8003f6a:	6020      	str	r0, [r4, #0]
 8003f6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003f70:	81a3      	strh	r3, [r4, #12]
 8003f72:	9b00      	ldr	r3, [sp, #0]
 8003f74:	6163      	str	r3, [r4, #20]
 8003f76:	9b01      	ldr	r3, [sp, #4]
 8003f78:	6120      	str	r0, [r4, #16]
 8003f7a:	b15b      	cbz	r3, 8003f94 <__smakebuf_r+0x70>
 8003f7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003f80:	4630      	mov	r0, r6
 8003f82:	f000 f847 	bl	8004014 <_isatty_r>
 8003f86:	b128      	cbz	r0, 8003f94 <__smakebuf_r+0x70>
 8003f88:	89a3      	ldrh	r3, [r4, #12]
 8003f8a:	f023 0303 	bic.w	r3, r3, #3
 8003f8e:	f043 0301 	orr.w	r3, r3, #1
 8003f92:	81a3      	strh	r3, [r4, #12]
 8003f94:	89a3      	ldrh	r3, [r4, #12]
 8003f96:	431d      	orrs	r5, r3
 8003f98:	81a5      	strh	r5, [r4, #12]
 8003f9a:	e7cf      	b.n	8003f3c <__smakebuf_r+0x18>

08003f9c <memmove>:
 8003f9c:	4288      	cmp	r0, r1
 8003f9e:	b510      	push	{r4, lr}
 8003fa0:	eb01 0402 	add.w	r4, r1, r2
 8003fa4:	d902      	bls.n	8003fac <memmove+0x10>
 8003fa6:	4284      	cmp	r4, r0
 8003fa8:	4623      	mov	r3, r4
 8003faa:	d807      	bhi.n	8003fbc <memmove+0x20>
 8003fac:	1e43      	subs	r3, r0, #1
 8003fae:	42a1      	cmp	r1, r4
 8003fb0:	d008      	beq.n	8003fc4 <memmove+0x28>
 8003fb2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003fb6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003fba:	e7f8      	b.n	8003fae <memmove+0x12>
 8003fbc:	4402      	add	r2, r0
 8003fbe:	4601      	mov	r1, r0
 8003fc0:	428a      	cmp	r2, r1
 8003fc2:	d100      	bne.n	8003fc6 <memmove+0x2a>
 8003fc4:	bd10      	pop	{r4, pc}
 8003fc6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003fca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003fce:	e7f7      	b.n	8003fc0 <memmove+0x24>

08003fd0 <_close_r>:
 8003fd0:	b538      	push	{r3, r4, r5, lr}
 8003fd2:	4d06      	ldr	r5, [pc, #24]	; (8003fec <_close_r+0x1c>)
 8003fd4:	2300      	movs	r3, #0
 8003fd6:	4604      	mov	r4, r0
 8003fd8:	4608      	mov	r0, r1
 8003fda:	602b      	str	r3, [r5, #0]
 8003fdc:	f7fd f9fb 	bl	80013d6 <_close>
 8003fe0:	1c43      	adds	r3, r0, #1
 8003fe2:	d102      	bne.n	8003fea <_close_r+0x1a>
 8003fe4:	682b      	ldr	r3, [r5, #0]
 8003fe6:	b103      	cbz	r3, 8003fea <_close_r+0x1a>
 8003fe8:	6023      	str	r3, [r4, #0]
 8003fea:	bd38      	pop	{r3, r4, r5, pc}
 8003fec:	20000330 	.word	0x20000330

08003ff0 <_fstat_r>:
 8003ff0:	b538      	push	{r3, r4, r5, lr}
 8003ff2:	4d07      	ldr	r5, [pc, #28]	; (8004010 <_fstat_r+0x20>)
 8003ff4:	2300      	movs	r3, #0
 8003ff6:	4604      	mov	r4, r0
 8003ff8:	4608      	mov	r0, r1
 8003ffa:	4611      	mov	r1, r2
 8003ffc:	602b      	str	r3, [r5, #0]
 8003ffe:	f7fd f9f6 	bl	80013ee <_fstat>
 8004002:	1c43      	adds	r3, r0, #1
 8004004:	d102      	bne.n	800400c <_fstat_r+0x1c>
 8004006:	682b      	ldr	r3, [r5, #0]
 8004008:	b103      	cbz	r3, 800400c <_fstat_r+0x1c>
 800400a:	6023      	str	r3, [r4, #0]
 800400c:	bd38      	pop	{r3, r4, r5, pc}
 800400e:	bf00      	nop
 8004010:	20000330 	.word	0x20000330

08004014 <_isatty_r>:
 8004014:	b538      	push	{r3, r4, r5, lr}
 8004016:	4d06      	ldr	r5, [pc, #24]	; (8004030 <_isatty_r+0x1c>)
 8004018:	2300      	movs	r3, #0
 800401a:	4604      	mov	r4, r0
 800401c:	4608      	mov	r0, r1
 800401e:	602b      	str	r3, [r5, #0]
 8004020:	f7fd f9f5 	bl	800140e <_isatty>
 8004024:	1c43      	adds	r3, r0, #1
 8004026:	d102      	bne.n	800402e <_isatty_r+0x1a>
 8004028:	682b      	ldr	r3, [r5, #0]
 800402a:	b103      	cbz	r3, 800402e <_isatty_r+0x1a>
 800402c:	6023      	str	r3, [r4, #0]
 800402e:	bd38      	pop	{r3, r4, r5, pc}
 8004030:	20000330 	.word	0x20000330

08004034 <_lseek_r>:
 8004034:	b538      	push	{r3, r4, r5, lr}
 8004036:	4d07      	ldr	r5, [pc, #28]	; (8004054 <_lseek_r+0x20>)
 8004038:	4604      	mov	r4, r0
 800403a:	4608      	mov	r0, r1
 800403c:	4611      	mov	r1, r2
 800403e:	2200      	movs	r2, #0
 8004040:	602a      	str	r2, [r5, #0]
 8004042:	461a      	mov	r2, r3
 8004044:	f7fd f9ee 	bl	8001424 <_lseek>
 8004048:	1c43      	adds	r3, r0, #1
 800404a:	d102      	bne.n	8004052 <_lseek_r+0x1e>
 800404c:	682b      	ldr	r3, [r5, #0]
 800404e:	b103      	cbz	r3, 8004052 <_lseek_r+0x1e>
 8004050:	6023      	str	r3, [r4, #0]
 8004052:	bd38      	pop	{r3, r4, r5, pc}
 8004054:	20000330 	.word	0x20000330

08004058 <_read_r>:
 8004058:	b538      	push	{r3, r4, r5, lr}
 800405a:	4d07      	ldr	r5, [pc, #28]	; (8004078 <_read_r+0x20>)
 800405c:	4604      	mov	r4, r0
 800405e:	4608      	mov	r0, r1
 8004060:	4611      	mov	r1, r2
 8004062:	2200      	movs	r2, #0
 8004064:	602a      	str	r2, [r5, #0]
 8004066:	461a      	mov	r2, r3
 8004068:	f7fd f998 	bl	800139c <_read>
 800406c:	1c43      	adds	r3, r0, #1
 800406e:	d102      	bne.n	8004076 <_read_r+0x1e>
 8004070:	682b      	ldr	r3, [r5, #0]
 8004072:	b103      	cbz	r3, 8004076 <_read_r+0x1e>
 8004074:	6023      	str	r3, [r4, #0]
 8004076:	bd38      	pop	{r3, r4, r5, pc}
 8004078:	20000330 	.word	0x20000330

0800407c <_sbrk_r>:
 800407c:	b538      	push	{r3, r4, r5, lr}
 800407e:	4d06      	ldr	r5, [pc, #24]	; (8004098 <_sbrk_r+0x1c>)
 8004080:	2300      	movs	r3, #0
 8004082:	4604      	mov	r4, r0
 8004084:	4608      	mov	r0, r1
 8004086:	602b      	str	r3, [r5, #0]
 8004088:	f7fd f9da 	bl	8001440 <_sbrk>
 800408c:	1c43      	adds	r3, r0, #1
 800408e:	d102      	bne.n	8004096 <_sbrk_r+0x1a>
 8004090:	682b      	ldr	r3, [r5, #0]
 8004092:	b103      	cbz	r3, 8004096 <_sbrk_r+0x1a>
 8004094:	6023      	str	r3, [r4, #0]
 8004096:	bd38      	pop	{r3, r4, r5, pc}
 8004098:	20000330 	.word	0x20000330

0800409c <_write_r>:
 800409c:	b538      	push	{r3, r4, r5, lr}
 800409e:	4d07      	ldr	r5, [pc, #28]	; (80040bc <_write_r+0x20>)
 80040a0:	4604      	mov	r4, r0
 80040a2:	4608      	mov	r0, r1
 80040a4:	4611      	mov	r1, r2
 80040a6:	2200      	movs	r2, #0
 80040a8:	602a      	str	r2, [r5, #0]
 80040aa:	461a      	mov	r2, r3
 80040ac:	f7fc ff1e 	bl	8000eec <_write>
 80040b0:	1c43      	adds	r3, r0, #1
 80040b2:	d102      	bne.n	80040ba <_write_r+0x1e>
 80040b4:	682b      	ldr	r3, [r5, #0]
 80040b6:	b103      	cbz	r3, 80040ba <_write_r+0x1e>
 80040b8:	6023      	str	r3, [r4, #0]
 80040ba:	bd38      	pop	{r3, r4, r5, pc}
 80040bc:	20000330 	.word	0x20000330

080040c0 <memcpy>:
 80040c0:	440a      	add	r2, r1
 80040c2:	4291      	cmp	r1, r2
 80040c4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80040c8:	d100      	bne.n	80040cc <memcpy+0xc>
 80040ca:	4770      	bx	lr
 80040cc:	b510      	push	{r4, lr}
 80040ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 80040d2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80040d6:	4291      	cmp	r1, r2
 80040d8:	d1f9      	bne.n	80040ce <memcpy+0xe>
 80040da:	bd10      	pop	{r4, pc}

080040dc <__assert_func>:
 80040dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80040de:	4614      	mov	r4, r2
 80040e0:	461a      	mov	r2, r3
 80040e2:	4b09      	ldr	r3, [pc, #36]	; (8004108 <__assert_func+0x2c>)
 80040e4:	681b      	ldr	r3, [r3, #0]
 80040e6:	4605      	mov	r5, r0
 80040e8:	68d8      	ldr	r0, [r3, #12]
 80040ea:	b14c      	cbz	r4, 8004100 <__assert_func+0x24>
 80040ec:	4b07      	ldr	r3, [pc, #28]	; (800410c <__assert_func+0x30>)
 80040ee:	9100      	str	r1, [sp, #0]
 80040f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80040f4:	4906      	ldr	r1, [pc, #24]	; (8004110 <__assert_func+0x34>)
 80040f6:	462b      	mov	r3, r5
 80040f8:	f000 f88a 	bl	8004210 <fiprintf>
 80040fc:	f000 f8a7 	bl	800424e <abort>
 8004100:	4b04      	ldr	r3, [pc, #16]	; (8004114 <__assert_func+0x38>)
 8004102:	461c      	mov	r4, r3
 8004104:	e7f3      	b.n	80040ee <__assert_func+0x12>
 8004106:	bf00      	nop
 8004108:	20000058 	.word	0x20000058
 800410c:	080049af 	.word	0x080049af
 8004110:	080049bc 	.word	0x080049bc
 8004114:	080049ea 	.word	0x080049ea

08004118 <_calloc_r>:
 8004118:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800411a:	fba1 2402 	umull	r2, r4, r1, r2
 800411e:	b94c      	cbnz	r4, 8004134 <_calloc_r+0x1c>
 8004120:	4611      	mov	r1, r2
 8004122:	9201      	str	r2, [sp, #4]
 8004124:	f7ff f91a 	bl	800335c <_malloc_r>
 8004128:	9a01      	ldr	r2, [sp, #4]
 800412a:	4605      	mov	r5, r0
 800412c:	b930      	cbnz	r0, 800413c <_calloc_r+0x24>
 800412e:	4628      	mov	r0, r5
 8004130:	b003      	add	sp, #12
 8004132:	bd30      	pop	{r4, r5, pc}
 8004134:	220c      	movs	r2, #12
 8004136:	6002      	str	r2, [r0, #0]
 8004138:	2500      	movs	r5, #0
 800413a:	e7f8      	b.n	800412e <_calloc_r+0x16>
 800413c:	4621      	mov	r1, r4
 800413e:	f7fd ff95 	bl	800206c <memset>
 8004142:	e7f4      	b.n	800412e <_calloc_r+0x16>

08004144 <_free_r>:
 8004144:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004146:	2900      	cmp	r1, #0
 8004148:	d044      	beq.n	80041d4 <_free_r+0x90>
 800414a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800414e:	9001      	str	r0, [sp, #4]
 8004150:	2b00      	cmp	r3, #0
 8004152:	f1a1 0404 	sub.w	r4, r1, #4
 8004156:	bfb8      	it	lt
 8004158:	18e4      	addlt	r4, r4, r3
 800415a:	f7ff fa2d 	bl	80035b8 <__malloc_lock>
 800415e:	4a1e      	ldr	r2, [pc, #120]	; (80041d8 <_free_r+0x94>)
 8004160:	9801      	ldr	r0, [sp, #4]
 8004162:	6813      	ldr	r3, [r2, #0]
 8004164:	b933      	cbnz	r3, 8004174 <_free_r+0x30>
 8004166:	6063      	str	r3, [r4, #4]
 8004168:	6014      	str	r4, [r2, #0]
 800416a:	b003      	add	sp, #12
 800416c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004170:	f7ff ba28 	b.w	80035c4 <__malloc_unlock>
 8004174:	42a3      	cmp	r3, r4
 8004176:	d908      	bls.n	800418a <_free_r+0x46>
 8004178:	6825      	ldr	r5, [r4, #0]
 800417a:	1961      	adds	r1, r4, r5
 800417c:	428b      	cmp	r3, r1
 800417e:	bf01      	itttt	eq
 8004180:	6819      	ldreq	r1, [r3, #0]
 8004182:	685b      	ldreq	r3, [r3, #4]
 8004184:	1949      	addeq	r1, r1, r5
 8004186:	6021      	streq	r1, [r4, #0]
 8004188:	e7ed      	b.n	8004166 <_free_r+0x22>
 800418a:	461a      	mov	r2, r3
 800418c:	685b      	ldr	r3, [r3, #4]
 800418e:	b10b      	cbz	r3, 8004194 <_free_r+0x50>
 8004190:	42a3      	cmp	r3, r4
 8004192:	d9fa      	bls.n	800418a <_free_r+0x46>
 8004194:	6811      	ldr	r1, [r2, #0]
 8004196:	1855      	adds	r5, r2, r1
 8004198:	42a5      	cmp	r5, r4
 800419a:	d10b      	bne.n	80041b4 <_free_r+0x70>
 800419c:	6824      	ldr	r4, [r4, #0]
 800419e:	4421      	add	r1, r4
 80041a0:	1854      	adds	r4, r2, r1
 80041a2:	42a3      	cmp	r3, r4
 80041a4:	6011      	str	r1, [r2, #0]
 80041a6:	d1e0      	bne.n	800416a <_free_r+0x26>
 80041a8:	681c      	ldr	r4, [r3, #0]
 80041aa:	685b      	ldr	r3, [r3, #4]
 80041ac:	6053      	str	r3, [r2, #4]
 80041ae:	440c      	add	r4, r1
 80041b0:	6014      	str	r4, [r2, #0]
 80041b2:	e7da      	b.n	800416a <_free_r+0x26>
 80041b4:	d902      	bls.n	80041bc <_free_r+0x78>
 80041b6:	230c      	movs	r3, #12
 80041b8:	6003      	str	r3, [r0, #0]
 80041ba:	e7d6      	b.n	800416a <_free_r+0x26>
 80041bc:	6825      	ldr	r5, [r4, #0]
 80041be:	1961      	adds	r1, r4, r5
 80041c0:	428b      	cmp	r3, r1
 80041c2:	bf04      	itt	eq
 80041c4:	6819      	ldreq	r1, [r3, #0]
 80041c6:	685b      	ldreq	r3, [r3, #4]
 80041c8:	6063      	str	r3, [r4, #4]
 80041ca:	bf04      	itt	eq
 80041cc:	1949      	addeq	r1, r1, r5
 80041ce:	6021      	streq	r1, [r4, #0]
 80041d0:	6054      	str	r4, [r2, #4]
 80041d2:	e7ca      	b.n	800416a <_free_r+0x26>
 80041d4:	b003      	add	sp, #12
 80041d6:	bd30      	pop	{r4, r5, pc}
 80041d8:	20000328 	.word	0x20000328

080041dc <__ascii_mbtowc>:
 80041dc:	b082      	sub	sp, #8
 80041de:	b901      	cbnz	r1, 80041e2 <__ascii_mbtowc+0x6>
 80041e0:	a901      	add	r1, sp, #4
 80041e2:	b142      	cbz	r2, 80041f6 <__ascii_mbtowc+0x1a>
 80041e4:	b14b      	cbz	r3, 80041fa <__ascii_mbtowc+0x1e>
 80041e6:	7813      	ldrb	r3, [r2, #0]
 80041e8:	600b      	str	r3, [r1, #0]
 80041ea:	7812      	ldrb	r2, [r2, #0]
 80041ec:	1e10      	subs	r0, r2, #0
 80041ee:	bf18      	it	ne
 80041f0:	2001      	movne	r0, #1
 80041f2:	b002      	add	sp, #8
 80041f4:	4770      	bx	lr
 80041f6:	4610      	mov	r0, r2
 80041f8:	e7fb      	b.n	80041f2 <__ascii_mbtowc+0x16>
 80041fa:	f06f 0001 	mvn.w	r0, #1
 80041fe:	e7f8      	b.n	80041f2 <__ascii_mbtowc+0x16>

08004200 <_malloc_usable_size_r>:
 8004200:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004204:	1f18      	subs	r0, r3, #4
 8004206:	2b00      	cmp	r3, #0
 8004208:	bfbc      	itt	lt
 800420a:	580b      	ldrlt	r3, [r1, r0]
 800420c:	18c0      	addlt	r0, r0, r3
 800420e:	4770      	bx	lr

08004210 <fiprintf>:
 8004210:	b40e      	push	{r1, r2, r3}
 8004212:	b503      	push	{r0, r1, lr}
 8004214:	4601      	mov	r1, r0
 8004216:	ab03      	add	r3, sp, #12
 8004218:	4805      	ldr	r0, [pc, #20]	; (8004230 <fiprintf+0x20>)
 800421a:	f853 2b04 	ldr.w	r2, [r3], #4
 800421e:	6800      	ldr	r0, [r0, #0]
 8004220:	9301      	str	r3, [sp, #4]
 8004222:	f7fe ff59 	bl	80030d8 <_vfiprintf_r>
 8004226:	b002      	add	sp, #8
 8004228:	f85d eb04 	ldr.w	lr, [sp], #4
 800422c:	b003      	add	sp, #12
 800422e:	4770      	bx	lr
 8004230:	20000058 	.word	0x20000058

08004234 <__ascii_wctomb>:
 8004234:	b149      	cbz	r1, 800424a <__ascii_wctomb+0x16>
 8004236:	2aff      	cmp	r2, #255	; 0xff
 8004238:	bf85      	ittet	hi
 800423a:	238a      	movhi	r3, #138	; 0x8a
 800423c:	6003      	strhi	r3, [r0, #0]
 800423e:	700a      	strbls	r2, [r1, #0]
 8004240:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8004244:	bf98      	it	ls
 8004246:	2001      	movls	r0, #1
 8004248:	4770      	bx	lr
 800424a:	4608      	mov	r0, r1
 800424c:	4770      	bx	lr

0800424e <abort>:
 800424e:	b508      	push	{r3, lr}
 8004250:	2006      	movs	r0, #6
 8004252:	f000 f82b 	bl	80042ac <raise>
 8004256:	2001      	movs	r0, #1
 8004258:	f7fd f896 	bl	8001388 <_exit>

0800425c <_raise_r>:
 800425c:	291f      	cmp	r1, #31
 800425e:	b538      	push	{r3, r4, r5, lr}
 8004260:	4604      	mov	r4, r0
 8004262:	460d      	mov	r5, r1
 8004264:	d904      	bls.n	8004270 <_raise_r+0x14>
 8004266:	2316      	movs	r3, #22
 8004268:	6003      	str	r3, [r0, #0]
 800426a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800426e:	bd38      	pop	{r3, r4, r5, pc}
 8004270:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004272:	b112      	cbz	r2, 800427a <_raise_r+0x1e>
 8004274:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004278:	b94b      	cbnz	r3, 800428e <_raise_r+0x32>
 800427a:	4620      	mov	r0, r4
 800427c:	f000 f830 	bl	80042e0 <_getpid_r>
 8004280:	462a      	mov	r2, r5
 8004282:	4601      	mov	r1, r0
 8004284:	4620      	mov	r0, r4
 8004286:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800428a:	f000 b817 	b.w	80042bc <_kill_r>
 800428e:	2b01      	cmp	r3, #1
 8004290:	d00a      	beq.n	80042a8 <_raise_r+0x4c>
 8004292:	1c59      	adds	r1, r3, #1
 8004294:	d103      	bne.n	800429e <_raise_r+0x42>
 8004296:	2316      	movs	r3, #22
 8004298:	6003      	str	r3, [r0, #0]
 800429a:	2001      	movs	r0, #1
 800429c:	e7e7      	b.n	800426e <_raise_r+0x12>
 800429e:	2400      	movs	r4, #0
 80042a0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80042a4:	4628      	mov	r0, r5
 80042a6:	4798      	blx	r3
 80042a8:	2000      	movs	r0, #0
 80042aa:	e7e0      	b.n	800426e <_raise_r+0x12>

080042ac <raise>:
 80042ac:	4b02      	ldr	r3, [pc, #8]	; (80042b8 <raise+0xc>)
 80042ae:	4601      	mov	r1, r0
 80042b0:	6818      	ldr	r0, [r3, #0]
 80042b2:	f7ff bfd3 	b.w	800425c <_raise_r>
 80042b6:	bf00      	nop
 80042b8:	20000058 	.word	0x20000058

080042bc <_kill_r>:
 80042bc:	b538      	push	{r3, r4, r5, lr}
 80042be:	4d07      	ldr	r5, [pc, #28]	; (80042dc <_kill_r+0x20>)
 80042c0:	2300      	movs	r3, #0
 80042c2:	4604      	mov	r4, r0
 80042c4:	4608      	mov	r0, r1
 80042c6:	4611      	mov	r1, r2
 80042c8:	602b      	str	r3, [r5, #0]
 80042ca:	f7fd f84d 	bl	8001368 <_kill>
 80042ce:	1c43      	adds	r3, r0, #1
 80042d0:	d102      	bne.n	80042d8 <_kill_r+0x1c>
 80042d2:	682b      	ldr	r3, [r5, #0]
 80042d4:	b103      	cbz	r3, 80042d8 <_kill_r+0x1c>
 80042d6:	6023      	str	r3, [r4, #0]
 80042d8:	bd38      	pop	{r3, r4, r5, pc}
 80042da:	bf00      	nop
 80042dc:	20000330 	.word	0x20000330

080042e0 <_getpid_r>:
 80042e0:	f7fd b83a 	b.w	8001358 <_getpid>

080042e4 <_init>:
 80042e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042e6:	bf00      	nop
 80042e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80042ea:	bc08      	pop	{r3}
 80042ec:	469e      	mov	lr, r3
 80042ee:	4770      	bx	lr

080042f0 <_fini>:
 80042f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042f2:	bf00      	nop
 80042f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80042f6:	bc08      	pop	{r3}
 80042f8:	469e      	mov	lr, r3
 80042fa:	4770      	bx	lr
